// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Requests/Messages/FortSearchMessage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Networking.Requests.Messages {

  /// <summary>Holder for reflection information generated from POGOProtos/Networking/Requests/Messages/FortSearchMessage.proto</summary>
  public static partial class FortSearchMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Networking/Requests/Messages/FortSearchMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FortSearchMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9QT0dPUHJvdG9zL05ldHdvcmtpbmcvUmVxdWVzdHMvTWVzc2FnZXMvRm9y",
            "dFNlYXJjaE1lc3NhZ2UucHJvdG8SJ1BPR09Qcm90b3MuTmV0d29ya2luZy5S",
            "ZXF1ZXN0cy5NZXNzYWdlcyKGAQoRRm9ydFNlYXJjaE1lc3NhZ2USDwoHZm9y",
            "dF9pZBgBIAEoCRIXCg9wbGF5ZXJfbGF0aXR1ZGUYAiABKAESGAoQcGxheWVy",
            "X2xvbmdpdHVkZRgDIAEoARIVCg1mb3J0X2xhdGl0dWRlGAQgASgBEhYKDmZv",
            "cnRfbG9uZ2l0dWRlGAUgASgBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Requests.Messages.FortSearchMessage), global::POGOProtos.Networking.Requests.Messages.FortSearchMessage.Parser, new[]{ "FortId", "PlayerLatitude", "PlayerLongitude", "FortLatitude", "FortLongitude" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FortSearchMessage : pb::IMessage<FortSearchMessage> {
    private static readonly pb::MessageParser<FortSearchMessage> _parser = new pb::MessageParser<FortSearchMessage>(() => new FortSearchMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FortSearchMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Requests.Messages.FortSearchMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortSearchMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortSearchMessage(FortSearchMessage other) : this() {
      fortId_ = other.fortId_;
      playerLatitude_ = other.playerLatitude_;
      playerLongitude_ = other.playerLongitude_;
      fortLatitude_ = other.fortLatitude_;
      fortLongitude_ = other.fortLongitude_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortSearchMessage Clone() {
      return new FortSearchMessage(this);
    }

    /// <summary>Field number for the "fort_id" field.</summary>
    public const int FortIdFieldNumber = 1;
    private string fortId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FortId {
      get { return fortId_; }
      set {
        fortId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_latitude" field.</summary>
    public const int PlayerLatitudeFieldNumber = 2;
    private double playerLatitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PlayerLatitude {
      get { return playerLatitude_; }
      set {
        playerLatitude_ = value;
      }
    }

    /// <summary>Field number for the "player_longitude" field.</summary>
    public const int PlayerLongitudeFieldNumber = 3;
    private double playerLongitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PlayerLongitude {
      get { return playerLongitude_; }
      set {
        playerLongitude_ = value;
      }
    }

    /// <summary>Field number for the "fort_latitude" field.</summary>
    public const int FortLatitudeFieldNumber = 4;
    private double fortLatitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FortLatitude {
      get { return fortLatitude_; }
      set {
        fortLatitude_ = value;
      }
    }

    /// <summary>Field number for the "fort_longitude" field.</summary>
    public const int FortLongitudeFieldNumber = 5;
    private double fortLongitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FortLongitude {
      get { return fortLongitude_; }
      set {
        fortLongitude_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FortSearchMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FortSearchMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FortId != other.FortId) return false;
      if (PlayerLatitude != other.PlayerLatitude) return false;
      if (PlayerLongitude != other.PlayerLongitude) return false;
      if (FortLatitude != other.FortLatitude) return false;
      if (FortLongitude != other.FortLongitude) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FortId.Length != 0) hash ^= FortId.GetHashCode();
      if (PlayerLatitude != 0D) hash ^= PlayerLatitude.GetHashCode();
      if (PlayerLongitude != 0D) hash ^= PlayerLongitude.GetHashCode();
      if (FortLatitude != 0D) hash ^= FortLatitude.GetHashCode();
      if (FortLongitude != 0D) hash ^= FortLongitude.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FortId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FortId);
      }
      if (PlayerLatitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(PlayerLatitude);
      }
      if (PlayerLongitude != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(PlayerLongitude);
      }
      if (FortLatitude != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(FortLatitude);
      }
      if (FortLongitude != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(FortLongitude);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FortId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FortId);
      }
      if (PlayerLatitude != 0D) {
        size += 1 + 8;
      }
      if (PlayerLongitude != 0D) {
        size += 1 + 8;
      }
      if (FortLatitude != 0D) {
        size += 1 + 8;
      }
      if (FortLongitude != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FortSearchMessage other) {
      if (other == null) {
        return;
      }
      if (other.FortId.Length != 0) {
        FortId = other.FortId;
      }
      if (other.PlayerLatitude != 0D) {
        PlayerLatitude = other.PlayerLatitude;
      }
      if (other.PlayerLongitude != 0D) {
        PlayerLongitude = other.PlayerLongitude;
      }
      if (other.FortLatitude != 0D) {
        FortLatitude = other.FortLatitude;
      }
      if (other.FortLongitude != 0D) {
        FortLongitude = other.FortLongitude;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            FortId = input.ReadString();
            break;
          }
          case 17: {
            PlayerLatitude = input.ReadDouble();
            break;
          }
          case 25: {
            PlayerLongitude = input.ReadDouble();
            break;
          }
          case 33: {
            FortLatitude = input.ReadDouble();
            break;
          }
          case 41: {
            FortLongitude = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
