// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Networking.Responses.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Networking.Responses {

  /// <summary>Holder for reflection information generated from POGOProtos.Networking.Responses.proto</summary>
  public static partial class POGOProtosNetworkingResponsesReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos.Networking.Responses.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static POGOProtosNetworkingResponsesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVQT0dPUHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9uc2VzLnByb3RvEh9QT0dP",
            "UHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9uc2VzGhpQT0dPUHJvdG9zLkludmVu",
            "dG9yeS5wcm90bxoVUE9HT1Byb3Rvcy5EYXRhLnByb3RvGh1QT0dPUHJvdG9z",
            "LkRhdGEuQ2FwdHVyZS5wcm90bxogUE9HT1Byb3Rvcy5TZXR0aW5ncy5NYXN0",
            "ZXIucHJvdG8aFFBPR09Qcm90b3MuTWFwLnByb3RvGhxQT0dPUHJvdG9zLkRh",
            "dGEuQmF0dGxlLnByb3RvGhZQT0dPUHJvdG9zLkVudW1zLnByb3RvGhxQT0dP",
            "UHJvdG9zLkRhdGEuUGxheWVyLnByb3RvGhlQT0dPUHJvdG9zLkRhdGEuR3lt",
            "LnByb3RvGh9QT0dPUHJvdG9zLkludmVudG9yeS5JdGVtLnByb3RvGhxQT0dP",
            "UHJvdG9zLk1hcC5Qb2tlbW9uLnByb3RvGhlQT0dPUHJvdG9zLk1hcC5Gb3J0",
            "LnByb3RvGhpQT0dPUHJvdG9zLkRhdGEuTG9ncy5wcm90bxoZUE9HT1Byb3Rv",
            "cy5TZXR0aW5ncy5wcm90byLJAQoaU2V0RmF2b3JpdGVQb2tlbW9uUmVzcG9u",
            "c2USUgoGcmVzdWx0GAEgASgOMkIuUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJl",
            "c3BvbnNlcy5TZXRGYXZvcml0ZVBva2Vtb25SZXNwb25zZS5SZXN1bHQiVwoG",
            "UmVzdWx0EgkKBVVOU0VUEAASCwoHU1VDQ0VTUxABEhsKF0VSUk9SX1BPS0VN",
            "T05fTk9UX0ZPVU5EEAISGAoURVJST1JfUE9LRU1PTl9JU19FR0cQAyK+AgoW",
            "VXNlSXRlbVhwQm9vc3RSZXNwb25zZRJOCgZyZXN1bHQYASABKA4yPi5QT0dP",
            "UHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9uc2VzLlVzZUl0ZW1YcEJvb3N0UmVz",
            "cG9uc2UuUmVzdWx0EjkKDWFwcGxpZWRfaXRlbXMYAiABKAsyIi5QT0dPUHJv",
            "dG9zLkludmVudG9yeS5BcHBsaWVkSXRlbXMimAEKBlJlc3VsdBIJCgVVTlNF",
            "VBAAEgsKB1NVQ0NFU1MQARIbChdFUlJPUl9JTlZBTElEX0lURU1fVFlQRRAC",
            "EiEKHUVSUk9SX1hQX0JPT1NUX0FMUkVBRFlfQUNUSVZFEAMSHAoYRVJST1Jf",
            "Tk9fSVRFTVNfUkVNQUlOSU5HEAQSGAoURVJST1JfTE9DQVRJT05fVU5TRVQQ",
            "BSLsAQojRG93bmxvYWRSZW1vdGVDb25maWdWZXJzaW9uUmVzcG9uc2USWwoG",
            "cmVzdWx0GAEgASgOMksuUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJlc3BvbnNl",
            "cy5Eb3dubG9hZFJlbW90ZUNvbmZpZ1ZlcnNpb25SZXNwb25zZS5SZXN1bHQS",
            "IwobaXRlbV90ZW1wbGF0ZXNfdGltZXN0YW1wX21zGAIgASgEEiEKGWFzc2V0",
            "X2RpZ2VzdF90aW1lc3RhbXBfbXMYAyABKAQiIAoGUmVzdWx0EgkKBVVOU0VU",
            "EAASCwoHU1VDQ0VTUxABImYKFEdldEludmVudG9yeVJlc3BvbnNlEg8KB3N1",
            "Y2Nlc3MYASABKAgSPQoPaW52ZW50b3J5X2RlbHRhGAIgASgLMiQuUE9HT1By",
            "b3Rvcy5JbnZlbnRvcnkuSW52ZW50b3J5RGVsdGEirQIKIUVuY291bnRlclR1",
            "dG9yaWFsQ29tcGxldGVSZXNwb25zZRJZCgZyZXN1bHQYASABKA4ySS5QT0dP",
            "UHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9uc2VzLkVuY291bnRlclR1dG9yaWFs",
            "Q29tcGxldGVSZXNwb25zZS5SZXN1bHQSMgoMcG9rZW1vbl9kYXRhGAIgASgL",
            "MhwuUE9HT1Byb3Rvcy5EYXRhLlBva2Vtb25EYXRhEjwKDWNhcHR1cmVfYXdh",
            "cmQYAyABKAsyJS5QT0dPUHJvdG9zLkRhdGEuQ2FwdHVyZS5DYXB0dXJlQXdh",
            "cmQiOwoGUmVzdWx0EgkKBVVOU0VUEAASCwoHU1VDQ0VTUxABEhkKFUVSUk9S",
            "X0lOVkFMSURfUE9LRU1PThACIuEBChVVc2VJdGVtUG90aW9uUmVzcG9uc2US",
            "TQoGcmVzdWx0GAEgASgOMj0uUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJlc3Bv",
            "bnNlcy5Vc2VJdGVtUG90aW9uUmVzcG9uc2UuUmVzdWx0Eg8KB3N0YW1pbmEY",
            "AiABKAUiaAoGUmVzdWx0EgkKBVVOU0VUEAASCwoHU1VDQ0VTUxABEhQKEEVS",
            "Uk9SX05PX1BPS0VNT04QAhIUChBFUlJPUl9DQU5OT1RfVVNFEAMSGgoWRVJS",
            "T1JfREVQTE9ZRURfVE9fRk9SVBAEIvAJCh1Eb3dubG9hZEl0ZW1UZW1wbGF0",
            "ZXNSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEmMKDml0ZW1fdGVtcGxhdGVz",
            "GAIgAygLMksuUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJlc3BvbnNlcy5Eb3du",
            "bG9hZEl0ZW1UZW1wbGF0ZXNSZXNwb25zZS5JdGVtVGVtcGxhdGUSFAoMdGlt",
            "ZXN0YW1wX21zGAMgASgEGsIICgxJdGVtVGVtcGxhdGUSEwoLdGVtcGxhdGVf",
            "aWQYASABKAkSRQoQcG9rZW1vbl9zZXR0aW5ncxgCIAEoCzIrLlBPR09Qcm90",
            "b3MuU2V0dGluZ3MuTWFzdGVyLlBva2Vtb25TZXR0aW5ncxI/Cg1pdGVtX3Nl",
            "dHRpbmdzGAMgASgLMiguUE9HT1Byb3Rvcy5TZXR0aW5ncy5NYXN0ZXIuSXRl",
            "bVNldHRpbmdzEj8KDW1vdmVfc2V0dGluZ3MYBCABKAsyKC5QT0dPUHJvdG9z",
            "LlNldHRpbmdzLk1hc3Rlci5Nb3ZlU2V0dGluZ3MSUAoWbW92ZV9zZXF1ZW5j",
            "ZV9zZXR0aW5ncxgFIAEoCzIwLlBPR09Qcm90b3MuU2V0dGluZ3MuTWFzdGVy",
            "Lk1vdmVTZXF1ZW5jZVNldHRpbmdzEkkKDnR5cGVfZWZmZWN0aXZlGAggASgL",
            "MjEuUE9HT1Byb3Rvcy5TZXR0aW5ncy5NYXN0ZXIuVHlwZUVmZmVjdGl2ZVNl",
            "dHRpbmdzEkEKDmJhZGdlX3NldHRpbmdzGAogASgLMikuUE9HT1Byb3Rvcy5T",
            "ZXR0aW5ncy5NYXN0ZXIuQmFkZ2VTZXR0aW5ncxI6CgZjYW1lcmEYCyABKAsy",
            "Ki5QT0dPUHJvdG9zLlNldHRpbmdzLk1hc3Rlci5DYW1lcmFTZXR0aW5ncxJF",
            "CgxwbGF5ZXJfbGV2ZWwYDCABKAsyLy5QT0dPUHJvdG9zLlNldHRpbmdzLk1h",
            "c3Rlci5QbGF5ZXJMZXZlbFNldHRpbmdzEj8KCWd5bV9sZXZlbBgNIAEoCzIs",
            "LlBPR09Qcm90b3MuU2V0dGluZ3MuTWFzdGVyLkd5bUxldmVsU2V0dGluZ3MS",
            "RgoPYmF0dGxlX3NldHRpbmdzGA4gASgLMi0uUE9HT1Byb3Rvcy5TZXR0aW5n",
            "cy5NYXN0ZXIuR3ltQmF0dGxlU2V0dGluZ3MSSQoSZW5jb3VudGVyX3NldHRp",
            "bmdzGA8gASgLMi0uUE9HT1Byb3Rvcy5TZXR0aW5ncy5NYXN0ZXIuRW5jb3Vu",
            "dGVyU2V0dGluZ3MSRAoQaWFwX2l0ZW1fZGlzcGxheRgQIAEoCzIqLlBPR09Q",
            "cm90b3MuU2V0dGluZ3MuTWFzdGVyLklhcEl0ZW1EaXNwbGF5Ej0KDGlhcF9z",
            "ZXR0aW5ncxgRIAEoCzInLlBPR09Qcm90b3MuU2V0dGluZ3MuTWFzdGVyLklh",
            "cFNldHRpbmdzEkwKEHBva2Vtb25fdXBncmFkZXMYEiABKAsyMi5QT0dPUHJv",
            "dG9zLlNldHRpbmdzLk1hc3Rlci5Qb2tlbW9uVXBncmFkZVNldHRpbmdzEkoK",
            "D2VxdWlwcGVkX2JhZGdlcxgTIAEoCzIxLlBPR09Qcm90b3MuU2V0dGluZ3Mu",
            "TWFzdGVyLkVxdWlwcGVkQmFkZ2VTZXR0aW5ncyJTChdHZXREb3dubG9hZFVy",
            "bHNSZXNwb25zZRI4Cg1kb3dubG9hZF91cmxzGAEgAygLMiEuUE9HT1Byb3Rv",
            "cy5EYXRhLkRvd25sb2FkVXJsRW50cnkiqwEKGUNvbGxlY3REYWlseUJvbnVz",
            "UmVzcG9uc2USUQoGcmVzdWx0GAEgASgOMkEuUE9HT1Byb3Rvcy5OZXR3b3Jr",
            "aW5nLlJlc3BvbnNlcy5Db2xsZWN0RGFpbHlCb251c1Jlc3BvbnNlLlJlc3Vs",
            "dCI7CgZSZXN1bHQSCQoFVU5TRVQQABILCgdTVUNDRVNTEAESCwoHRkFJTFVS",
            "RRACEgwKCFRPT19TT09OEAMi6gIKFURpc2tFbmNvdW50ZXJSZXNwb25zZRJN",
            "CgZyZXN1bHQYASABKA4yPS5QT0dPUHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9u",
            "c2VzLkRpc2tFbmNvdW50ZXJSZXNwb25zZS5SZXN1bHQSMgoMcG9rZW1vbl9k",
            "YXRhGAIgASgLMhwuUE9HT1Byb3Rvcy5EYXRhLlBva2Vtb25EYXRhEkgKE2Nh",
            "cHR1cmVfcHJvYmFiaWxpdHkYAyABKAsyKy5QT0dPUHJvdG9zLkRhdGEuQ2Fw",
            "dHVyZS5DYXB0dXJlUHJvYmFiaWxpdHkigwEKBlJlc3VsdBILCgdVTktOT1dO",
            "EAASCwoHU1VDQ0VTUxABEhEKDU5PVF9BVkFJTEFCTEUQAhIQCgxOT1RfSU5f",
            "UkFOR0UQAxIeChpFTkNPVU5URVJfQUxSRUFEWV9GSU5JU0hFRBAEEhoKFlBP",
            "S0VNT05fSU5WRU5UT1JZX0ZVTEwQBSLQAQoYR2V0UGxheWVyUHJvZmlsZVJl",
            "c3BvbnNlElAKBnJlc3VsdBgBIAEoDjJALlBPR09Qcm90b3MuTmV0d29ya2lu",
            "Zy5SZXNwb25zZXMuR2V0UGxheWVyUHJvZmlsZVJlc3BvbnNlLlJlc3VsdBIS",
            "CgpzdGFydF90aW1lGAIgASgDEiwKBmJhZGdlcxgDIAMoCzIcLlBPR09Qcm90",
            "b3MuRGF0YS5QbGF5ZXJCYWRnZSIgCgZSZXN1bHQSCQoFVU5TRVQQABILCgdT",
            "VUNDRVNTEAEidQoVR2V0TWFwT2JqZWN0c1Jlc3BvbnNlEioKCW1hcF9jZWxs",
            "cxgBIAMoCzIXLlBPR09Qcm90b3MuTWFwLk1hcENlbGwSMAoGc3RhdHVzGAIg",
            "ASgOMiAuUE9HT1Byb3Rvcy5NYXAuTWFwT2JqZWN0c1N0YXR1cyKxAQoWVXNl",
            "SXRlbUNhcHR1cmVSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEhkKEWl0ZW1f",
            "Y2FwdHVyZV9tdWx0GAIgASgBEhYKDml0ZW1fZmxlZV9tdWx0GAMgASgBEhUK",
            "DXN0b3BfbW92ZW1lbnQYBCABKAgSEwoLc3RvcF9hdHRhY2sYBSABKAgSEgoK",
            "dGFyZ2V0X21heBgGIAEoCBITCgt0YXJnZXRfc2xvdxgHIAEoCCKMAwoRQXR0",
            "YWNrR3ltUmVzcG9uc2USSQoGcmVzdWx0GAEgASgOMjkuUE9HT1Byb3Rvcy5O",
            "ZXR3b3JraW5nLlJlc3BvbnNlcy5BdHRhY2tHeW1SZXNwb25zZS5SZXN1bHQS",
            "NQoKYmF0dGxlX2xvZxgCIAEoCzIhLlBPR09Qcm90b3MuRGF0YS5CYXR0bGUu",
            "QmF0dGxlTG9nEhEKCWJhdHRsZV9pZBgDIAEoCRJCCg9hY3RpdmVfZGVmZW5k",
            "ZXIYBCABKAsyKS5QT0dPUHJvdG9zLkRhdGEuQmF0dGxlLkJhdHRsZVBva2Vt",
            "b25JbmZvEkIKD2FjdGl2ZV9hdHRhY2tlchgFIAEoCzIpLlBPR09Qcm90b3Mu",
            "RGF0YS5CYXR0bGUuQmF0dGxlUG9rZW1vbkluZm8iWgoGUmVzdWx0EgkKBVVO",
            "U0VUEAASCwoHU1VDQ0VTUxABEiAKHEVSUk9SX0lOVkFMSURfQVRUQUNLX0FD",
            "VElPTlMQAhIWChJFUlJPUl9OT1RfSU5fUkFOR0UQAyJhChxNYXJrVHV0b3Jp",
            "YWxDb21wbGV0ZVJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSMAoLcGxheWVy",
            "X2RhdGEYAiABKAsyGy5QT0dPUHJvdG9zLkRhdGEuUGxheWVyRGF0YSLRAQoa",
            "U2V0Q29udGFjdFNldHRpbmdzUmVzcG9uc2USUgoGc3RhdHVzGAEgASgOMkIu",
            "UE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJlc3BvbnNlcy5TZXRDb250YWN0U2V0",
            "dGluZ3NSZXNwb25zZS5TdGF0dXMSMAoLcGxheWVyX2RhdGEYAiABKAsyGy5Q",
            "T0dPUHJvdG9zLkRhdGEuUGxheWVyRGF0YSItCgZTdGF0dXMSCQoFVU5TRVQQ",
            "ABILCgdTVUNDRVNTEAESCwoHRkFJTFVSRRACIoUDChlHZXRJbmNlbnNlUG9r",
            "ZW1vblJlc3BvbnNlElEKBnJlc3VsdBgBIAEoDjJBLlBPR09Qcm90b3MuTmV0",
            "d29ya2luZy5SZXNwb25zZXMuR2V0SW5jZW5zZVBva2Vtb25SZXNwb25zZS5S",
            "ZXN1bHQSLwoKcG9rZW1vbl9pZBgCIAEoDjIbLlBPR09Qcm90b3MuRW51bXMu",
            "UG9rZW1vbklkEhAKCGxhdGl0dWRlGAMgASgBEhEKCWxvbmdpdHVkZRgEIAEo",
            "ARIaChJlbmNvdW50ZXJfbG9jYXRpb24YBSABKAkSFAoMZW5jb3VudGVyX2lk",
            "GAYgASgGEh4KFmRpc2FwcGVhcl90aW1lc3RhbXBfbXMYByABKAMibQoGUmVz",
            "dWx0Eh0KGUlOQ0VOU0VfRU5DT1VOVEVSX1VOS05PV04QABIfChtJTkNFTlNF",
            "X0VOQ09VTlRFUl9BVkFJTEFCTEUQARIjCh9JTkNFTlNFX0VOQ09VTlRFUl9O",
            "T1RfQVZBSUxBQkxFEAIiVgoRR2V0UGxheWVyUmVzcG9uc2USDwoHc3VjY2Vz",
            "cxgBIAEoCBIwCgtwbGF5ZXJfZGF0YRgCIAEoCzIbLlBPR09Qcm90b3MuRGF0",
            "YS5QbGF5ZXJEYXRhIuMBChJFcXVpcEJhZGdlUmVzcG9uc2USSgoGcmVzdWx0",
            "GAEgASgOMjouUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJlc3BvbnNlcy5FcXVp",
            "cEJhZGdlUmVzcG9uc2UuUmVzdWx0EjcKCGVxdWlwcGVkGAIgASgLMiUuUE9H",
            "T1Byb3Rvcy5EYXRhLlBsYXllci5FcXVpcHBlZEJhZGdlIkgKBlJlc3VsdBIJ",
            "CgVVTlNFVBAAEgsKB1NVQ0NFU1MQARITCg9DT09MRE9XTl9BQ1RJVkUQAhIR",
            "Cg1OT1RfUVVBTElGSUVEEAMiqAQKGUZvcnREZXBsb3lQb2tlbW9uUmVzcG9u",
            "c2USUQoGcmVzdWx0GAEgASgOMkEuUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJl",
            "c3BvbnNlcy5Gb3J0RGVwbG95UG9rZW1vblJlc3BvbnNlLlJlc3VsdBJKCgxm",
            "b3J0X2RldGFpbHMYAiABKAsyNC5QT0dPUHJvdG9zLk5ldHdvcmtpbmcuUmVz",
            "cG9uc2VzLkZvcnREZXRhaWxzUmVzcG9uc2USMgoMcG9rZW1vbl9kYXRhGAMg",
            "ASgLMhwuUE9HT1Byb3Rvcy5EYXRhLlBva2Vtb25EYXRhEjAKCWd5bV9zdGF0",
            "ZRgEIAEoCzIdLlBPR09Qcm90b3MuRGF0YS5HeW0uR3ltU3RhdGUihQIKBlJl",
            "c3VsdBIRCg1OT19SRVNVTFRfU0VUEAASCwoHU1VDQ0VTUxABEiUKIUVSUk9S",
            "X0FMUkVBRFlfSEFTX1BPS0VNT05fT05fRk9SVBACEiEKHUVSUk9SX09QUE9T",
            "SU5HX1RFQU1fT1dOU19GT1JUEAMSFgoSRVJST1JfRk9SVF9JU19GVUxMEAQS",
            "FgoSRVJST1JfTk9UX0lOX1JBTkdFEAUSHAoYRVJST1JfUExBWUVSX0hBU19O",
            "T19URUFNEAYSHQoZRVJST1JfUE9LRU1PTl9OT1RfRlVMTF9IUBAHEiQKIEVS",
            "Uk9SX1BMQVlFUl9CRUxPV19NSU5JTVVNX0xFVkVMEAgiQwodR2V0U3VnZ2Vz",
            "dGVkQ29kZW5hbWVzUmVzcG9uc2USEQoJY29kZW5hbWVzGAEgAygJEg8KB3N1",
            "Y2Nlc3MYAiABKAgiuwMKEkZvcnRTZWFyY2hSZXNwb25zZRJKCgZyZXN1bHQY",
            "ASABKA4yOi5QT0dPUHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9uc2VzLkZvcnRT",
            "ZWFyY2hSZXNwb25zZS5SZXN1bHQSOwoNaXRlbXNfYXdhcmRlZBgCIAMoCzIk",
            "LlBPR09Qcm90b3MuSW52ZW50b3J5Lkl0ZW0uSXRlbUF3YXJkEhQKDGdlbXNf",
            "YXdhcmRlZBgDIAEoBRI2ChBwb2tlbW9uX2RhdGFfZWdnGAQgASgLMhwuUE9H",
            "T1Byb3Rvcy5EYXRhLlBva2Vtb25EYXRhEhoKEmV4cGVyaWVuY2VfYXdhcmRl",
            "ZBgFIAEoBRImCh5jb29sZG93bl9jb21wbGV0ZV90aW1lc3RhbXBfbXMYBiAB",
            "KAMSIgoaY2hhaW5faGFja19zZXF1ZW5jZV9udW1iZXIYByABKAUiZgoGUmVz",
            "dWx0EhEKDU5PX1JFU1VMVF9TRVQQABILCgdTVUNDRVNTEAESEAoMT1VUX09G",
            "X1JBTkdFEAISFgoSSU5fQ09PTERPV05fUEVSSU9EEAMSEgoOSU5WRU5UT1JZ",
            "X0ZVTEwQBCLXAQoRU2V0QXZhdGFyUmVzcG9uc2USSQoGc3RhdHVzGAEgASgO",
            "MjkuUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJlc3BvbnNlcy5TZXRBdmF0YXJS",
            "ZXNwb25zZS5TdGF0dXMSMAoLcGxheWVyX2RhdGEYAiABKAsyGy5QT0dPUHJv",
            "dG9zLkRhdGEuUGxheWVyRGF0YSJFCgZTdGF0dXMSCQoFVU5TRVQQABILCgdT",
            "VUNDRVNTEAESFgoSQVZBVEFSX0FMUkVBRFlfU0VUEAISCwoHRkFJTFVSRRAD",
            "IrQEChFFbmNvdW50ZXJSZXNwb25zZRI5Cgx3aWxkX3Bva2Vtb24YASABKAsy",
            "Iy5QT0dPUHJvdG9zLk1hcC5Qb2tlbW9uLldpbGRQb2tlbW9uElEKCmJhY2tn",
            "cm91bmQYAiABKA4yPS5QT0dPUHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9uc2Vz",
            "LkVuY291bnRlclJlc3BvbnNlLkJhY2tncm91bmQSSQoGc3RhdHVzGAMgASgO",
            "MjkuUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJlc3BvbnNlcy5FbmNvdW50ZXJS",
            "ZXNwb25zZS5TdGF0dXMSSAoTY2FwdHVyZV9wcm9iYWJpbGl0eRgEIAEoCzIr",
            "LlBPR09Qcm90b3MuRGF0YS5DYXB0dXJlLkNhcHR1cmVQcm9iYWJpbGl0eSIi",
            "CgpCYWNrZ3JvdW5kEggKBFBBUksQABIKCgZERVNFUlQQASLXAQoGU3RhdHVz",
            "EhMKD0VOQ09VTlRFUl9FUlJPUhAAEhUKEUVOQ09VTlRFUl9TVUNDRVNTEAES",
            "FwoTRU5DT1VOVEVSX05PVF9GT1VORBACEhQKEEVOQ09VTlRFUl9DTE9TRUQQ",
            "AxIaChZFTkNPVU5URVJfUE9LRU1PTl9GTEVEEAQSGgoWRU5DT1VOVEVSX05P",
            "VF9JTl9SQU5HRRAFEh4KGkVOQ09VTlRFUl9BTFJFQURZX0hBUFBFTkVEEAYS",
            "GgoWUE9LRU1PTl9JTlZFTlRPUllfRlVMTBAHIuEBChVVc2VJdGVtUmV2aXZl",
            "UmVzcG9uc2USTQoGcmVzdWx0GAEgASgOMj0uUE9HT1Byb3Rvcy5OZXR3b3Jr",
            "aW5nLlJlc3BvbnNlcy5Vc2VJdGVtUmV2aXZlUmVzcG9uc2UuUmVzdWx0Eg8K",
            "B3N0YW1pbmEYAiABKAUiaAoGUmVzdWx0EgkKBVVOU0VUEAASCwoHU1VDQ0VT",
            "UxABEhQKEEVSUk9SX05PX1BPS0VNT04QAhIUChBFUlJPUl9DQU5OT1RfVVNF",
            "EAMSGgoWRVJST1JfREVQTE9ZRURfVE9fRk9SVBAEIoABChpDaGVja0F3YXJk",
            "ZWRCYWRnZXNSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgIEjMKDmF3YXJkZWRf",
            "YmFkZ2VzGAIgAygOMhsuUE9HT1Byb3Rvcy5FbnVtcy5CYWRnZVR5cGUSHAoU",
            "YXdhcmRlZF9iYWRnZV9sZXZlbHMYAyADKAUisAIKFUNsYWltQ29kZW5hbWVS",
            "ZXNwb25zZRIQCghjb2RlbmFtZRgBIAEoCRIUCgx1c2VyX21lc3NhZ2UYAiAB",
            "KAkSFQoNaXNfYXNzaWduYWJsZRgDIAEoCBJNCgZzdGF0dXMYBCABKA4yPS5Q",
            "T0dPUHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9uc2VzLkNsYWltQ29kZW5hbWVS",
            "ZXNwb25zZS5TdGF0dXMiiAEKBlN0YXR1cxIJCgVVTlNFVBAAEgsKB1NVQ0NF",
            "U1MQARIaChZDT0RFTkFNRV9OT1RfQVZBSUxBQkxFEAISFgoSQ09ERU5BTUVf",
            "Tk9UX1ZBTElEEAMSEQoNQ1VSUkVOVF9PV05FUhAEEh8KG0NPREVOQU1FX0NI",
            "QU5HRV9OT1RfQUxMT1dFRBAFIsQBChJVc2VJdGVtR3ltUmVzcG9uc2USSgoG",
            "cmVzdWx0GAEgASgOMjouUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJlc3BvbnNl",
            "cy5Vc2VJdGVtR3ltUmVzcG9uc2UuUmVzdWx0EhIKCnVwZGF0ZWRfZ3AYAiAB",
            "KAMiTgoGUmVzdWx0EgkKBVVOU0VUEAASCwoHU1VDQ0VTUxABEhQKEEVSUk9S",
            "X0NBTk5PVF9VU0UQAhIWChJFUlJPUl9OT1RfSU5fUkFOR0UQAyIZChdBZGRG",
            "b3J0TW9kaWZpZXJSZXNwb25zZSLCAgoeQ2hlY2tDb2RlbmFtZUF2YWlsYWJs",
            "ZVJlc3BvbnNlEhAKCGNvZGVuYW1lGAEgASgJEhQKDHVzZXJfbWVzc2FnZRgC",
            "IAEoCRIVCg1pc19hc3NpZ25hYmxlGAMgASgIElYKBnN0YXR1cxgEIAEoDjJG",
            "LlBPR09Qcm90b3MuTmV0d29ya2luZy5SZXNwb25zZXMuQ2hlY2tDb2RlbmFt",
            "ZUF2YWlsYWJsZVJlc3BvbnNlLlN0YXR1cyKIAQoGU3RhdHVzEgkKBVVOU0VU",
            "EAASCwoHU1VDQ0VTUxABEhoKFkNPREVOQU1FX05PVF9BVkFJTEFCTEUQAhIW",
            "ChJDT0RFTkFNRV9OT1RfVkFMSUQQAxIRCg1DVVJSRU5UX09XTkVSEAQSHwob",
            "Q09ERU5BTUVfQ0hBTkdFX05PVF9BTExPV0VEEAUiHwoMRWNob1Jlc3BvbnNl",
            "Eg8KB2NvbnRleHQYASABKAkilgEKFFBsYXllclVwZGF0ZVJlc3BvbnNlEjoK",
            "DXdpbGRfcG9rZW1vbnMYASADKAsyIy5QT0dPUHJvdG9zLk1hcC5Qb2tlbW9u",
            "LldpbGRQb2tlbW9uEiwKBWZvcnRzGAIgAygLMh0uUE9HT1Byb3Rvcy5NYXAu",
            "Rm9ydC5Gb3J0RGF0YRIUCgxmb3J0c19uZWFyYnkYAyABKAUiwgIKFlVwZ3Jh",
            "ZGVQb2tlbW9uUmVzcG9uc2USTgoGcmVzdWx0GAEgASgOMj4uUE9HT1Byb3Rv",
            "cy5OZXR3b3JraW5nLlJlc3BvbnNlcy5VcGdyYWRlUG9rZW1vblJlc3BvbnNl",
            "LlJlc3VsdBI2ChB1cGdyYWRlZF9wb2tlbW9uGAIgASgLMhwuUE9HT1Byb3Rv",
            "cy5EYXRhLlBva2Vtb25EYXRhIp8BCgZSZXN1bHQSCQoFVU5TRVQQABILCgdT",
            "VUNDRVNTEAESGwoXRVJST1JfUE9LRU1PTl9OT1RfRk9VTkQQAhIgChxFUlJP",
            "Ul9JTlNVRkZJQ0lFTlRfUkVTT1VSQ0VTEAMSHwobRVJST1JfVVBHUkFERV9O",
            "T1RfQVZBSUxBQkxFEAQSHQoZRVJST1JfUE9LRU1PTl9JU19ERVBMT1lFRBAF",
            "IsECChRDYXRjaFBva2Vtb25SZXNwb25zZRJRCgZzdGF0dXMYASABKA4yQS5Q",
            "T0dPUHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9uc2VzLkNhdGNoUG9rZW1vblJl",
            "c3BvbnNlLkNhdGNoU3RhdHVzEhQKDG1pc3NfcGVyY2VudBgCIAEoARIbChNj",
            "YXB0dXJlZF9wb2tlbW9uX2lkGAMgASgGEjwKDWNhcHR1cmVfYXdhcmQYBCAB",
            "KAsyJS5QT0dPUHJvdG9zLkRhdGEuQ2FwdHVyZS5DYXB0dXJlQXdhcmQiZQoL",
            "Q2F0Y2hTdGF0dXMSDwoLQ0FUQ0hfRVJST1IQABIRCg1DQVRDSF9TVUNDRVNT",
            "EAESEAoMQ0FUQ0hfRVNDQVBFEAISDgoKQ0FUQ0hfRkxFRRADEhAKDENBVENI",
            "X01JU1NFRBAEIq8FChZTdGFydEd5bUJhdHRsZVJlc3BvbnNlEk4KBnJlc3Vs",
            "dBgBIAEoDjI+LlBPR09Qcm90b3MuTmV0d29ya2luZy5SZXNwb25zZXMuU3Rh",
            "cnRHeW1CYXR0bGVSZXNwb25zZS5SZXN1bHQSIQoZYmF0dGxlX3N0YXJ0X3Rp",
            "bWVzdGFtcF9tcxgCIAEoAxIfChdiYXR0bGVfZW5kX3RpbWVzdGFtcF9tcxgD",
            "IAEoAxIRCgliYXR0bGVfaWQYBCABKAkSOwoIZGVmZW5kZXIYBSABKAsyKS5Q",
            "T0dPUHJvdG9zLkRhdGEuQmF0dGxlLkJhdHRsZVBhcnRpY2lwYW50EjUKCmJh",
            "dHRsZV9sb2cYBiABKAsyIS5QT0dPUHJvdG9zLkRhdGEuQmF0dGxlLkJhdHRs",
            "ZUxvZyL5AgoGUmVzdWx0EgkKBVVOU0VUEAASCwoHU1VDQ0VTUxABEhcKE0VS",
            "Uk9SX0dZTV9OT1RfRk9VTkQQAhIVChFFUlJPUl9HWU1fTkVVVFJBTBADEhgK",
            "FEVSUk9SX0dZTV9XUk9OR19URUFNEAQSEwoPRVJST1JfR1lNX0VNUFRZEAUS",
            "GgoWRVJST1JfSU5WQUxJRF9ERUZFTkRFUhAGEikKJUVSUk9SX1RSQUlOSU5H",
            "X0lOVkFMSURfQVRUQUNLRVJfQ09VTlQQBxIdChlFUlJPUl9BTExfUE9LRU1P",
            "Tl9GQUlOVEVEEAgSGgoWRVJST1JfVE9PX01BTllfQkFUVExFUxAJEhoKFkVS",
            "Uk9SX1RPT19NQU5ZX1BMQVlFUlMQChIcChhFUlJPUl9HWU1fQkFUVExFX0xP",
            "Q0tPVVQQCxIkCiBFUlJPUl9QTEFZRVJfQkVMT1dfTUlOSU1VTV9MRVZFTBAM",
            "EhYKEkVSUk9SX05PVF9JTl9SQU5HRRANIpcCChZMZXZlbFVwUmV3YXJkc1Jl",
            "c3BvbnNlEk4KBnJlc3VsdBgBIAEoDjI+LlBPR09Qcm90b3MuTmV0d29ya2lu",
            "Zy5SZXNwb25zZXMuTGV2ZWxVcFJld2FyZHNSZXNwb25zZS5SZXN1bHQSOwoN",
            "aXRlbXNfYXdhcmRlZBgCIAMoCzIkLlBPR09Qcm90b3MuSW52ZW50b3J5Lkl0",
            "ZW0uSXRlbUF3YXJkEjkKDml0ZW1zX3VubG9ja2VkGAQgAygOMiEuUE9HT1By",
            "b3Rvcy5JbnZlbnRvcnkuSXRlbS5JdGVtSWQiNQoGUmVzdWx0EgkKBVVOU0VU",
            "EAASCwoHU1VDQ0VTUxABEhMKD0FXQVJERURfQUxSRUFEWRACIvwCChNGb3J0",
            "RGV0YWlsc1Jlc3BvbnNlEg8KB2ZvcnRfaWQYASABKAkSLwoKdGVhbV9jb2xv",
            "chgCIAEoDjIbLlBPR09Qcm90b3MuRW51bXMuVGVhbUNvbG9yEjIKDHBva2Vt",
            "b25fZGF0YRgDIAEoCzIcLlBPR09Qcm90b3MuRGF0YS5Qb2tlbW9uRGF0YRIM",
            "CgRuYW1lGAQgASgJEhIKCmltYWdlX3VybHMYBSADKAkSCgoCZnAYBiABKAUS",
            "DwoHc3RhbWluYRgHIAEoBRITCgttYXhfc3RhbWluYRgIIAEoBRIrCgR0eXBl",
            "GAkgASgOMh0uUE9HT1Byb3Rvcy5NYXAuRm9ydC5Gb3J0VHlwZRIQCghsYXRp",
            "dHVkZRgKIAEoARIRCglsb25naXR1ZGUYCyABKAESEwoLZGVzY3JpcHRpb24Y",
            "DCABKAkSNAoJbW9kaWZpZXJzGA0gAygLMiEuUE9HT1Byb3Rvcy5NYXAuRm9y",
            "dC5Gb3J0TW9kaWZpZXIilwIKIUNvbGxlY3REYWlseURlZmVuZGVyQm9udXNS",
            "ZXNwb25zZRJZCgZyZXN1bHQYASABKA4ySS5QT0dPUHJvdG9zLk5ldHdvcmtp",
            "bmcuUmVzcG9uc2VzLkNvbGxlY3REYWlseURlZmVuZGVyQm9udXNSZXNwb25z",
            "ZS5SZXN1bHQSFQoNY3VycmVuY3lfdHlwZRgCIAMoCRIYChBjdXJyZW5jeV9h",
            "d2FyZGVkGAMgAygFEhcKD2RlZmVuZGVyc19jb3VudBgEIAEoBSJNCgZSZXN1",
            "bHQSCQoFVU5TRVQQABILCgdTVUNDRVNTEAESCwoHRkFJTFVSRRACEgwKCFRP",
            "T19TT09OEAMSEAoMTk9fREVGRU5ERVJTEAQixQEKFlNmaWRhQWN0aW9uTG9n",
            "UmVzcG9uc2USTgoGcmVzdWx0GAEgASgOMj4uUE9HT1Byb3Rvcy5OZXR3b3Jr",
            "aW5nLlJlc3BvbnNlcy5TZmlkYUFjdGlvbkxvZ1Jlc3BvbnNlLlJlc3VsdBI5",
            "Cgtsb2dfZW50cmllcxgCIAMoCzIkLlBPR09Qcm90b3MuRGF0YS5Mb2dzLkFj",
            "dGlvbkxvZ0VudHJ5IiAKBlJlc3VsdBIJCgVVTlNFVBAAEgsKB1NVQ0NFU1MQ",
            "ASLrAQocUmVjeWNsZUludmVudG9yeUl0ZW1SZXNwb25zZRJUCgZyZXN1bHQY",
            "ASABKA4yRC5QT0dPUHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9uc2VzLlJlY3lj",
            "bGVJbnZlbnRvcnlJdGVtUmVzcG9uc2UuUmVzdWx0EhEKCW5ld19jb3VudBgC",
            "IAEoBSJiCgZSZXN1bHQSCQoFVU5TRVQQABILCgdTVUNDRVNTEAESGwoXRVJS",
            "T1JfTk9UX0VOT1VHSF9DT1BJRVMQAhIjCh9FUlJPUl9DQU5OT1RfUkVDWUNM",
            "RV9JTkNVQkFUT1JTEAMiYQoWR2V0QXNzZXREaWdlc3RSZXNwb25zZRIxCgZk",
            "aWdlc3QYASADKAsyIS5QT0dPUHJvdG9zLkRhdGEuQXNzZXREaWdlc3RFbnRy",
            "eRIUCgx0aW1lc3RhbXBfbXMYAiABKAQijgEKFkdldEhhdGNoZWRFZ2dzUmVz",
            "cG9uc2USDwoHc3VjY2VzcxgBIAEoCBIWCgpwb2tlbW9uX2lkGAIgAygGQgIQ",
            "ARIaChJleHBlcmllbmNlX2F3YXJkZWQYAyADKAUSFQoNY2FuZHlfYXdhcmRl",
            "ZBgEIAMoBRIYChBzdGFyZHVzdF9hd2FyZGVkGAUgAygFIm4KGERvd25sb2Fk",
            "U2V0dGluZ3NSZXNwb25zZRINCgVlcnJvchgBIAEoCRIMCgRoYXNoGAIgASgJ",
            "EjUKCHNldHRpbmdzGAMgASgLMiMuUE9HT1Byb3Rvcy5TZXR0aW5ncy5HbG9i",
            "YWxTZXR0aW5ncyLdAQoVU2V0UGxheWVyVGVhbVJlc3BvbnNlEk0KBnN0YXR1",
            "cxgBIAEoDjI9LlBPR09Qcm90b3MuTmV0d29ya2luZy5SZXNwb25zZXMuU2V0",
            "UGxheWVyVGVhbVJlc3BvbnNlLlN0YXR1cxIwCgtwbGF5ZXJfZGF0YRgCIAEo",
            "CzIbLlBPR09Qcm90b3MuRGF0YS5QbGF5ZXJEYXRhIkMKBlN0YXR1cxIJCgVV",
            "TlNFVBAAEgsKB1NVQ0NFU1MQARIUChBURUFNX0FMUkVBRFlfU0VUEAISCwoH",
            "RkFJTFVSRRADIvQCChhJbmNlbnNlRW5jb3VudGVyUmVzcG9uc2USUAoGcmVz",
            "dWx0GAEgASgOMkAuUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJlc3BvbnNlcy5J",
            "bmNlbnNlRW5jb3VudGVyUmVzcG9uc2UuUmVzdWx0EjIKDHBva2Vtb25fZGF0",
            "YRgCIAEoCzIcLlBPR09Qcm90b3MuRGF0YS5Qb2tlbW9uRGF0YRJIChNjYXB0",
            "dXJlX3Byb2JhYmlsaXR5GAMgASgLMisuUE9HT1Byb3Rvcy5EYXRhLkNhcHR1",
            "cmUuQ2FwdHVyZVByb2JhYmlsaXR5IocBCgZSZXN1bHQSHQoZSU5DRU5TRV9F",
            "TkNPVU5URVJfVU5LTk9XThAAEh0KGUlOQ0VOU0VfRU5DT1VOVEVSX1NVQ0NF",
            "U1MQARIjCh9JTkNFTlNFX0VOQ09VTlRFUl9OT1RfQVZBSUxBQkxFEAISGgoW",
            "UE9LRU1PTl9JTlZFTlRPUllfRlVMTBADIvkCChVFdm9sdmVQb2tlbW9uUmVz",
            "cG9uc2USTQoGcmVzdWx0GAEgASgOMj0uUE9HT1Byb3Rvcy5OZXR3b3JraW5n",
            "LlJlc3BvbnNlcy5Fdm9sdmVQb2tlbW9uUmVzcG9uc2UuUmVzdWx0EjoKFGV2",
            "b2x2ZWRfcG9rZW1vbl9kYXRhGAIgASgLMhwuUE9HT1Byb3Rvcy5EYXRhLlBv",
            "a2Vtb25EYXRhEhoKEmV4cGVyaWVuY2VfYXdhcmRlZBgDIAEoBRIVCg1jYW5k",
            "eV9hd2FyZGVkGAQgASgFIqEBCgZSZXN1bHQSCQoFVU5TRVQQABILCgdTVUND",
            "RVNTEAESGgoWRkFJTEVEX1BPS0VNT05fTUlTU0lORxACEiEKHUZBSUxFRF9J",
            "TlNVRkZJQ0lFTlRfUkVTT1VSQ0VTEAMSIAocRkFJTEVEX1BPS0VNT05fQ0FO",
            "Tk9UX0VWT0xWRRAEEh4KGkZBSUxFRF9QT0tFTU9OX0lTX0RFUExPWUVEEAUi",
            "nwMKG1VzZUl0ZW1FZ2dJbmN1YmF0b3JSZXNwb25zZRJTCgZyZXN1bHQYASAB",
            "KA4yQy5QT0dPUHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9uc2VzLlVzZUl0ZW1F",
            "Z2dJbmN1YmF0b3JSZXNwb25zZS5SZXN1bHQSOQoNZWdnX2luY3ViYXRvchgC",
            "IAEoCzIiLlBPR09Qcm90b3MuSW52ZW50b3J5LkVnZ0luY3ViYXRvciLvAQoG",
            "UmVzdWx0EgkKBVVOU0VUEAASCwoHU1VDQ0VTUxABEh0KGUVSUk9SX0lOQ1VC",
            "QVRPUl9OT1RfRk9VTkQQAhIfChtFUlJPUl9QT0tFTU9OX0VHR19OT1RfRk9V",
            "TkQQAxIcChhFUlJPUl9QT0tFTU9OX0lEX05PVF9FR0cQBBIiCh5FUlJPUl9J",
            "TkNVQkFUT1JfQUxSRUFEWV9JTl9VU0UQBRIkCiBFUlJPUl9QT0tFTU9OX0FM",
            "UkVBRFlfSU5DVUJBVElORxAGEiUKIUVSUk9SX0lOQ1VCQVRPUl9OT19VU0VT",
            "X1JFTUFJTklORxAHIt0BChZSZWxlYXNlUG9rZW1vblJlc3BvbnNlEk4KBnJl",
            "c3VsdBgBIAEoDjI+LlBPR09Qcm90b3MuTmV0d29ya2luZy5SZXNwb25zZXMu",
            "UmVsZWFzZVBva2Vtb25SZXNwb25zZS5SZXN1bHQSFQoNY2FuZHlfYXdhcmRl",
            "ZBgCIAEoBSJcCgZSZXN1bHQSCQoFVU5TRVQQABILCgdTVUNDRVNTEAESFAoQ",
            "UE9LRU1PTl9ERVBMT1lFRBACEgoKBkZBSUxFRBADEhgKFEVSUk9SX1BPS0VN",
            "T05fSVNfRUdHEAQigwIKFUdldEd5bURldGFpbHNSZXNwb25zZRIwCglneW1f",
            "c3RhdGUYASABKAsyHS5QT0dPUHJvdG9zLkRhdGEuR3ltLkd5bVN0YXRlEgwK",
            "BG5hbWUYAiABKAkSDAoEdXJscxgDIAMoCRJNCgZyZXN1bHQYBCABKA4yPS5Q",
            "T0dPUHJvdG9zLk5ldHdvcmtpbmcuUmVzcG9uc2VzLkdldEd5bURldGFpbHNS",
            "ZXNwb25zZS5SZXN1bHQSEwoLZGVzY3JpcHRpb24YBSABKAkiOAoGUmVzdWx0",
            "EgkKBVVOU0VUEAASCwoHU1VDQ0VTUxABEhYKEkVSUk9SX05PVF9JTl9SQU5H",
            "RRACIrACChlGb3J0UmVjYWxsUG9rZW1vblJlc3BvbnNlElEKBnJlc3VsdBgB",
            "IAEoDjJBLlBPR09Qcm90b3MuTmV0d29ya2luZy5SZXNwb25zZXMuRm9ydFJl",
            "Y2FsbFBva2Vtb25SZXNwb25zZS5SZXN1bHQSSgoMZm9ydF9kZXRhaWxzGAIg",
            "ASgLMjQuUE9HT1Byb3Rvcy5OZXR3b3JraW5nLlJlc3BvbnNlcy5Gb3J0RGV0",
            "YWlsc1Jlc3BvbnNlInQKBlJlc3VsdBIRCg1OT19SRVNVTFRfU0VUEAASCwoH",
            "U1VDQ0VTUxABEhYKEkVSUk9SX05PVF9JTl9SQU5HRRACEh0KGUVSUk9SX1BP",
            "S0VNT05fTk9UX09OX0ZPUlQQAxITCg9FUlJPUl9OT19QTEFZRVIQBCKHAgoS",
            "VXNlSW5jZW5zZVJlc3BvbnNlEkoKBnJlc3VsdBgBIAEoDjI6LlBPR09Qcm90",
            "b3MuTmV0d29ya2luZy5SZXNwb25zZXMuVXNlSW5jZW5zZVJlc3BvbnNlLlJl",
            "c3VsdBI6Cg9hcHBsaWVkX2luY2Vuc2UYAiABKAsyIS5QT0dPUHJvdG9zLklu",
            "dmVudG9yeS5BcHBsaWVkSXRlbSJpCgZSZXN1bHQSCwoHVU5LTk9XThAAEgsK",
            "B1NVQ0NFU1MQARIaChZJTkNFTlNFX0FMUkVBRFlfQUNUSVZFEAISFQoRTk9O",
            "RV9JTl9JTlZFTlRPUlkQAxISCg5MT0NBVElPTl9VTlNFVBAEIt8BChdOaWNr",
            "bmFtZVBva2Vtb25SZXNwb25zZRJPCgZyZXN1bHQYASABKA4yPy5QT0dPUHJv",
            "dG9zLk5ldHdvcmtpbmcuUmVzcG9uc2VzLk5pY2tuYW1lUG9rZW1vblJlc3Bv",
            "bnNlLlJlc3VsdCJzCgZSZXN1bHQSCQoFVU5TRVQQABILCgdTVUNDRVNTEAES",
            "GgoWRVJST1JfSU5WQUxJRF9OSUNLTkFNRRACEhsKF0VSUk9SX1BPS0VNT05f",
            "Tk9UX0ZPVU5EEAMSGAoURVJST1JfUE9LRU1PTl9JU19FR0cQBFAAUAFQAlAD",
            "UARQBVAGUAdQCFAJUApQC1AMUA1iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor, global::POGOProtos.Data.POGOProtosDataReflection.Descriptor, global::POGOProtos.Data.Capture.POGOProtosDataCaptureReflection.Descriptor, global::POGOProtos.Settings.Master.POGOProtosSettingsMasterReflection.Descriptor, global::POGOProtos.Map.POGOProtosMapReflection.Descriptor, global::POGOProtos.Data.Battle.POGOProtosDataBattleReflection.Descriptor, global::POGOProtos.Enums.POGOProtosEnumsReflection.Descriptor, global::POGOProtos.Data.Player.POGOProtosDataPlayerReflection.Descriptor, global::POGOProtos.Data.Gym.POGOProtosDataGymReflection.Descriptor, global::POGOProtos.Inventory.Item.POGOProtosInventoryItemReflection.Descriptor, global::POGOProtos.Map.Pokemon.POGOProtosMapPokemonReflection.Descriptor, global::POGOProtos.Map.Fort.POGOProtosMapFortReflection.Descriptor, global::POGOProtos.Data.Logs.POGOProtosDataLogsReflection.Descriptor, global::POGOProtos.Settings.POGOProtosSettingsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.SetFavoritePokemonResponse), global::POGOProtos.Networking.Responses.SetFavoritePokemonResponse.Parser, new[]{ "Result" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.SetFavoritePokemonResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.UseItemXpBoostResponse), global::POGOProtos.Networking.Responses.UseItemXpBoostResponse.Parser, new[]{ "Result", "AppliedItems" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.UseItemXpBoostResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.DownloadRemoteConfigVersionResponse), global::POGOProtos.Networking.Responses.DownloadRemoteConfigVersionResponse.Parser, new[]{ "Result", "ItemTemplatesTimestampMs", "AssetDigestTimestampMs" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.DownloadRemoteConfigVersionResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.GetInventoryResponse), global::POGOProtos.Networking.Responses.GetInventoryResponse.Parser, new[]{ "Success", "InventoryDelta" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse), global::POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.Parser, new[]{ "Result", "PokemonData", "CaptureAward" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.UseItemPotionResponse), global::POGOProtos.Networking.Responses.UseItemPotionResponse.Parser, new[]{ "Result", "Stamina" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.UseItemPotionResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse), global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Parser, new[]{ "Success", "ItemTemplates", "TimestampMs" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate), global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate.Parser, new[]{ "TemplateId", "PokemonSettings", "ItemSettings", "MoveSettings", "MoveSequenceSettings", "TypeEffective", "BadgeSettings", "Camera", "PlayerLevel", "GymLevel", "BattleSettings", "EncounterSettings", "IapItemDisplay", "IapSettings", "PokemonUpgrades", "EquippedBadges" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.GetDownloadUrlsResponse), global::POGOProtos.Networking.Responses.GetDownloadUrlsResponse.Parser, new[]{ "DownloadUrls" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.CollectDailyBonusResponse), global::POGOProtos.Networking.Responses.CollectDailyBonusResponse.Parser, new[]{ "Result" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.CollectDailyBonusResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.DiskEncounterResponse), global::POGOProtos.Networking.Responses.DiskEncounterResponse.Parser, new[]{ "Result", "PokemonData", "CaptureProbability" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.DiskEncounterResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.GetPlayerProfileResponse), global::POGOProtos.Networking.Responses.GetPlayerProfileResponse.Parser, new[]{ "Result", "StartTime", "Badges" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.GetPlayerProfileResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.GetMapObjectsResponse), global::POGOProtos.Networking.Responses.GetMapObjectsResponse.Parser, new[]{ "MapCells", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.UseItemCaptureResponse), global::POGOProtos.Networking.Responses.UseItemCaptureResponse.Parser, new[]{ "Success", "ItemCaptureMult", "ItemFleeMult", "StopMovement", "StopAttack", "TargetMax", "TargetSlow" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.AttackGymResponse), global::POGOProtos.Networking.Responses.AttackGymResponse.Parser, new[]{ "Result", "BattleLog", "BattleId", "ActiveDefender", "ActiveAttacker" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.AttackGymResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.MarkTutorialCompleteResponse), global::POGOProtos.Networking.Responses.MarkTutorialCompleteResponse.Parser, new[]{ "Success", "PlayerData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.SetContactSettingsResponse), global::POGOProtos.Networking.Responses.SetContactSettingsResponse.Parser, new[]{ "Status", "PlayerData" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.SetContactSettingsResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.GetIncensePokemonResponse), global::POGOProtos.Networking.Responses.GetIncensePokemonResponse.Parser, new[]{ "Result", "PokemonId", "Latitude", "Longitude", "EncounterLocation", "EncounterId", "DisappearTimestampMs" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.GetIncensePokemonResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.GetPlayerResponse), global::POGOProtos.Networking.Responses.GetPlayerResponse.Parser, new[]{ "Success", "PlayerData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.EquipBadgeResponse), global::POGOProtos.Networking.Responses.EquipBadgeResponse.Parser, new[]{ "Result", "Equipped" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.EquipBadgeResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.FortDeployPokemonResponse), global::POGOProtos.Networking.Responses.FortDeployPokemonResponse.Parser, new[]{ "Result", "FortDetails", "PokemonData", "GymState" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.FortDeployPokemonResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.GetSuggestedCodenamesResponse), global::POGOProtos.Networking.Responses.GetSuggestedCodenamesResponse.Parser, new[]{ "Codenames", "Success" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.FortSearchResponse), global::POGOProtos.Networking.Responses.FortSearchResponse.Parser, new[]{ "Result", "ItemsAwarded", "GemsAwarded", "PokemonDataEgg", "ExperienceAwarded", "CooldownCompleteTimestampMs", "ChainHackSequenceNumber" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.FortSearchResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.SetAvatarResponse), global::POGOProtos.Networking.Responses.SetAvatarResponse.Parser, new[]{ "Status", "PlayerData" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.SetAvatarResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.EncounterResponse), global::POGOProtos.Networking.Responses.EncounterResponse.Parser, new[]{ "WildPokemon", "Background", "Status", "CaptureProbability" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.EncounterResponse.Types.Background), typeof(global::POGOProtos.Networking.Responses.EncounterResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.UseItemReviveResponse), global::POGOProtos.Networking.Responses.UseItemReviveResponse.Parser, new[]{ "Result", "Stamina" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.UseItemReviveResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.CheckAwardedBadgesResponse), global::POGOProtos.Networking.Responses.CheckAwardedBadgesResponse.Parser, new[]{ "Success", "AwardedBadges", "AwardedBadgeLevels" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.ClaimCodenameResponse), global::POGOProtos.Networking.Responses.ClaimCodenameResponse.Parser, new[]{ "Codename", "UserMessage", "IsAssignable", "Status" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.ClaimCodenameResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.UseItemGymResponse), global::POGOProtos.Networking.Responses.UseItemGymResponse.Parser, new[]{ "Result", "UpdatedGp" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.UseItemGymResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.AddFortModifierResponse), global::POGOProtos.Networking.Responses.AddFortModifierResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.CheckCodenameAvailableResponse), global::POGOProtos.Networking.Responses.CheckCodenameAvailableResponse.Parser, new[]{ "Codename", "UserMessage", "IsAssignable", "Status" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.CheckCodenameAvailableResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.EchoResponse), global::POGOProtos.Networking.Responses.EchoResponse.Parser, new[]{ "Context" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.PlayerUpdateResponse), global::POGOProtos.Networking.Responses.PlayerUpdateResponse.Parser, new[]{ "WildPokemons", "Forts", "FortsNearby" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.UpgradePokemonResponse), global::POGOProtos.Networking.Responses.UpgradePokemonResponse.Parser, new[]{ "Result", "UpgradedPokemon" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.UpgradePokemonResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.CatchPokemonResponse), global::POGOProtos.Networking.Responses.CatchPokemonResponse.Parser, new[]{ "Status", "MissPercent", "CapturedPokemonId", "CaptureAward" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.CatchPokemonResponse.Types.CatchStatus) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.StartGymBattleResponse), global::POGOProtos.Networking.Responses.StartGymBattleResponse.Parser, new[]{ "Result", "BattleStartTimestampMs", "BattleEndTimestampMs", "BattleId", "Defender", "BattleLog" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.StartGymBattleResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.LevelUpRewardsResponse), global::POGOProtos.Networking.Responses.LevelUpRewardsResponse.Parser, new[]{ "Result", "ItemsAwarded", "ItemsUnlocked" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.LevelUpRewardsResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.FortDetailsResponse), global::POGOProtos.Networking.Responses.FortDetailsResponse.Parser, new[]{ "FortId", "TeamColor", "PokemonData", "Name", "ImageUrls", "Fp", "Stamina", "MaxStamina", "Type", "Latitude", "Longitude", "Description", "Modifiers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.CollectDailyDefenderBonusResponse), global::POGOProtos.Networking.Responses.CollectDailyDefenderBonusResponse.Parser, new[]{ "Result", "CurrencyType", "CurrencyAwarded", "DefendersCount" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.CollectDailyDefenderBonusResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.SfidaActionLogResponse), global::POGOProtos.Networking.Responses.SfidaActionLogResponse.Parser, new[]{ "Result", "LogEntries" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.SfidaActionLogResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.RecycleInventoryItemResponse), global::POGOProtos.Networking.Responses.RecycleInventoryItemResponse.Parser, new[]{ "Result", "NewCount" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.RecycleInventoryItemResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.GetAssetDigestResponse), global::POGOProtos.Networking.Responses.GetAssetDigestResponse.Parser, new[]{ "Digest", "TimestampMs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.GetHatchedEggsResponse), global::POGOProtos.Networking.Responses.GetHatchedEggsResponse.Parser, new[]{ "Success", "PokemonId", "ExperienceAwarded", "CandyAwarded", "StardustAwarded" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.DownloadSettingsResponse), global::POGOProtos.Networking.Responses.DownloadSettingsResponse.Parser, new[]{ "Error", "Hash", "Settings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.SetPlayerTeamResponse), global::POGOProtos.Networking.Responses.SetPlayerTeamResponse.Parser, new[]{ "Status", "PlayerData" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.SetPlayerTeamResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.IncenseEncounterResponse), global::POGOProtos.Networking.Responses.IncenseEncounterResponse.Parser, new[]{ "Result", "PokemonData", "CaptureProbability" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.IncenseEncounterResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.EvolvePokemonResponse), global::POGOProtos.Networking.Responses.EvolvePokemonResponse.Parser, new[]{ "Result", "EvolvedPokemonData", "ExperienceAwarded", "CandyAwarded" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.EvolvePokemonResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.UseItemEggIncubatorResponse), global::POGOProtos.Networking.Responses.UseItemEggIncubatorResponse.Parser, new[]{ "Result", "EggIncubator" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.UseItemEggIncubatorResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.ReleasePokemonResponse), global::POGOProtos.Networking.Responses.ReleasePokemonResponse.Parser, new[]{ "Result", "CandyAwarded" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.ReleasePokemonResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.GetGymDetailsResponse), global::POGOProtos.Networking.Responses.GetGymDetailsResponse.Parser, new[]{ "GymState", "Name", "Urls", "Result", "Description" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.GetGymDetailsResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.FortRecallPokemonResponse), global::POGOProtos.Networking.Responses.FortRecallPokemonResponse.Parser, new[]{ "Result", "FortDetails" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.FortRecallPokemonResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.UseIncenseResponse), global::POGOProtos.Networking.Responses.UseIncenseResponse.Parser, new[]{ "Result", "AppliedIncense" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.UseIncenseResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.NicknamePokemonResponse), global::POGOProtos.Networking.Responses.NicknamePokemonResponse.Parser, new[]{ "Result" }, null, new[]{ typeof(global::POGOProtos.Networking.Responses.NicknamePokemonResponse.Types.Result) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SetFavoritePokemonResponse : pb::IMessage<SetFavoritePokemonResponse> {
    private static readonly pb::MessageParser<SetFavoritePokemonResponse> _parser = new pb::MessageParser<SetFavoritePokemonResponse>(() => new SetFavoritePokemonResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetFavoritePokemonResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetFavoritePokemonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetFavoritePokemonResponse(SetFavoritePokemonResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetFavoritePokemonResponse Clone() {
      return new SetFavoritePokemonResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.SetFavoritePokemonResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.SetFavoritePokemonResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetFavoritePokemonResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetFavoritePokemonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetFavoritePokemonResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.SetFavoritePokemonResponse.Types.Result) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SetFavoritePokemonResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_POKEMON_NOT_FOUND")] ErrorPokemonNotFound = 2,
        [pbr::OriginalName("ERROR_POKEMON_IS_EGG")] ErrorPokemonIsEgg = 3,
      }

    }
    #endregion

  }

  public sealed partial class UseItemXpBoostResponse : pb::IMessage<UseItemXpBoostResponse> {
    private static readonly pb::MessageParser<UseItemXpBoostResponse> _parser = new pb::MessageParser<UseItemXpBoostResponse>(() => new UseItemXpBoostResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UseItemXpBoostResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemXpBoostResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemXpBoostResponse(UseItemXpBoostResponse other) : this() {
      result_ = other.result_;
      AppliedItems = other.appliedItems_ != null ? other.AppliedItems.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemXpBoostResponse Clone() {
      return new UseItemXpBoostResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.UseItemXpBoostResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.UseItemXpBoostResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "applied_items" field.</summary>
    public const int AppliedItemsFieldNumber = 2;
    private global::POGOProtos.Inventory.AppliedItems appliedItems_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.AppliedItems AppliedItems {
      get { return appliedItems_; }
      set {
        appliedItems_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UseItemXpBoostResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UseItemXpBoostResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(AppliedItems, other.AppliedItems)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (appliedItems_ != null) hash ^= AppliedItems.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (appliedItems_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AppliedItems);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (appliedItems_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppliedItems);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UseItemXpBoostResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.appliedItems_ != null) {
        if (appliedItems_ == null) {
          appliedItems_ = new global::POGOProtos.Inventory.AppliedItems();
        }
        AppliedItems.MergeFrom(other.AppliedItems);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.UseItemXpBoostResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (appliedItems_ == null) {
              appliedItems_ = new global::POGOProtos.Inventory.AppliedItems();
            }
            input.ReadMessage(appliedItems_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UseItemXpBoostResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_INVALID_ITEM_TYPE")] ErrorInvalidItemType = 2,
        [pbr::OriginalName("ERROR_XP_BOOST_ALREADY_ACTIVE")] ErrorXpBoostAlreadyActive = 3,
        [pbr::OriginalName("ERROR_NO_ITEMS_REMAINING")] ErrorNoItemsRemaining = 4,
        [pbr::OriginalName("ERROR_LOCATION_UNSET")] ErrorLocationUnset = 5,
      }

    }
    #endregion

  }

  public sealed partial class DownloadRemoteConfigVersionResponse : pb::IMessage<DownloadRemoteConfigVersionResponse> {
    private static readonly pb::MessageParser<DownloadRemoteConfigVersionResponse> _parser = new pb::MessageParser<DownloadRemoteConfigVersionResponse>(() => new DownloadRemoteConfigVersionResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadRemoteConfigVersionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadRemoteConfigVersionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadRemoteConfigVersionResponse(DownloadRemoteConfigVersionResponse other) : this() {
      result_ = other.result_;
      itemTemplatesTimestampMs_ = other.itemTemplatesTimestampMs_;
      assetDigestTimestampMs_ = other.assetDigestTimestampMs_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadRemoteConfigVersionResponse Clone() {
      return new DownloadRemoteConfigVersionResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.DownloadRemoteConfigVersionResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.DownloadRemoteConfigVersionResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "item_templates_timestamp_ms" field.</summary>
    public const int ItemTemplatesTimestampMsFieldNumber = 2;
    private ulong itemTemplatesTimestampMs_;
    /// <summary>
    ///  Latest available?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemTemplatesTimestampMs {
      get { return itemTemplatesTimestampMs_; }
      set {
        itemTemplatesTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "asset_digest_timestamp_ms" field.</summary>
    public const int AssetDigestTimestampMsFieldNumber = 3;
    private ulong assetDigestTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AssetDigestTimestampMs {
      get { return assetDigestTimestampMs_; }
      set {
        assetDigestTimestampMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadRemoteConfigVersionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadRemoteConfigVersionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (ItemTemplatesTimestampMs != other.ItemTemplatesTimestampMs) return false;
      if (AssetDigestTimestampMs != other.AssetDigestTimestampMs) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (ItemTemplatesTimestampMs != 0UL) hash ^= ItemTemplatesTimestampMs.GetHashCode();
      if (AssetDigestTimestampMs != 0UL) hash ^= AssetDigestTimestampMs.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (ItemTemplatesTimestampMs != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemTemplatesTimestampMs);
      }
      if (AssetDigestTimestampMs != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(AssetDigestTimestampMs);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (ItemTemplatesTimestampMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemTemplatesTimestampMs);
      }
      if (AssetDigestTimestampMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AssetDigestTimestampMs);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadRemoteConfigVersionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.ItemTemplatesTimestampMs != 0UL) {
        ItemTemplatesTimestampMs = other.ItemTemplatesTimestampMs;
      }
      if (other.AssetDigestTimestampMs != 0UL) {
        AssetDigestTimestampMs = other.AssetDigestTimestampMs;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.DownloadRemoteConfigVersionResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 16: {
            ItemTemplatesTimestampMs = input.ReadUInt64();
            break;
          }
          case 24: {
            AssetDigestTimestampMs = input.ReadUInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DownloadRemoteConfigVersionResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
      }

    }
    #endregion

  }

  public sealed partial class GetInventoryResponse : pb::IMessage<GetInventoryResponse> {
    private static readonly pb::MessageParser<GetInventoryResponse> _parser = new pb::MessageParser<GetInventoryResponse>(() => new GetInventoryResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInventoryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInventoryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInventoryResponse(GetInventoryResponse other) : this() {
      success_ = other.success_;
      InventoryDelta = other.inventoryDelta_ != null ? other.InventoryDelta.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInventoryResponse Clone() {
      return new GetInventoryResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "inventory_delta" field.</summary>
    public const int InventoryDeltaFieldNumber = 2;
    private global::POGOProtos.Inventory.InventoryDelta inventoryDelta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.InventoryDelta InventoryDelta {
      get { return inventoryDelta_; }
      set {
        inventoryDelta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInventoryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInventoryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (!object.Equals(InventoryDelta, other.InventoryDelta)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (inventoryDelta_ != null) hash ^= InventoryDelta.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (inventoryDelta_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InventoryDelta);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (inventoryDelta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InventoryDelta);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInventoryResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.inventoryDelta_ != null) {
        if (inventoryDelta_ == null) {
          inventoryDelta_ = new global::POGOProtos.Inventory.InventoryDelta();
        }
        InventoryDelta.MergeFrom(other.InventoryDelta);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (inventoryDelta_ == null) {
              inventoryDelta_ = new global::POGOProtos.Inventory.InventoryDelta();
            }
            input.ReadMessage(inventoryDelta_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EncounterTutorialCompleteResponse : pb::IMessage<EncounterTutorialCompleteResponse> {
    private static readonly pb::MessageParser<EncounterTutorialCompleteResponse> _parser = new pb::MessageParser<EncounterTutorialCompleteResponse>(() => new EncounterTutorialCompleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncounterTutorialCompleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterTutorialCompleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterTutorialCompleteResponse(EncounterTutorialCompleteResponse other) : this() {
      result_ = other.result_;
      PokemonData = other.pokemonData_ != null ? other.PokemonData.Clone() : null;
      CaptureAward = other.captureAward_ != null ? other.CaptureAward.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterTutorialCompleteResponse Clone() {
      return new EncounterTutorialCompleteResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_data" field.</summary>
    public const int PokemonDataFieldNumber = 2;
    private global::POGOProtos.Data.PokemonData pokemonData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PokemonData PokemonData {
      get { return pokemonData_; }
      set {
        pokemonData_ = value;
      }
    }

    /// <summary>Field number for the "capture_award" field.</summary>
    public const int CaptureAwardFieldNumber = 3;
    private global::POGOProtos.Data.Capture.CaptureAward captureAward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Capture.CaptureAward CaptureAward {
      get { return captureAward_; }
      set {
        captureAward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncounterTutorialCompleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncounterTutorialCompleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(PokemonData, other.PokemonData)) return false;
      if (!object.Equals(CaptureAward, other.CaptureAward)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (pokemonData_ != null) hash ^= PokemonData.GetHashCode();
      if (captureAward_ != null) hash ^= CaptureAward.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (pokemonData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PokemonData);
      }
      if (captureAward_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CaptureAward);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (pokemonData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonData);
      }
      if (captureAward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CaptureAward);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncounterTutorialCompleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.pokemonData_ != null) {
        if (pokemonData_ == null) {
          pokemonData_ = new global::POGOProtos.Data.PokemonData();
        }
        PokemonData.MergeFrom(other.PokemonData);
      }
      if (other.captureAward_ != null) {
        if (captureAward_ == null) {
          captureAward_ = new global::POGOProtos.Data.Capture.CaptureAward();
        }
        CaptureAward.MergeFrom(other.CaptureAward);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (pokemonData_ == null) {
              pokemonData_ = new global::POGOProtos.Data.PokemonData();
            }
            input.ReadMessage(pokemonData_);
            break;
          }
          case 26: {
            if (captureAward_ == null) {
              captureAward_ = new global::POGOProtos.Data.Capture.CaptureAward();
            }
            input.ReadMessage(captureAward_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EncounterTutorialCompleteResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_INVALID_POKEMON")] ErrorInvalidPokemon = 2,
      }

    }
    #endregion

  }

  public sealed partial class UseItemPotionResponse : pb::IMessage<UseItemPotionResponse> {
    private static readonly pb::MessageParser<UseItemPotionResponse> _parser = new pb::MessageParser<UseItemPotionResponse>(() => new UseItemPotionResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UseItemPotionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemPotionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemPotionResponse(UseItemPotionResponse other) : this() {
      result_ = other.result_;
      stamina_ = other.stamina_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemPotionResponse Clone() {
      return new UseItemPotionResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.UseItemPotionResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.UseItemPotionResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "stamina" field.</summary>
    public const int StaminaFieldNumber = 2;
    private int stamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stamina {
      get { return stamina_; }
      set {
        stamina_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UseItemPotionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UseItemPotionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Stamina != other.Stamina) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Stamina != 0) hash ^= Stamina.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (Stamina != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Stamina);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (Stamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stamina);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UseItemPotionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Stamina != 0) {
        Stamina = other.Stamina;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.UseItemPotionResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 16: {
            Stamina = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UseItemPotionResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_NO_POKEMON")] ErrorNoPokemon = 2,
        [pbr::OriginalName("ERROR_CANNOT_USE")] ErrorCannotUse = 3,
        [pbr::OriginalName("ERROR_DEPLOYED_TO_FORT")] ErrorDeployedToFort = 4,
      }

    }
    #endregion

  }

  public sealed partial class DownloadItemTemplatesResponse : pb::IMessage<DownloadItemTemplatesResponse> {
    private static readonly pb::MessageParser<DownloadItemTemplatesResponse> _parser = new pb::MessageParser<DownloadItemTemplatesResponse>(() => new DownloadItemTemplatesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadItemTemplatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadItemTemplatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadItemTemplatesResponse(DownloadItemTemplatesResponse other) : this() {
      success_ = other.success_;
      itemTemplates_ = other.itemTemplates_.Clone();
      timestampMs_ = other.timestampMs_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadItemTemplatesResponse Clone() {
      return new DownloadItemTemplatesResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "item_templates" field.</summary>
    public const int ItemTemplatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate> _repeated_itemTemplates_codec
        = pb::FieldCodec.ForMessage(18, global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate> itemTemplates_ = new pbc::RepeatedField<global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate> ItemTemplates {
      get { return itemTemplates_; }
    }

    /// <summary>Field number for the "timestamp_ms" field.</summary>
    public const int TimestampMsFieldNumber = 3;
    private ulong timestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimestampMs {
      get { return timestampMs_; }
      set {
        timestampMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadItemTemplatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadItemTemplatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if(!itemTemplates_.Equals(other.itemTemplates_)) return false;
      if (TimestampMs != other.TimestampMs) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      hash ^= itemTemplates_.GetHashCode();
      if (TimestampMs != 0UL) hash ^= TimestampMs.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      itemTemplates_.WriteTo(output, _repeated_itemTemplates_codec);
      if (TimestampMs != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TimestampMs);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      size += itemTemplates_.CalculateSize(_repeated_itemTemplates_codec);
      if (TimestampMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimestampMs);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadItemTemplatesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      itemTemplates_.Add(other.itemTemplates_);
      if (other.TimestampMs != 0UL) {
        TimestampMs = other.TimestampMs;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            itemTemplates_.AddEntriesFrom(input, _repeated_itemTemplates_codec);
            break;
          }
          case 24: {
            TimestampMs = input.ReadUInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DownloadItemTemplatesResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ItemTemplate : pb::IMessage<ItemTemplate> {
        private static readonly pb::MessageParser<ItemTemplate> _parser = new pb::MessageParser<ItemTemplate>(() => new ItemTemplate());
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ItemTemplate> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ItemTemplate() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ItemTemplate(ItemTemplate other) : this() {
          templateId_ = other.templateId_;
          PokemonSettings = other.pokemonSettings_ != null ? other.PokemonSettings.Clone() : null;
          ItemSettings = other.itemSettings_ != null ? other.ItemSettings.Clone() : null;
          MoveSettings = other.moveSettings_ != null ? other.MoveSettings.Clone() : null;
          MoveSequenceSettings = other.moveSequenceSettings_ != null ? other.MoveSequenceSettings.Clone() : null;
          TypeEffective = other.typeEffective_ != null ? other.TypeEffective.Clone() : null;
          BadgeSettings = other.badgeSettings_ != null ? other.BadgeSettings.Clone() : null;
          Camera = other.camera_ != null ? other.Camera.Clone() : null;
          PlayerLevel = other.playerLevel_ != null ? other.PlayerLevel.Clone() : null;
          GymLevel = other.gymLevel_ != null ? other.GymLevel.Clone() : null;
          BattleSettings = other.battleSettings_ != null ? other.BattleSettings.Clone() : null;
          EncounterSettings = other.encounterSettings_ != null ? other.EncounterSettings.Clone() : null;
          IapItemDisplay = other.iapItemDisplay_ != null ? other.IapItemDisplay.Clone() : null;
          IapSettings = other.iapSettings_ != null ? other.IapSettings.Clone() : null;
          PokemonUpgrades = other.pokemonUpgrades_ != null ? other.PokemonUpgrades.Clone() : null;
          EquippedBadges = other.equippedBadges_ != null ? other.EquippedBadges.Clone() : null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ItemTemplate Clone() {
          return new ItemTemplate(this);
        }

        /// <summary>Field number for the "template_id" field.</summary>
        public const int TemplateIdFieldNumber = 1;
        private string templateId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TemplateId {
          get { return templateId_; }
          set {
            templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pokemon_settings" field.</summary>
        public const int PokemonSettingsFieldNumber = 2;
        private global::POGOProtos.Settings.Master.PokemonSettings pokemonSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.PokemonSettings PokemonSettings {
          get { return pokemonSettings_; }
          set {
            pokemonSettings_ = value;
          }
        }

        /// <summary>Field number for the "item_settings" field.</summary>
        public const int ItemSettingsFieldNumber = 3;
        private global::POGOProtos.Settings.Master.ItemSettings itemSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.ItemSettings ItemSettings {
          get { return itemSettings_; }
          set {
            itemSettings_ = value;
          }
        }

        /// <summary>Field number for the "move_settings" field.</summary>
        public const int MoveSettingsFieldNumber = 4;
        private global::POGOProtos.Settings.Master.MoveSettings moveSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.MoveSettings MoveSettings {
          get { return moveSettings_; }
          set {
            moveSettings_ = value;
          }
        }

        /// <summary>Field number for the "move_sequence_settings" field.</summary>
        public const int MoveSequenceSettingsFieldNumber = 5;
        private global::POGOProtos.Settings.Master.MoveSequenceSettings moveSequenceSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.MoveSequenceSettings MoveSequenceSettings {
          get { return moveSequenceSettings_; }
          set {
            moveSequenceSettings_ = value;
          }
        }

        /// <summary>Field number for the "type_effective" field.</summary>
        public const int TypeEffectiveFieldNumber = 8;
        private global::POGOProtos.Settings.Master.TypeEffectiveSettings typeEffective_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.TypeEffectiveSettings TypeEffective {
          get { return typeEffective_; }
          set {
            typeEffective_ = value;
          }
        }

        /// <summary>Field number for the "badge_settings" field.</summary>
        public const int BadgeSettingsFieldNumber = 10;
        private global::POGOProtos.Settings.Master.BadgeSettings badgeSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.BadgeSettings BadgeSettings {
          get { return badgeSettings_; }
          set {
            badgeSettings_ = value;
          }
        }

        /// <summary>Field number for the "camera" field.</summary>
        public const int CameraFieldNumber = 11;
        private global::POGOProtos.Settings.Master.CameraSettings camera_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.CameraSettings Camera {
          get { return camera_; }
          set {
            camera_ = value;
          }
        }

        /// <summary>Field number for the "player_level" field.</summary>
        public const int PlayerLevelFieldNumber = 12;
        private global::POGOProtos.Settings.Master.PlayerLevelSettings playerLevel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.PlayerLevelSettings PlayerLevel {
          get { return playerLevel_; }
          set {
            playerLevel_ = value;
          }
        }

        /// <summary>Field number for the "gym_level" field.</summary>
        public const int GymLevelFieldNumber = 13;
        private global::POGOProtos.Settings.Master.GymLevelSettings gymLevel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.GymLevelSettings GymLevel {
          get { return gymLevel_; }
          set {
            gymLevel_ = value;
          }
        }

        /// <summary>Field number for the "battle_settings" field.</summary>
        public const int BattleSettingsFieldNumber = 14;
        private global::POGOProtos.Settings.Master.GymBattleSettings battleSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.GymBattleSettings BattleSettings {
          get { return battleSettings_; }
          set {
            battleSettings_ = value;
          }
        }

        /// <summary>Field number for the "encounter_settings" field.</summary>
        public const int EncounterSettingsFieldNumber = 15;
        private global::POGOProtos.Settings.Master.EncounterSettings encounterSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.EncounterSettings EncounterSettings {
          get { return encounterSettings_; }
          set {
            encounterSettings_ = value;
          }
        }

        /// <summary>Field number for the "iap_item_display" field.</summary>
        public const int IapItemDisplayFieldNumber = 16;
        private global::POGOProtos.Settings.Master.IapItemDisplay iapItemDisplay_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.IapItemDisplay IapItemDisplay {
          get { return iapItemDisplay_; }
          set {
            iapItemDisplay_ = value;
          }
        }

        /// <summary>Field number for the "iap_settings" field.</summary>
        public const int IapSettingsFieldNumber = 17;
        private global::POGOProtos.Settings.Master.IapSettings iapSettings_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.IapSettings IapSettings {
          get { return iapSettings_; }
          set {
            iapSettings_ = value;
          }
        }

        /// <summary>Field number for the "pokemon_upgrades" field.</summary>
        public const int PokemonUpgradesFieldNumber = 18;
        private global::POGOProtos.Settings.Master.PokemonUpgradeSettings pokemonUpgrades_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.PokemonUpgradeSettings PokemonUpgrades {
          get { return pokemonUpgrades_; }
          set {
            pokemonUpgrades_ = value;
          }
        }

        /// <summary>Field number for the "equipped_badges" field.</summary>
        public const int EquippedBadgesFieldNumber = 19;
        private global::POGOProtos.Settings.Master.EquippedBadgeSettings equippedBadges_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::POGOProtos.Settings.Master.EquippedBadgeSettings EquippedBadges {
          get { return equippedBadges_; }
          set {
            equippedBadges_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ItemTemplate);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ItemTemplate other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TemplateId != other.TemplateId) return false;
          if (!object.Equals(PokemonSettings, other.PokemonSettings)) return false;
          if (!object.Equals(ItemSettings, other.ItemSettings)) return false;
          if (!object.Equals(MoveSettings, other.MoveSettings)) return false;
          if (!object.Equals(MoveSequenceSettings, other.MoveSequenceSettings)) return false;
          if (!object.Equals(TypeEffective, other.TypeEffective)) return false;
          if (!object.Equals(BadgeSettings, other.BadgeSettings)) return false;
          if (!object.Equals(Camera, other.Camera)) return false;
          if (!object.Equals(PlayerLevel, other.PlayerLevel)) return false;
          if (!object.Equals(GymLevel, other.GymLevel)) return false;
          if (!object.Equals(BattleSettings, other.BattleSettings)) return false;
          if (!object.Equals(EncounterSettings, other.EncounterSettings)) return false;
          if (!object.Equals(IapItemDisplay, other.IapItemDisplay)) return false;
          if (!object.Equals(IapSettings, other.IapSettings)) return false;
          if (!object.Equals(PokemonUpgrades, other.PokemonUpgrades)) return false;
          if (!object.Equals(EquippedBadges, other.EquippedBadges)) return false;
          return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
          if (pokemonSettings_ != null) hash ^= PokemonSettings.GetHashCode();
          if (itemSettings_ != null) hash ^= ItemSettings.GetHashCode();
          if (moveSettings_ != null) hash ^= MoveSettings.GetHashCode();
          if (moveSequenceSettings_ != null) hash ^= MoveSequenceSettings.GetHashCode();
          if (typeEffective_ != null) hash ^= TypeEffective.GetHashCode();
          if (badgeSettings_ != null) hash ^= BadgeSettings.GetHashCode();
          if (camera_ != null) hash ^= Camera.GetHashCode();
          if (playerLevel_ != null) hash ^= PlayerLevel.GetHashCode();
          if (gymLevel_ != null) hash ^= GymLevel.GetHashCode();
          if (battleSettings_ != null) hash ^= BattleSettings.GetHashCode();
          if (encounterSettings_ != null) hash ^= EncounterSettings.GetHashCode();
          if (iapItemDisplay_ != null) hash ^= IapItemDisplay.GetHashCode();
          if (iapSettings_ != null) hash ^= IapSettings.GetHashCode();
          if (pokemonUpgrades_ != null) hash ^= PokemonUpgrades.GetHashCode();
          if (equippedBadges_ != null) hash ^= EquippedBadges.GetHashCode();
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TemplateId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TemplateId);
          }
          if (pokemonSettings_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PokemonSettings);
          }
          if (itemSettings_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ItemSettings);
          }
          if (moveSettings_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(MoveSettings);
          }
          if (moveSequenceSettings_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(MoveSequenceSettings);
          }
          if (typeEffective_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(TypeEffective);
          }
          if (badgeSettings_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(BadgeSettings);
          }
          if (camera_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(Camera);
          }
          if (playerLevel_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(PlayerLevel);
          }
          if (gymLevel_ != null) {
            output.WriteRawTag(106);
            output.WriteMessage(GymLevel);
          }
          if (battleSettings_ != null) {
            output.WriteRawTag(114);
            output.WriteMessage(BattleSettings);
          }
          if (encounterSettings_ != null) {
            output.WriteRawTag(122);
            output.WriteMessage(EncounterSettings);
          }
          if (iapItemDisplay_ != null) {
            output.WriteRawTag(130, 1);
            output.WriteMessage(IapItemDisplay);
          }
          if (iapSettings_ != null) {
            output.WriteRawTag(138, 1);
            output.WriteMessage(IapSettings);
          }
          if (pokemonUpgrades_ != null) {
            output.WriteRawTag(146, 1);
            output.WriteMessage(PokemonUpgrades);
          }
          if (equippedBadges_ != null) {
            output.WriteRawTag(154, 1);
            output.WriteMessage(EquippedBadges);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TemplateId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
          }
          if (pokemonSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonSettings);
          }
          if (itemSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemSettings);
          }
          if (moveSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveSettings);
          }
          if (moveSequenceSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveSequenceSettings);
          }
          if (typeEffective_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeEffective);
          }
          if (badgeSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BadgeSettings);
          }
          if (camera_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Camera);
          }
          if (playerLevel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerLevel);
          }
          if (gymLevel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GymLevel);
          }
          if (battleSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleSettings);
          }
          if (encounterSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncounterSettings);
          }
          if (iapItemDisplay_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(IapItemDisplay);
          }
          if (iapSettings_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(IapSettings);
          }
          if (pokemonUpgrades_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(PokemonUpgrades);
          }
          if (equippedBadges_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(EquippedBadges);
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ItemTemplate other) {
          if (other == null) {
            return;
          }
          if (other.TemplateId.Length != 0) {
            TemplateId = other.TemplateId;
          }
          if (other.pokemonSettings_ != null) {
            if (pokemonSettings_ == null) {
              pokemonSettings_ = new global::POGOProtos.Settings.Master.PokemonSettings();
            }
            PokemonSettings.MergeFrom(other.PokemonSettings);
          }
          if (other.itemSettings_ != null) {
            if (itemSettings_ == null) {
              itemSettings_ = new global::POGOProtos.Settings.Master.ItemSettings();
            }
            ItemSettings.MergeFrom(other.ItemSettings);
          }
          if (other.moveSettings_ != null) {
            if (moveSettings_ == null) {
              moveSettings_ = new global::POGOProtos.Settings.Master.MoveSettings();
            }
            MoveSettings.MergeFrom(other.MoveSettings);
          }
          if (other.moveSequenceSettings_ != null) {
            if (moveSequenceSettings_ == null) {
              moveSequenceSettings_ = new global::POGOProtos.Settings.Master.MoveSequenceSettings();
            }
            MoveSequenceSettings.MergeFrom(other.MoveSequenceSettings);
          }
          if (other.typeEffective_ != null) {
            if (typeEffective_ == null) {
              typeEffective_ = new global::POGOProtos.Settings.Master.TypeEffectiveSettings();
            }
            TypeEffective.MergeFrom(other.TypeEffective);
          }
          if (other.badgeSettings_ != null) {
            if (badgeSettings_ == null) {
              badgeSettings_ = new global::POGOProtos.Settings.Master.BadgeSettings();
            }
            BadgeSettings.MergeFrom(other.BadgeSettings);
          }
          if (other.camera_ != null) {
            if (camera_ == null) {
              camera_ = new global::POGOProtos.Settings.Master.CameraSettings();
            }
            Camera.MergeFrom(other.Camera);
          }
          if (other.playerLevel_ != null) {
            if (playerLevel_ == null) {
              playerLevel_ = new global::POGOProtos.Settings.Master.PlayerLevelSettings();
            }
            PlayerLevel.MergeFrom(other.PlayerLevel);
          }
          if (other.gymLevel_ != null) {
            if (gymLevel_ == null) {
              gymLevel_ = new global::POGOProtos.Settings.Master.GymLevelSettings();
            }
            GymLevel.MergeFrom(other.GymLevel);
          }
          if (other.battleSettings_ != null) {
            if (battleSettings_ == null) {
              battleSettings_ = new global::POGOProtos.Settings.Master.GymBattleSettings();
            }
            BattleSettings.MergeFrom(other.BattleSettings);
          }
          if (other.encounterSettings_ != null) {
            if (encounterSettings_ == null) {
              encounterSettings_ = new global::POGOProtos.Settings.Master.EncounterSettings();
            }
            EncounterSettings.MergeFrom(other.EncounterSettings);
          }
          if (other.iapItemDisplay_ != null) {
            if (iapItemDisplay_ == null) {
              iapItemDisplay_ = new global::POGOProtos.Settings.Master.IapItemDisplay();
            }
            IapItemDisplay.MergeFrom(other.IapItemDisplay);
          }
          if (other.iapSettings_ != null) {
            if (iapSettings_ == null) {
              iapSettings_ = new global::POGOProtos.Settings.Master.IapSettings();
            }
            IapSettings.MergeFrom(other.IapSettings);
          }
          if (other.pokemonUpgrades_ != null) {
            if (pokemonUpgrades_ == null) {
              pokemonUpgrades_ = new global::POGOProtos.Settings.Master.PokemonUpgradeSettings();
            }
            PokemonUpgrades.MergeFrom(other.PokemonUpgrades);
          }
          if (other.equippedBadges_ != null) {
            if (equippedBadges_ == null) {
              equippedBadges_ = new global::POGOProtos.Settings.Master.EquippedBadgeSettings();
            }
            EquippedBadges.MergeFrom(other.EquippedBadges);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                TemplateId = input.ReadString();
                break;
              }
              case 18: {
                if (pokemonSettings_ == null) {
                  pokemonSettings_ = new global::POGOProtos.Settings.Master.PokemonSettings();
                }
                input.ReadMessage(pokemonSettings_);
                break;
              }
              case 26: {
                if (itemSettings_ == null) {
                  itemSettings_ = new global::POGOProtos.Settings.Master.ItemSettings();
                }
                input.ReadMessage(itemSettings_);
                break;
              }
              case 34: {
                if (moveSettings_ == null) {
                  moveSettings_ = new global::POGOProtos.Settings.Master.MoveSettings();
                }
                input.ReadMessage(moveSettings_);
                break;
              }
              case 42: {
                if (moveSequenceSettings_ == null) {
                  moveSequenceSettings_ = new global::POGOProtos.Settings.Master.MoveSequenceSettings();
                }
                input.ReadMessage(moveSequenceSettings_);
                break;
              }
              case 66: {
                if (typeEffective_ == null) {
                  typeEffective_ = new global::POGOProtos.Settings.Master.TypeEffectiveSettings();
                }
                input.ReadMessage(typeEffective_);
                break;
              }
              case 82: {
                if (badgeSettings_ == null) {
                  badgeSettings_ = new global::POGOProtos.Settings.Master.BadgeSettings();
                }
                input.ReadMessage(badgeSettings_);
                break;
              }
              case 90: {
                if (camera_ == null) {
                  camera_ = new global::POGOProtos.Settings.Master.CameraSettings();
                }
                input.ReadMessage(camera_);
                break;
              }
              case 98: {
                if (playerLevel_ == null) {
                  playerLevel_ = new global::POGOProtos.Settings.Master.PlayerLevelSettings();
                }
                input.ReadMessage(playerLevel_);
                break;
              }
              case 106: {
                if (gymLevel_ == null) {
                  gymLevel_ = new global::POGOProtos.Settings.Master.GymLevelSettings();
                }
                input.ReadMessage(gymLevel_);
                break;
              }
              case 114: {
                if (battleSettings_ == null) {
                  battleSettings_ = new global::POGOProtos.Settings.Master.GymBattleSettings();
                }
                input.ReadMessage(battleSettings_);
                break;
              }
              case 122: {
                if (encounterSettings_ == null) {
                  encounterSettings_ = new global::POGOProtos.Settings.Master.EncounterSettings();
                }
                input.ReadMessage(encounterSettings_);
                break;
              }
              case 130: {
                if (iapItemDisplay_ == null) {
                  iapItemDisplay_ = new global::POGOProtos.Settings.Master.IapItemDisplay();
                }
                input.ReadMessage(iapItemDisplay_);
                break;
              }
              case 138: {
                if (iapSettings_ == null) {
                  iapSettings_ = new global::POGOProtos.Settings.Master.IapSettings();
                }
                input.ReadMessage(iapSettings_);
                break;
              }
              case 146: {
                if (pokemonUpgrades_ == null) {
                  pokemonUpgrades_ = new global::POGOProtos.Settings.Master.PokemonUpgradeSettings();
                }
                input.ReadMessage(pokemonUpgrades_);
                break;
              }
              case 154: {
                if (equippedBadges_ == null) {
                  equippedBadges_ = new global::POGOProtos.Settings.Master.EquippedBadgeSettings();
                }
                input.ReadMessage(equippedBadges_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetDownloadUrlsResponse : pb::IMessage<GetDownloadUrlsResponse> {
    private static readonly pb::MessageParser<GetDownloadUrlsResponse> _parser = new pb::MessageParser<GetDownloadUrlsResponse>(() => new GetDownloadUrlsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDownloadUrlsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDownloadUrlsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDownloadUrlsResponse(GetDownloadUrlsResponse other) : this() {
      downloadUrls_ = other.downloadUrls_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDownloadUrlsResponse Clone() {
      return new GetDownloadUrlsResponse(this);
    }

    /// <summary>Field number for the "download_urls" field.</summary>
    public const int DownloadUrlsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.DownloadUrlEntry> _repeated_downloadUrls_codec
        = pb::FieldCodec.ForMessage(10, global::POGOProtos.Data.DownloadUrlEntry.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.DownloadUrlEntry> downloadUrls_ = new pbc::RepeatedField<global::POGOProtos.Data.DownloadUrlEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.DownloadUrlEntry> DownloadUrls {
      get { return downloadUrls_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDownloadUrlsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDownloadUrlsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!downloadUrls_.Equals(other.downloadUrls_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= downloadUrls_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      downloadUrls_.WriteTo(output, _repeated_downloadUrls_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += downloadUrls_.CalculateSize(_repeated_downloadUrls_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDownloadUrlsResponse other) {
      if (other == null) {
        return;
      }
      downloadUrls_.Add(other.downloadUrls_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            downloadUrls_.AddEntriesFrom(input, _repeated_downloadUrls_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CollectDailyBonusResponse : pb::IMessage<CollectDailyBonusResponse> {
    private static readonly pb::MessageParser<CollectDailyBonusResponse> _parser = new pb::MessageParser<CollectDailyBonusResponse>(() => new CollectDailyBonusResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectDailyBonusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectDailyBonusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectDailyBonusResponse(CollectDailyBonusResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectDailyBonusResponse Clone() {
      return new CollectDailyBonusResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.CollectDailyBonusResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.CollectDailyBonusResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectDailyBonusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectDailyBonusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectDailyBonusResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.CollectDailyBonusResponse.Types.Result) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CollectDailyBonusResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("FAILURE")] Failure = 2,
        [pbr::OriginalName("TOO_SOON")] TooSoon = 3,
      }

    }
    #endregion

  }

  public sealed partial class DiskEncounterResponse : pb::IMessage<DiskEncounterResponse> {
    private static readonly pb::MessageParser<DiskEncounterResponse> _parser = new pb::MessageParser<DiskEncounterResponse>(() => new DiskEncounterResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DiskEncounterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiskEncounterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiskEncounterResponse(DiskEncounterResponse other) : this() {
      result_ = other.result_;
      PokemonData = other.pokemonData_ != null ? other.PokemonData.Clone() : null;
      CaptureProbability = other.captureProbability_ != null ? other.CaptureProbability.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiskEncounterResponse Clone() {
      return new DiskEncounterResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.DiskEncounterResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.DiskEncounterResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_data" field.</summary>
    public const int PokemonDataFieldNumber = 2;
    private global::POGOProtos.Data.PokemonData pokemonData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PokemonData PokemonData {
      get { return pokemonData_; }
      set {
        pokemonData_ = value;
      }
    }

    /// <summary>Field number for the "capture_probability" field.</summary>
    public const int CaptureProbabilityFieldNumber = 3;
    private global::POGOProtos.Data.Capture.CaptureProbability captureProbability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Capture.CaptureProbability CaptureProbability {
      get { return captureProbability_; }
      set {
        captureProbability_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DiskEncounterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DiskEncounterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(PokemonData, other.PokemonData)) return false;
      if (!object.Equals(CaptureProbability, other.CaptureProbability)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (pokemonData_ != null) hash ^= PokemonData.GetHashCode();
      if (captureProbability_ != null) hash ^= CaptureProbability.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (pokemonData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PokemonData);
      }
      if (captureProbability_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CaptureProbability);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (pokemonData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonData);
      }
      if (captureProbability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CaptureProbability);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DiskEncounterResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.pokemonData_ != null) {
        if (pokemonData_ == null) {
          pokemonData_ = new global::POGOProtos.Data.PokemonData();
        }
        PokemonData.MergeFrom(other.PokemonData);
      }
      if (other.captureProbability_ != null) {
        if (captureProbability_ == null) {
          captureProbability_ = new global::POGOProtos.Data.Capture.CaptureProbability();
        }
        CaptureProbability.MergeFrom(other.CaptureProbability);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.DiskEncounterResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (pokemonData_ == null) {
              pokemonData_ = new global::POGOProtos.Data.PokemonData();
            }
            input.ReadMessage(pokemonData_);
            break;
          }
          case 26: {
            if (captureProbability_ == null) {
              captureProbability_ = new global::POGOProtos.Data.Capture.CaptureProbability();
            }
            input.ReadMessage(captureProbability_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DiskEncounterResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("NOT_AVAILABLE")] NotAvailable = 2,
        [pbr::OriginalName("NOT_IN_RANGE")] NotInRange = 3,
        [pbr::OriginalName("ENCOUNTER_ALREADY_FINISHED")] EncounterAlreadyFinished = 4,
        [pbr::OriginalName("POKEMON_INVENTORY_FULL")] PokemonInventoryFull = 5,
      }

    }
    #endregion

  }

  public sealed partial class GetPlayerProfileResponse : pb::IMessage<GetPlayerProfileResponse> {
    private static readonly pb::MessageParser<GetPlayerProfileResponse> _parser = new pb::MessageParser<GetPlayerProfileResponse>(() => new GetPlayerProfileResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPlayerProfileResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerProfileResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerProfileResponse(GetPlayerProfileResponse other) : this() {
      result_ = other.result_;
      startTime_ = other.startTime_;
      badges_ = other.badges_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerProfileResponse Clone() {
      return new GetPlayerProfileResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.GetPlayerProfileResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.GetPlayerProfileResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "badges" field.</summary>
    public const int BadgesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.PlayerBadge> _repeated_badges_codec
        = pb::FieldCodec.ForMessage(26, global::POGOProtos.Data.PlayerBadge.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.PlayerBadge> badges_ = new pbc::RepeatedField<global::POGOProtos.Data.PlayerBadge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.PlayerBadge> Badges {
      get { return badges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPlayerProfileResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPlayerProfileResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (StartTime != other.StartTime) return false;
      if(!badges_.Equals(other.badges_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      hash ^= badges_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTime);
      }
      badges_.WriteTo(output, _repeated_badges_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      size += badges_.CalculateSize(_repeated_badges_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPlayerProfileResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      badges_.Add(other.badges_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.GetPlayerProfileResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 16: {
            StartTime = input.ReadInt64();
            break;
          }
          case 26: {
            badges_.AddEntriesFrom(input, _repeated_badges_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetPlayerProfileResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
      }

    }
    #endregion

  }

  public sealed partial class GetMapObjectsResponse : pb::IMessage<GetMapObjectsResponse> {
    private static readonly pb::MessageParser<GetMapObjectsResponse> _parser = new pb::MessageParser<GetMapObjectsResponse>(() => new GetMapObjectsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMapObjectsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapObjectsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapObjectsResponse(GetMapObjectsResponse other) : this() {
      mapCells_ = other.mapCells_.Clone();
      status_ = other.status_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapObjectsResponse Clone() {
      return new GetMapObjectsResponse(this);
    }

    /// <summary>Field number for the "map_cells" field.</summary>
    public const int MapCellsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::POGOProtos.Map.MapCell> _repeated_mapCells_codec
        = pb::FieldCodec.ForMessage(10, global::POGOProtos.Map.MapCell.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Map.MapCell> mapCells_ = new pbc::RepeatedField<global::POGOProtos.Map.MapCell>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Map.MapCell> MapCells {
      get { return mapCells_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::POGOProtos.Map.MapObjectsStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Map.MapObjectsStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMapObjectsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMapObjectsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mapCells_.Equals(other.mapCells_)) return false;
      if (Status != other.Status) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mapCells_.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mapCells_.WriteTo(output, _repeated_mapCells_codec);
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mapCells_.CalculateSize(_repeated_mapCells_codec);
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMapObjectsResponse other) {
      if (other == null) {
        return;
      }
      mapCells_.Add(other.mapCells_);
      if (other.Status != 0) {
        Status = other.Status;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            mapCells_.AddEntriesFrom(input, _repeated_mapCells_codec);
            break;
          }
          case 16: {
            status_ = (global::POGOProtos.Map.MapObjectsStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UseItemCaptureResponse : pb::IMessage<UseItemCaptureResponse> {
    private static readonly pb::MessageParser<UseItemCaptureResponse> _parser = new pb::MessageParser<UseItemCaptureResponse>(() => new UseItemCaptureResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UseItemCaptureResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemCaptureResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemCaptureResponse(UseItemCaptureResponse other) : this() {
      success_ = other.success_;
      itemCaptureMult_ = other.itemCaptureMult_;
      itemFleeMult_ = other.itemFleeMult_;
      stopMovement_ = other.stopMovement_;
      stopAttack_ = other.stopAttack_;
      targetMax_ = other.targetMax_;
      targetSlow_ = other.targetSlow_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemCaptureResponse Clone() {
      return new UseItemCaptureResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "item_capture_mult" field.</summary>
    public const int ItemCaptureMultFieldNumber = 2;
    private double itemCaptureMult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ItemCaptureMult {
      get { return itemCaptureMult_; }
      set {
        itemCaptureMult_ = value;
      }
    }

    /// <summary>Field number for the "item_flee_mult" field.</summary>
    public const int ItemFleeMultFieldNumber = 3;
    private double itemFleeMult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ItemFleeMult {
      get { return itemFleeMult_; }
      set {
        itemFleeMult_ = value;
      }
    }

    /// <summary>Field number for the "stop_movement" field.</summary>
    public const int StopMovementFieldNumber = 4;
    private bool stopMovement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StopMovement {
      get { return stopMovement_; }
      set {
        stopMovement_ = value;
      }
    }

    /// <summary>Field number for the "stop_attack" field.</summary>
    public const int StopAttackFieldNumber = 5;
    private bool stopAttack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StopAttack {
      get { return stopAttack_; }
      set {
        stopAttack_ = value;
      }
    }

    /// <summary>Field number for the "target_max" field.</summary>
    public const int TargetMaxFieldNumber = 6;
    private bool targetMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TargetMax {
      get { return targetMax_; }
      set {
        targetMax_ = value;
      }
    }

    /// <summary>Field number for the "target_slow" field.</summary>
    public const int TargetSlowFieldNumber = 7;
    private bool targetSlow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TargetSlow {
      get { return targetSlow_; }
      set {
        targetSlow_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UseItemCaptureResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UseItemCaptureResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ItemCaptureMult != other.ItemCaptureMult) return false;
      if (ItemFleeMult != other.ItemFleeMult) return false;
      if (StopMovement != other.StopMovement) return false;
      if (StopAttack != other.StopAttack) return false;
      if (TargetMax != other.TargetMax) return false;
      if (TargetSlow != other.TargetSlow) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ItemCaptureMult != 0D) hash ^= ItemCaptureMult.GetHashCode();
      if (ItemFleeMult != 0D) hash ^= ItemFleeMult.GetHashCode();
      if (StopMovement != false) hash ^= StopMovement.GetHashCode();
      if (StopAttack != false) hash ^= StopAttack.GetHashCode();
      if (TargetMax != false) hash ^= TargetMax.GetHashCode();
      if (TargetSlow != false) hash ^= TargetSlow.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ItemCaptureMult != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ItemCaptureMult);
      }
      if (ItemFleeMult != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ItemFleeMult);
      }
      if (StopMovement != false) {
        output.WriteRawTag(32);
        output.WriteBool(StopMovement);
      }
      if (StopAttack != false) {
        output.WriteRawTag(40);
        output.WriteBool(StopAttack);
      }
      if (TargetMax != false) {
        output.WriteRawTag(48);
        output.WriteBool(TargetMax);
      }
      if (TargetSlow != false) {
        output.WriteRawTag(56);
        output.WriteBool(TargetSlow);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ItemCaptureMult != 0D) {
        size += 1 + 8;
      }
      if (ItemFleeMult != 0D) {
        size += 1 + 8;
      }
      if (StopMovement != false) {
        size += 1 + 1;
      }
      if (StopAttack != false) {
        size += 1 + 1;
      }
      if (TargetMax != false) {
        size += 1 + 1;
      }
      if (TargetSlow != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UseItemCaptureResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ItemCaptureMult != 0D) {
        ItemCaptureMult = other.ItemCaptureMult;
      }
      if (other.ItemFleeMult != 0D) {
        ItemFleeMult = other.ItemFleeMult;
      }
      if (other.StopMovement != false) {
        StopMovement = other.StopMovement;
      }
      if (other.StopAttack != false) {
        StopAttack = other.StopAttack;
      }
      if (other.TargetMax != false) {
        TargetMax = other.TargetMax;
      }
      if (other.TargetSlow != false) {
        TargetSlow = other.TargetSlow;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 17: {
            ItemCaptureMult = input.ReadDouble();
            break;
          }
          case 25: {
            ItemFleeMult = input.ReadDouble();
            break;
          }
          case 32: {
            StopMovement = input.ReadBool();
            break;
          }
          case 40: {
            StopAttack = input.ReadBool();
            break;
          }
          case 48: {
            TargetMax = input.ReadBool();
            break;
          }
          case 56: {
            TargetSlow = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttackGymResponse : pb::IMessage<AttackGymResponse> {
    private static readonly pb::MessageParser<AttackGymResponse> _parser = new pb::MessageParser<AttackGymResponse>(() => new AttackGymResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttackGymResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttackGymResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttackGymResponse(AttackGymResponse other) : this() {
      result_ = other.result_;
      BattleLog = other.battleLog_ != null ? other.BattleLog.Clone() : null;
      battleId_ = other.battleId_;
      ActiveDefender = other.activeDefender_ != null ? other.ActiveDefender.Clone() : null;
      ActiveAttacker = other.activeAttacker_ != null ? other.ActiveAttacker.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttackGymResponse Clone() {
      return new AttackGymResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.AttackGymResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.AttackGymResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "battle_log" field.</summary>
    public const int BattleLogFieldNumber = 2;
    private global::POGOProtos.Data.Battle.BattleLog battleLog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Battle.BattleLog BattleLog {
      get { return battleLog_; }
      set {
        battleLog_ = value;
      }
    }

    /// <summary>Field number for the "battle_id" field.</summary>
    public const int BattleIdFieldNumber = 3;
    private string battleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BattleId {
      get { return battleId_; }
      set {
        battleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "active_defender" field.</summary>
    public const int ActiveDefenderFieldNumber = 4;
    private global::POGOProtos.Data.Battle.BattlePokemonInfo activeDefender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Battle.BattlePokemonInfo ActiveDefender {
      get { return activeDefender_; }
      set {
        activeDefender_ = value;
      }
    }

    /// <summary>Field number for the "active_attacker" field.</summary>
    public const int ActiveAttackerFieldNumber = 5;
    private global::POGOProtos.Data.Battle.BattlePokemonInfo activeAttacker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Battle.BattlePokemonInfo ActiveAttacker {
      get { return activeAttacker_; }
      set {
        activeAttacker_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttackGymResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttackGymResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(BattleLog, other.BattleLog)) return false;
      if (BattleId != other.BattleId) return false;
      if (!object.Equals(ActiveDefender, other.ActiveDefender)) return false;
      if (!object.Equals(ActiveAttacker, other.ActiveAttacker)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (battleLog_ != null) hash ^= BattleLog.GetHashCode();
      if (BattleId.Length != 0) hash ^= BattleId.GetHashCode();
      if (activeDefender_ != null) hash ^= ActiveDefender.GetHashCode();
      if (activeAttacker_ != null) hash ^= ActiveAttacker.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (battleLog_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BattleLog);
      }
      if (BattleId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BattleId);
      }
      if (activeDefender_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ActiveDefender);
      }
      if (activeAttacker_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ActiveAttacker);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (battleLog_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleLog);
      }
      if (BattleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BattleId);
      }
      if (activeDefender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActiveDefender);
      }
      if (activeAttacker_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActiveAttacker);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttackGymResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.battleLog_ != null) {
        if (battleLog_ == null) {
          battleLog_ = new global::POGOProtos.Data.Battle.BattleLog();
        }
        BattleLog.MergeFrom(other.BattleLog);
      }
      if (other.BattleId.Length != 0) {
        BattleId = other.BattleId;
      }
      if (other.activeDefender_ != null) {
        if (activeDefender_ == null) {
          activeDefender_ = new global::POGOProtos.Data.Battle.BattlePokemonInfo();
        }
        ActiveDefender.MergeFrom(other.ActiveDefender);
      }
      if (other.activeAttacker_ != null) {
        if (activeAttacker_ == null) {
          activeAttacker_ = new global::POGOProtos.Data.Battle.BattlePokemonInfo();
        }
        ActiveAttacker.MergeFrom(other.ActiveAttacker);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.AttackGymResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (battleLog_ == null) {
              battleLog_ = new global::POGOProtos.Data.Battle.BattleLog();
            }
            input.ReadMessage(battleLog_);
            break;
          }
          case 26: {
            BattleId = input.ReadString();
            break;
          }
          case 34: {
            if (activeDefender_ == null) {
              activeDefender_ = new global::POGOProtos.Data.Battle.BattlePokemonInfo();
            }
            input.ReadMessage(activeDefender_);
            break;
          }
          case 42: {
            if (activeAttacker_ == null) {
              activeAttacker_ = new global::POGOProtos.Data.Battle.BattlePokemonInfo();
            }
            input.ReadMessage(activeAttacker_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AttackGymResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_INVALID_ATTACK_ACTIONS")] ErrorInvalidAttackActions = 2,
        [pbr::OriginalName("ERROR_NOT_IN_RANGE")] ErrorNotInRange = 3,
      }

    }
    #endregion

  }

  public sealed partial class MarkTutorialCompleteResponse : pb::IMessage<MarkTutorialCompleteResponse> {
    private static readonly pb::MessageParser<MarkTutorialCompleteResponse> _parser = new pb::MessageParser<MarkTutorialCompleteResponse>(() => new MarkTutorialCompleteResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarkTutorialCompleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarkTutorialCompleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarkTutorialCompleteResponse(MarkTutorialCompleteResponse other) : this() {
      success_ = other.success_;
      PlayerData = other.playerData_ != null ? other.PlayerData.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarkTutorialCompleteResponse Clone() {
      return new MarkTutorialCompleteResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "player_data" field.</summary>
    public const int PlayerDataFieldNumber = 2;
    private global::POGOProtos.Data.PlayerData playerData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PlayerData PlayerData {
      get { return playerData_; }
      set {
        playerData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarkTutorialCompleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarkTutorialCompleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (!object.Equals(PlayerData, other.PlayerData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (playerData_ != null) hash ^= PlayerData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (playerData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (playerData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarkTutorialCompleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.playerData_ != null) {
        if (playerData_ == null) {
          playerData_ = new global::POGOProtos.Data.PlayerData();
        }
        PlayerData.MergeFrom(other.PlayerData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (playerData_ == null) {
              playerData_ = new global::POGOProtos.Data.PlayerData();
            }
            input.ReadMessage(playerData_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetContactSettingsResponse : pb::IMessage<SetContactSettingsResponse> {
    private static readonly pb::MessageParser<SetContactSettingsResponse> _parser = new pb::MessageParser<SetContactSettingsResponse>(() => new SetContactSettingsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetContactSettingsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetContactSettingsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetContactSettingsResponse(SetContactSettingsResponse other) : this() {
      status_ = other.status_;
      PlayerData = other.playerData_ != null ? other.PlayerData.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetContactSettingsResponse Clone() {
      return new SetContactSettingsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.SetContactSettingsResponse.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.SetContactSettingsResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "player_data" field.</summary>
    public const int PlayerDataFieldNumber = 2;
    private global::POGOProtos.Data.PlayerData playerData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PlayerData PlayerData {
      get { return playerData_; }
      set {
        playerData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetContactSettingsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetContactSettingsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(PlayerData, other.PlayerData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (playerData_ != null) hash ^= PlayerData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (playerData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (playerData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetContactSettingsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.playerData_ != null) {
        if (playerData_ == null) {
          playerData_ = new global::POGOProtos.Data.PlayerData();
        }
        PlayerData.MergeFrom(other.PlayerData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::POGOProtos.Networking.Responses.SetContactSettingsResponse.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            if (playerData_ == null) {
              playerData_ = new global::POGOProtos.Data.PlayerData();
            }
            input.ReadMessage(playerData_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SetContactSettingsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("FAILURE")] Failure = 2,
      }

    }
    #endregion

  }

  public sealed partial class GetIncensePokemonResponse : pb::IMessage<GetIncensePokemonResponse> {
    private static readonly pb::MessageParser<GetIncensePokemonResponse> _parser = new pb::MessageParser<GetIncensePokemonResponse>(() => new GetIncensePokemonResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetIncensePokemonResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetIncensePokemonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetIncensePokemonResponse(GetIncensePokemonResponse other) : this() {
      result_ = other.result_;
      pokemonId_ = other.pokemonId_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      encounterLocation_ = other.encounterLocation_;
      encounterId_ = other.encounterId_;
      disappearTimestampMs_ = other.disappearTimestampMs_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetIncensePokemonResponse Clone() {
      return new GetIncensePokemonResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.GetIncensePokemonResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.GetIncensePokemonResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_id" field.</summary>
    public const int PokemonIdFieldNumber = 2;
    private global::POGOProtos.Enums.PokemonId pokemonId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Enums.PokemonId PokemonId {
      get { return pokemonId_; }
      set {
        pokemonId_ = value;
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 3;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 4;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "encounter_location" field.</summary>
    public const int EncounterLocationFieldNumber = 5;
    private string encounterLocation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncounterLocation {
      get { return encounterLocation_; }
      set {
        encounterLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encounter_id" field.</summary>
    public const int EncounterIdFieldNumber = 6;
    private ulong encounterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EncounterId {
      get { return encounterId_; }
      set {
        encounterId_ = value;
      }
    }

    /// <summary>Field number for the "disappear_timestamp_ms" field.</summary>
    public const int DisappearTimestampMsFieldNumber = 7;
    private long disappearTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DisappearTimestampMs {
      get { return disappearTimestampMs_; }
      set {
        disappearTimestampMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetIncensePokemonResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetIncensePokemonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (PokemonId != other.PokemonId) return false;
      if (Latitude != other.Latitude) return false;
      if (Longitude != other.Longitude) return false;
      if (EncounterLocation != other.EncounterLocation) return false;
      if (EncounterId != other.EncounterId) return false;
      if (DisappearTimestampMs != other.DisappearTimestampMs) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (PokemonId != 0) hash ^= PokemonId.GetHashCode();
      if (Latitude != 0D) hash ^= Latitude.GetHashCode();
      if (Longitude != 0D) hash ^= Longitude.GetHashCode();
      if (EncounterLocation.Length != 0) hash ^= EncounterLocation.GetHashCode();
      if (EncounterId != 0UL) hash ^= EncounterId.GetHashCode();
      if (DisappearTimestampMs != 0L) hash ^= DisappearTimestampMs.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (PokemonId != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) PokemonId);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Longitude);
      }
      if (EncounterLocation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EncounterLocation);
      }
      if (EncounterId != 0UL) {
        output.WriteRawTag(49);
        output.WriteFixed64(EncounterId);
      }
      if (DisappearTimestampMs != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(DisappearTimestampMs);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (PokemonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PokemonId);
      }
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (EncounterLocation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncounterLocation);
      }
      if (EncounterId != 0UL) {
        size += 1 + 8;
      }
      if (DisappearTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DisappearTimestampMs);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetIncensePokemonResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.PokemonId != 0) {
        PokemonId = other.PokemonId;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.EncounterLocation.Length != 0) {
        EncounterLocation = other.EncounterLocation;
      }
      if (other.EncounterId != 0UL) {
        EncounterId = other.EncounterId;
      }
      if (other.DisappearTimestampMs != 0L) {
        DisappearTimestampMs = other.DisappearTimestampMs;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.GetIncensePokemonResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 16: {
            pokemonId_ = (global::POGOProtos.Enums.PokemonId) input.ReadEnum();
            break;
          }
          case 25: {
            Latitude = input.ReadDouble();
            break;
          }
          case 33: {
            Longitude = input.ReadDouble();
            break;
          }
          case 42: {
            EncounterLocation = input.ReadString();
            break;
          }
          case 49: {
            EncounterId = input.ReadFixed64();
            break;
          }
          case 56: {
            DisappearTimestampMs = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetIncensePokemonResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("INCENSE_ENCOUNTER_UNKNOWN")] IncenseEncounterUnknown = 0,
        [pbr::OriginalName("INCENSE_ENCOUNTER_AVAILABLE")] IncenseEncounterAvailable = 1,
        [pbr::OriginalName("INCENSE_ENCOUNTER_NOT_AVAILABLE")] IncenseEncounterNotAvailable = 2,
      }

    }
    #endregion

  }

  public sealed partial class GetPlayerResponse : pb::IMessage<GetPlayerResponse> {
    private static readonly pb::MessageParser<GetPlayerResponse> _parser = new pb::MessageParser<GetPlayerResponse>(() => new GetPlayerResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPlayerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerResponse(GetPlayerResponse other) : this() {
      success_ = other.success_;
      PlayerData = other.playerData_ != null ? other.PlayerData.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerResponse Clone() {
      return new GetPlayerResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "player_data" field.</summary>
    public const int PlayerDataFieldNumber = 2;
    private global::POGOProtos.Data.PlayerData playerData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PlayerData PlayerData {
      get { return playerData_; }
      set {
        playerData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPlayerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPlayerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (!object.Equals(PlayerData, other.PlayerData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (playerData_ != null) hash ^= PlayerData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (playerData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (playerData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPlayerResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.playerData_ != null) {
        if (playerData_ == null) {
          playerData_ = new global::POGOProtos.Data.PlayerData();
        }
        PlayerData.MergeFrom(other.PlayerData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            if (playerData_ == null) {
              playerData_ = new global::POGOProtos.Data.PlayerData();
            }
            input.ReadMessage(playerData_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EquipBadgeResponse : pb::IMessage<EquipBadgeResponse> {
    private static readonly pb::MessageParser<EquipBadgeResponse> _parser = new pb::MessageParser<EquipBadgeResponse>(() => new EquipBadgeResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EquipBadgeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipBadgeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipBadgeResponse(EquipBadgeResponse other) : this() {
      result_ = other.result_;
      Equipped = other.equipped_ != null ? other.Equipped.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EquipBadgeResponse Clone() {
      return new EquipBadgeResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.EquipBadgeResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.EquipBadgeResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "equipped" field.</summary>
    public const int EquippedFieldNumber = 2;
    private global::POGOProtos.Data.Player.EquippedBadge equipped_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Player.EquippedBadge Equipped {
      get { return equipped_; }
      set {
        equipped_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EquipBadgeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EquipBadgeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(Equipped, other.Equipped)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (equipped_ != null) hash ^= Equipped.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (equipped_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Equipped);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (equipped_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Equipped);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EquipBadgeResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.equipped_ != null) {
        if (equipped_ == null) {
          equipped_ = new global::POGOProtos.Data.Player.EquippedBadge();
        }
        Equipped.MergeFrom(other.Equipped);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.EquipBadgeResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (equipped_ == null) {
              equipped_ = new global::POGOProtos.Data.Player.EquippedBadge();
            }
            input.ReadMessage(equipped_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EquipBadgeResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("COOLDOWN_ACTIVE")] CooldownActive = 2,
        [pbr::OriginalName("NOT_QUALIFIED")] NotQualified = 3,
      }

    }
    #endregion

  }

  public sealed partial class FortDeployPokemonResponse : pb::IMessage<FortDeployPokemonResponse> {
    private static readonly pb::MessageParser<FortDeployPokemonResponse> _parser = new pb::MessageParser<FortDeployPokemonResponse>(() => new FortDeployPokemonResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FortDeployPokemonResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortDeployPokemonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortDeployPokemonResponse(FortDeployPokemonResponse other) : this() {
      result_ = other.result_;
      FortDetails = other.fortDetails_ != null ? other.FortDetails.Clone() : null;
      PokemonData = other.pokemonData_ != null ? other.PokemonData.Clone() : null;
      GymState = other.gymState_ != null ? other.GymState.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortDeployPokemonResponse Clone() {
      return new FortDeployPokemonResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.FortDeployPokemonResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.FortDeployPokemonResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "fort_details" field.</summary>
    public const int FortDetailsFieldNumber = 2;
    private global::POGOProtos.Networking.Responses.FortDetailsResponse fortDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.FortDetailsResponse FortDetails {
      get { return fortDetails_; }
      set {
        fortDetails_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_data" field.</summary>
    public const int PokemonDataFieldNumber = 3;
    private global::POGOProtos.Data.PokemonData pokemonData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PokemonData PokemonData {
      get { return pokemonData_; }
      set {
        pokemonData_ = value;
      }
    }

    /// <summary>Field number for the "gym_state" field.</summary>
    public const int GymStateFieldNumber = 4;
    private global::POGOProtos.Data.Gym.GymState gymState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Gym.GymState GymState {
      get { return gymState_; }
      set {
        gymState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FortDeployPokemonResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FortDeployPokemonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(FortDetails, other.FortDetails)) return false;
      if (!object.Equals(PokemonData, other.PokemonData)) return false;
      if (!object.Equals(GymState, other.GymState)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (fortDetails_ != null) hash ^= FortDetails.GetHashCode();
      if (pokemonData_ != null) hash ^= PokemonData.GetHashCode();
      if (gymState_ != null) hash ^= GymState.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (fortDetails_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FortDetails);
      }
      if (pokemonData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PokemonData);
      }
      if (gymState_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GymState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (fortDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FortDetails);
      }
      if (pokemonData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonData);
      }
      if (gymState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GymState);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FortDeployPokemonResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.fortDetails_ != null) {
        if (fortDetails_ == null) {
          fortDetails_ = new global::POGOProtos.Networking.Responses.FortDetailsResponse();
        }
        FortDetails.MergeFrom(other.FortDetails);
      }
      if (other.pokemonData_ != null) {
        if (pokemonData_ == null) {
          pokemonData_ = new global::POGOProtos.Data.PokemonData();
        }
        PokemonData.MergeFrom(other.PokemonData);
      }
      if (other.gymState_ != null) {
        if (gymState_ == null) {
          gymState_ = new global::POGOProtos.Data.Gym.GymState();
        }
        GymState.MergeFrom(other.GymState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.FortDeployPokemonResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (fortDetails_ == null) {
              fortDetails_ = new global::POGOProtos.Networking.Responses.FortDetailsResponse();
            }
            input.ReadMessage(fortDetails_);
            break;
          }
          case 26: {
            if (pokemonData_ == null) {
              pokemonData_ = new global::POGOProtos.Data.PokemonData();
            }
            input.ReadMessage(pokemonData_);
            break;
          }
          case 34: {
            if (gymState_ == null) {
              gymState_ = new global::POGOProtos.Data.Gym.GymState();
            }
            input.ReadMessage(gymState_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FortDeployPokemonResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("NO_RESULT_SET")] NoResultSet = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_ALREADY_HAS_POKEMON_ON_FORT")] ErrorAlreadyHasPokemonOnFort = 2,
        [pbr::OriginalName("ERROR_OPPOSING_TEAM_OWNS_FORT")] ErrorOpposingTeamOwnsFort = 3,
        [pbr::OriginalName("ERROR_FORT_IS_FULL")] ErrorFortIsFull = 4,
        [pbr::OriginalName("ERROR_NOT_IN_RANGE")] ErrorNotInRange = 5,
        [pbr::OriginalName("ERROR_PLAYER_HAS_NO_TEAM")] ErrorPlayerHasNoTeam = 6,
        [pbr::OriginalName("ERROR_POKEMON_NOT_FULL_HP")] ErrorPokemonNotFullHp = 7,
        [pbr::OriginalName("ERROR_PLAYER_BELOW_MINIMUM_LEVEL")] ErrorPlayerBelowMinimumLevel = 8,
      }

    }
    #endregion

  }

  public sealed partial class GetSuggestedCodenamesResponse : pb::IMessage<GetSuggestedCodenamesResponse> {
    private static readonly pb::MessageParser<GetSuggestedCodenamesResponse> _parser = new pb::MessageParser<GetSuggestedCodenamesResponse>(() => new GetSuggestedCodenamesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSuggestedCodenamesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestedCodenamesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestedCodenamesResponse(GetSuggestedCodenamesResponse other) : this() {
      codenames_ = other.codenames_.Clone();
      success_ = other.success_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestedCodenamesResponse Clone() {
      return new GetSuggestedCodenamesResponse(this);
    }

    /// <summary>Field number for the "codenames" field.</summary>
    public const int CodenamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_codenames_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> codenames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Codenames {
      get { return codenames_; }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSuggestedCodenamesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSuggestedCodenamesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!codenames_.Equals(other.codenames_)) return false;
      if (Success != other.Success) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= codenames_.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      codenames_.WriteTo(output, _repeated_codenames_codec);
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += codenames_.CalculateSize(_repeated_codenames_codec);
      if (Success != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSuggestedCodenamesResponse other) {
      if (other == null) {
        return;
      }
      codenames_.Add(other.codenames_);
      if (other.Success != false) {
        Success = other.Success;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            codenames_.AddEntriesFrom(input, _repeated_codenames_codec);
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FortSearchResponse : pb::IMessage<FortSearchResponse> {
    private static readonly pb::MessageParser<FortSearchResponse> _parser = new pb::MessageParser<FortSearchResponse>(() => new FortSearchResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FortSearchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortSearchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortSearchResponse(FortSearchResponse other) : this() {
      result_ = other.result_;
      itemsAwarded_ = other.itemsAwarded_.Clone();
      gemsAwarded_ = other.gemsAwarded_;
      PokemonDataEgg = other.pokemonDataEgg_ != null ? other.PokemonDataEgg.Clone() : null;
      experienceAwarded_ = other.experienceAwarded_;
      cooldownCompleteTimestampMs_ = other.cooldownCompleteTimestampMs_;
      chainHackSequenceNumber_ = other.chainHackSequenceNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortSearchResponse Clone() {
      return new FortSearchResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.FortSearchResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.FortSearchResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "items_awarded" field.</summary>
    public const int ItemsAwardedFieldNumber = 2;
    private static readonly pb::FieldCodec<global::POGOProtos.Inventory.Item.ItemAward> _repeated_itemsAwarded_codec
        = pb::FieldCodec.ForMessage(18, global::POGOProtos.Inventory.Item.ItemAward.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Inventory.Item.ItemAward> itemsAwarded_ = new pbc::RepeatedField<global::POGOProtos.Inventory.Item.ItemAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Inventory.Item.ItemAward> ItemsAwarded {
      get { return itemsAwarded_; }
    }

    /// <summary>Field number for the "gems_awarded" field.</summary>
    public const int GemsAwardedFieldNumber = 3;
    private int gemsAwarded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GemsAwarded {
      get { return gemsAwarded_; }
      set {
        gemsAwarded_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_data_egg" field.</summary>
    public const int PokemonDataEggFieldNumber = 4;
    private global::POGOProtos.Data.PokemonData pokemonDataEgg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PokemonData PokemonDataEgg {
      get { return pokemonDataEgg_; }
      set {
        pokemonDataEgg_ = value;
      }
    }

    /// <summary>Field number for the "experience_awarded" field.</summary>
    public const int ExperienceAwardedFieldNumber = 5;
    private int experienceAwarded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExperienceAwarded {
      get { return experienceAwarded_; }
      set {
        experienceAwarded_ = value;
      }
    }

    /// <summary>Field number for the "cooldown_complete_timestamp_ms" field.</summary>
    public const int CooldownCompleteTimestampMsFieldNumber = 6;
    private long cooldownCompleteTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CooldownCompleteTimestampMs {
      get { return cooldownCompleteTimestampMs_; }
      set {
        cooldownCompleteTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "chain_hack_sequence_number" field.</summary>
    public const int ChainHackSequenceNumberFieldNumber = 7;
    private int chainHackSequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChainHackSequenceNumber {
      get { return chainHackSequenceNumber_; }
      set {
        chainHackSequenceNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FortSearchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FortSearchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!itemsAwarded_.Equals(other.itemsAwarded_)) return false;
      if (GemsAwarded != other.GemsAwarded) return false;
      if (!object.Equals(PokemonDataEgg, other.PokemonDataEgg)) return false;
      if (ExperienceAwarded != other.ExperienceAwarded) return false;
      if (CooldownCompleteTimestampMs != other.CooldownCompleteTimestampMs) return false;
      if (ChainHackSequenceNumber != other.ChainHackSequenceNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= itemsAwarded_.GetHashCode();
      if (GemsAwarded != 0) hash ^= GemsAwarded.GetHashCode();
      if (pokemonDataEgg_ != null) hash ^= PokemonDataEgg.GetHashCode();
      if (ExperienceAwarded != 0) hash ^= ExperienceAwarded.GetHashCode();
      if (CooldownCompleteTimestampMs != 0L) hash ^= CooldownCompleteTimestampMs.GetHashCode();
      if (ChainHackSequenceNumber != 0) hash ^= ChainHackSequenceNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      itemsAwarded_.WriteTo(output, _repeated_itemsAwarded_codec);
      if (GemsAwarded != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GemsAwarded);
      }
      if (pokemonDataEgg_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PokemonDataEgg);
      }
      if (ExperienceAwarded != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ExperienceAwarded);
      }
      if (CooldownCompleteTimestampMs != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CooldownCompleteTimestampMs);
      }
      if (ChainHackSequenceNumber != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ChainHackSequenceNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += itemsAwarded_.CalculateSize(_repeated_itemsAwarded_codec);
      if (GemsAwarded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GemsAwarded);
      }
      if (pokemonDataEgg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonDataEgg);
      }
      if (ExperienceAwarded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExperienceAwarded);
      }
      if (CooldownCompleteTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CooldownCompleteTimestampMs);
      }
      if (ChainHackSequenceNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChainHackSequenceNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FortSearchResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      itemsAwarded_.Add(other.itemsAwarded_);
      if (other.GemsAwarded != 0) {
        GemsAwarded = other.GemsAwarded;
      }
      if (other.pokemonDataEgg_ != null) {
        if (pokemonDataEgg_ == null) {
          pokemonDataEgg_ = new global::POGOProtos.Data.PokemonData();
        }
        PokemonDataEgg.MergeFrom(other.PokemonDataEgg);
      }
      if (other.ExperienceAwarded != 0) {
        ExperienceAwarded = other.ExperienceAwarded;
      }
      if (other.CooldownCompleteTimestampMs != 0L) {
        CooldownCompleteTimestampMs = other.CooldownCompleteTimestampMs;
      }
      if (other.ChainHackSequenceNumber != 0) {
        ChainHackSequenceNumber = other.ChainHackSequenceNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.FortSearchResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            itemsAwarded_.AddEntriesFrom(input, _repeated_itemsAwarded_codec);
            break;
          }
          case 24: {
            GemsAwarded = input.ReadInt32();
            break;
          }
          case 34: {
            if (pokemonDataEgg_ == null) {
              pokemonDataEgg_ = new global::POGOProtos.Data.PokemonData();
            }
            input.ReadMessage(pokemonDataEgg_);
            break;
          }
          case 40: {
            ExperienceAwarded = input.ReadInt32();
            break;
          }
          case 48: {
            CooldownCompleteTimestampMs = input.ReadInt64();
            break;
          }
          case 56: {
            ChainHackSequenceNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FortSearchResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("NO_RESULT_SET")] NoResultSet = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("OUT_OF_RANGE")] OutOfRange = 2,
        [pbr::OriginalName("IN_COOLDOWN_PERIOD")] InCooldownPeriod = 3,
        [pbr::OriginalName("INVENTORY_FULL")] InventoryFull = 4,
      }

    }
    #endregion

  }

  public sealed partial class SetAvatarResponse : pb::IMessage<SetAvatarResponse> {
    private static readonly pb::MessageParser<SetAvatarResponse> _parser = new pb::MessageParser<SetAvatarResponse>(() => new SetAvatarResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetAvatarResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAvatarResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAvatarResponse(SetAvatarResponse other) : this() {
      status_ = other.status_;
      PlayerData = other.playerData_ != null ? other.PlayerData.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAvatarResponse Clone() {
      return new SetAvatarResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.SetAvatarResponse.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.SetAvatarResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "player_data" field.</summary>
    public const int PlayerDataFieldNumber = 2;
    private global::POGOProtos.Data.PlayerData playerData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PlayerData PlayerData {
      get { return playerData_; }
      set {
        playerData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetAvatarResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetAvatarResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(PlayerData, other.PlayerData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (playerData_ != null) hash ^= PlayerData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (playerData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (playerData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetAvatarResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.playerData_ != null) {
        if (playerData_ == null) {
          playerData_ = new global::POGOProtos.Data.PlayerData();
        }
        PlayerData.MergeFrom(other.PlayerData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::POGOProtos.Networking.Responses.SetAvatarResponse.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            if (playerData_ == null) {
              playerData_ = new global::POGOProtos.Data.PlayerData();
            }
            input.ReadMessage(playerData_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SetAvatarResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("AVATAR_ALREADY_SET")] AvatarAlreadySet = 2,
        [pbr::OriginalName("FAILURE")] Failure = 3,
      }

    }
    #endregion

  }

  public sealed partial class EncounterResponse : pb::IMessage<EncounterResponse> {
    private static readonly pb::MessageParser<EncounterResponse> _parser = new pb::MessageParser<EncounterResponse>(() => new EncounterResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncounterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterResponse(EncounterResponse other) : this() {
      WildPokemon = other.wildPokemon_ != null ? other.WildPokemon.Clone() : null;
      background_ = other.background_;
      status_ = other.status_;
      CaptureProbability = other.captureProbability_ != null ? other.CaptureProbability.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncounterResponse Clone() {
      return new EncounterResponse(this);
    }

    /// <summary>Field number for the "wild_pokemon" field.</summary>
    public const int WildPokemonFieldNumber = 1;
    private global::POGOProtos.Map.Pokemon.WildPokemon wildPokemon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Map.Pokemon.WildPokemon WildPokemon {
      get { return wildPokemon_; }
      set {
        wildPokemon_ = value;
      }
    }

    /// <summary>Field number for the "background" field.</summary>
    public const int BackgroundFieldNumber = 2;
    private global::POGOProtos.Networking.Responses.EncounterResponse.Types.Background background_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.EncounterResponse.Types.Background Background {
      get { return background_; }
      set {
        background_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::POGOProtos.Networking.Responses.EncounterResponse.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.EncounterResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "capture_probability" field.</summary>
    public const int CaptureProbabilityFieldNumber = 4;
    private global::POGOProtos.Data.Capture.CaptureProbability captureProbability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Capture.CaptureProbability CaptureProbability {
      get { return captureProbability_; }
      set {
        captureProbability_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncounterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncounterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WildPokemon, other.WildPokemon)) return false;
      if (Background != other.Background) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(CaptureProbability, other.CaptureProbability)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (wildPokemon_ != null) hash ^= WildPokemon.GetHashCode();
      if (Background != 0) hash ^= Background.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (captureProbability_ != null) hash ^= CaptureProbability.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (wildPokemon_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WildPokemon);
      }
      if (Background != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Background);
      }
      if (Status != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (captureProbability_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CaptureProbability);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (wildPokemon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WildPokemon);
      }
      if (Background != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Background);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (captureProbability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CaptureProbability);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncounterResponse other) {
      if (other == null) {
        return;
      }
      if (other.wildPokemon_ != null) {
        if (wildPokemon_ == null) {
          wildPokemon_ = new global::POGOProtos.Map.Pokemon.WildPokemon();
        }
        WildPokemon.MergeFrom(other.WildPokemon);
      }
      if (other.Background != 0) {
        Background = other.Background;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.captureProbability_ != null) {
        if (captureProbability_ == null) {
          captureProbability_ = new global::POGOProtos.Data.Capture.CaptureProbability();
        }
        CaptureProbability.MergeFrom(other.CaptureProbability);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (wildPokemon_ == null) {
              wildPokemon_ = new global::POGOProtos.Map.Pokemon.WildPokemon();
            }
            input.ReadMessage(wildPokemon_);
            break;
          }
          case 16: {
            background_ = (global::POGOProtos.Networking.Responses.EncounterResponse.Types.Background) input.ReadEnum();
            break;
          }
          case 24: {
            status_ = (global::POGOProtos.Networking.Responses.EncounterResponse.Types.Status) input.ReadEnum();
            break;
          }
          case 34: {
            if (captureProbability_ == null) {
              captureProbability_ = new global::POGOProtos.Data.Capture.CaptureProbability();
            }
            input.ReadMessage(captureProbability_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EncounterResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Background {
        [pbr::OriginalName("PARK")] Park = 0,
        [pbr::OriginalName("DESERT")] Desert = 1,
      }

      public enum Status {
        [pbr::OriginalName("ENCOUNTER_ERROR")] EncounterError = 0,
        [pbr::OriginalName("ENCOUNTER_SUCCESS")] EncounterSuccess = 1,
        [pbr::OriginalName("ENCOUNTER_NOT_FOUND")] EncounterNotFound = 2,
        [pbr::OriginalName("ENCOUNTER_CLOSED")] EncounterClosed = 3,
        [pbr::OriginalName("ENCOUNTER_POKEMON_FLED")] EncounterPokemonFled = 4,
        [pbr::OriginalName("ENCOUNTER_NOT_IN_RANGE")] EncounterNotInRange = 5,
        [pbr::OriginalName("ENCOUNTER_ALREADY_HAPPENED")] EncounterAlreadyHappened = 6,
        [pbr::OriginalName("POKEMON_INVENTORY_FULL")] PokemonInventoryFull = 7,
      }

    }
    #endregion

  }

  public sealed partial class UseItemReviveResponse : pb::IMessage<UseItemReviveResponse> {
    private static readonly pb::MessageParser<UseItemReviveResponse> _parser = new pb::MessageParser<UseItemReviveResponse>(() => new UseItemReviveResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UseItemReviveResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemReviveResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemReviveResponse(UseItemReviveResponse other) : this() {
      result_ = other.result_;
      stamina_ = other.stamina_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemReviveResponse Clone() {
      return new UseItemReviveResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.UseItemReviveResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.UseItemReviveResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "stamina" field.</summary>
    public const int StaminaFieldNumber = 2;
    private int stamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stamina {
      get { return stamina_; }
      set {
        stamina_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UseItemReviveResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UseItemReviveResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Stamina != other.Stamina) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Stamina != 0) hash ^= Stamina.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (Stamina != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Stamina);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (Stamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stamina);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UseItemReviveResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Stamina != 0) {
        Stamina = other.Stamina;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.UseItemReviveResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 16: {
            Stamina = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UseItemReviveResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_NO_POKEMON")] ErrorNoPokemon = 2,
        [pbr::OriginalName("ERROR_CANNOT_USE")] ErrorCannotUse = 3,
        [pbr::OriginalName("ERROR_DEPLOYED_TO_FORT")] ErrorDeployedToFort = 4,
      }

    }
    #endregion

  }

  public sealed partial class CheckAwardedBadgesResponse : pb::IMessage<CheckAwardedBadgesResponse> {
    private static readonly pb::MessageParser<CheckAwardedBadgesResponse> _parser = new pb::MessageParser<CheckAwardedBadgesResponse>(() => new CheckAwardedBadgesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckAwardedBadgesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAwardedBadgesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAwardedBadgesResponse(CheckAwardedBadgesResponse other) : this() {
      success_ = other.success_;
      awardedBadges_ = other.awardedBadges_.Clone();
      awardedBadgeLevels_ = other.awardedBadgeLevels_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckAwardedBadgesResponse Clone() {
      return new CheckAwardedBadgesResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "awarded_badges" field.</summary>
    public const int AwardedBadgesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::POGOProtos.Enums.BadgeType> _repeated_awardedBadges_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::POGOProtos.Enums.BadgeType) x);
    private readonly pbc::RepeatedField<global::POGOProtos.Enums.BadgeType> awardedBadges_ = new pbc::RepeatedField<global::POGOProtos.Enums.BadgeType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Enums.BadgeType> AwardedBadges {
      get { return awardedBadges_; }
    }

    /// <summary>Field number for the "awarded_badge_levels" field.</summary>
    public const int AwardedBadgeLevelsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_awardedBadgeLevels_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> awardedBadgeLevels_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AwardedBadgeLevels {
      get { return awardedBadgeLevels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckAwardedBadgesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckAwardedBadgesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if(!awardedBadges_.Equals(other.awardedBadges_)) return false;
      if(!awardedBadgeLevels_.Equals(other.awardedBadgeLevels_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      hash ^= awardedBadges_.GetHashCode();
      hash ^= awardedBadgeLevels_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      awardedBadges_.WriteTo(output, _repeated_awardedBadges_codec);
      awardedBadgeLevels_.WriteTo(output, _repeated_awardedBadgeLevels_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      size += awardedBadges_.CalculateSize(_repeated_awardedBadges_codec);
      size += awardedBadgeLevels_.CalculateSize(_repeated_awardedBadgeLevels_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckAwardedBadgesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      awardedBadges_.Add(other.awardedBadges_);
      awardedBadgeLevels_.Add(other.awardedBadgeLevels_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18:
          case 16: {
            awardedBadges_.AddEntriesFrom(input, _repeated_awardedBadges_codec);
            break;
          }
          case 26:
          case 24: {
            awardedBadgeLevels_.AddEntriesFrom(input, _repeated_awardedBadgeLevels_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClaimCodenameResponse : pb::IMessage<ClaimCodenameResponse> {
    private static readonly pb::MessageParser<ClaimCodenameResponse> _parser = new pb::MessageParser<ClaimCodenameResponse>(() => new ClaimCodenameResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClaimCodenameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClaimCodenameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClaimCodenameResponse(ClaimCodenameResponse other) : this() {
      codename_ = other.codename_;
      userMessage_ = other.userMessage_;
      isAssignable_ = other.isAssignable_;
      status_ = other.status_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClaimCodenameResponse Clone() {
      return new ClaimCodenameResponse(this);
    }

    /// <summary>Field number for the "codename" field.</summary>
    public const int CodenameFieldNumber = 1;
    private string codename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Codename {
      get { return codename_; }
      set {
        codename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_message" field.</summary>
    public const int UserMessageFieldNumber = 2;
    private string userMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserMessage {
      get { return userMessage_; }
      set {
        userMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_assignable" field.</summary>
    public const int IsAssignableFieldNumber = 3;
    private bool isAssignable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAssignable {
      get { return isAssignable_; }
      set {
        isAssignable_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::POGOProtos.Networking.Responses.ClaimCodenameResponse.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.ClaimCodenameResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClaimCodenameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClaimCodenameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Codename != other.Codename) return false;
      if (UserMessage != other.UserMessage) return false;
      if (IsAssignable != other.IsAssignable) return false;
      if (Status != other.Status) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Codename.Length != 0) hash ^= Codename.GetHashCode();
      if (UserMessage.Length != 0) hash ^= UserMessage.GetHashCode();
      if (IsAssignable != false) hash ^= IsAssignable.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Codename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Codename);
      }
      if (UserMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserMessage);
      }
      if (IsAssignable != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsAssignable);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Codename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Codename);
      }
      if (UserMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserMessage);
      }
      if (IsAssignable != false) {
        size += 1 + 1;
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClaimCodenameResponse other) {
      if (other == null) {
        return;
      }
      if (other.Codename.Length != 0) {
        Codename = other.Codename;
      }
      if (other.UserMessage.Length != 0) {
        UserMessage = other.UserMessage;
      }
      if (other.IsAssignable != false) {
        IsAssignable = other.IsAssignable;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Codename = input.ReadString();
            break;
          }
          case 18: {
            UserMessage = input.ReadString();
            break;
          }
          case 24: {
            IsAssignable = input.ReadBool();
            break;
          }
          case 32: {
            status_ = (global::POGOProtos.Networking.Responses.ClaimCodenameResponse.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ClaimCodenameResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("CODENAME_NOT_AVAILABLE")] CodenameNotAvailable = 2,
        [pbr::OriginalName("CODENAME_NOT_VALID")] CodenameNotValid = 3,
        [pbr::OriginalName("CURRENT_OWNER")] CurrentOwner = 4,
        [pbr::OriginalName("CODENAME_CHANGE_NOT_ALLOWED")] CodenameChangeNotAllowed = 5,
      }

    }
    #endregion

  }

  public sealed partial class UseItemGymResponse : pb::IMessage<UseItemGymResponse> {
    private static readonly pb::MessageParser<UseItemGymResponse> _parser = new pb::MessageParser<UseItemGymResponse>(() => new UseItemGymResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UseItemGymResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemGymResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemGymResponse(UseItemGymResponse other) : this() {
      result_ = other.result_;
      updatedGp_ = other.updatedGp_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemGymResponse Clone() {
      return new UseItemGymResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.UseItemGymResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.UseItemGymResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "updated_gp" field.</summary>
    public const int UpdatedGpFieldNumber = 2;
    private long updatedGp_;
    /// <summary>
    ///  Gym Points (?)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UpdatedGp {
      get { return updatedGp_; }
      set {
        updatedGp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UseItemGymResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UseItemGymResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (UpdatedGp != other.UpdatedGp) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (UpdatedGp != 0L) hash ^= UpdatedGp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (UpdatedGp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UpdatedGp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (UpdatedGp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdatedGp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UseItemGymResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.UpdatedGp != 0L) {
        UpdatedGp = other.UpdatedGp;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.UseItemGymResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 16: {
            UpdatedGp = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UseItemGymResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_CANNOT_USE")] ErrorCannotUse = 2,
        [pbr::OriginalName("ERROR_NOT_IN_RANGE")] ErrorNotInRange = 3,
      }

    }
    #endregion

  }

  /// <summary>
  ///  Initialized by assist.py
  /// </summary>
  public sealed partial class AddFortModifierResponse : pb::IMessage<AddFortModifierResponse> {
    private static readonly pb::MessageParser<AddFortModifierResponse> _parser = new pb::MessageParser<AddFortModifierResponse>(() => new AddFortModifierResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddFortModifierResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddFortModifierResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddFortModifierResponse(AddFortModifierResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddFortModifierResponse Clone() {
      return new AddFortModifierResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddFortModifierResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddFortModifierResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddFortModifierResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class CheckCodenameAvailableResponse : pb::IMessage<CheckCodenameAvailableResponse> {
    private static readonly pb::MessageParser<CheckCodenameAvailableResponse> _parser = new pb::MessageParser<CheckCodenameAvailableResponse>(() => new CheckCodenameAvailableResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckCodenameAvailableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckCodenameAvailableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckCodenameAvailableResponse(CheckCodenameAvailableResponse other) : this() {
      codename_ = other.codename_;
      userMessage_ = other.userMessage_;
      isAssignable_ = other.isAssignable_;
      status_ = other.status_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckCodenameAvailableResponse Clone() {
      return new CheckCodenameAvailableResponse(this);
    }

    /// <summary>Field number for the "codename" field.</summary>
    public const int CodenameFieldNumber = 1;
    private string codename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Codename {
      get { return codename_; }
      set {
        codename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_message" field.</summary>
    public const int UserMessageFieldNumber = 2;
    private string userMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserMessage {
      get { return userMessage_; }
      set {
        userMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_assignable" field.</summary>
    public const int IsAssignableFieldNumber = 3;
    private bool isAssignable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAssignable {
      get { return isAssignable_; }
      set {
        isAssignable_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::POGOProtos.Networking.Responses.CheckCodenameAvailableResponse.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.CheckCodenameAvailableResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckCodenameAvailableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckCodenameAvailableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Codename != other.Codename) return false;
      if (UserMessage != other.UserMessage) return false;
      if (IsAssignable != other.IsAssignable) return false;
      if (Status != other.Status) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Codename.Length != 0) hash ^= Codename.GetHashCode();
      if (UserMessage.Length != 0) hash ^= UserMessage.GetHashCode();
      if (IsAssignable != false) hash ^= IsAssignable.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Codename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Codename);
      }
      if (UserMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserMessage);
      }
      if (IsAssignable != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsAssignable);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Codename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Codename);
      }
      if (UserMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserMessage);
      }
      if (IsAssignable != false) {
        size += 1 + 1;
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckCodenameAvailableResponse other) {
      if (other == null) {
        return;
      }
      if (other.Codename.Length != 0) {
        Codename = other.Codename;
      }
      if (other.UserMessage.Length != 0) {
        UserMessage = other.UserMessage;
      }
      if (other.IsAssignable != false) {
        IsAssignable = other.IsAssignable;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Codename = input.ReadString();
            break;
          }
          case 18: {
            UserMessage = input.ReadString();
            break;
          }
          case 24: {
            IsAssignable = input.ReadBool();
            break;
          }
          case 32: {
            status_ = (global::POGOProtos.Networking.Responses.CheckCodenameAvailableResponse.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CheckCodenameAvailableResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("CODENAME_NOT_AVAILABLE")] CodenameNotAvailable = 2,
        [pbr::OriginalName("CODENAME_NOT_VALID")] CodenameNotValid = 3,
        [pbr::OriginalName("CURRENT_OWNER")] CurrentOwner = 4,
        [pbr::OriginalName("CODENAME_CHANGE_NOT_ALLOWED")] CodenameChangeNotAllowed = 5,
      }

    }
    #endregion

  }

  public sealed partial class EchoResponse : pb::IMessage<EchoResponse> {
    private static readonly pb::MessageParser<EchoResponse> _parser = new pb::MessageParser<EchoResponse>(() => new EchoResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EchoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EchoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EchoResponse(EchoResponse other) : this() {
      context_ = other.context_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EchoResponse Clone() {
      return new EchoResponse(this);
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 1;
    private string context_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Context {
      get { return context_; }
      set {
        context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EchoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EchoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Context != other.Context) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Context.Length != 0) hash ^= Context.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Context.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Context);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Context.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Context);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EchoResponse other) {
      if (other == null) {
        return;
      }
      if (other.Context.Length != 0) {
        Context = other.Context;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Context = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerUpdateResponse : pb::IMessage<PlayerUpdateResponse> {
    private static readonly pb::MessageParser<PlayerUpdateResponse> _parser = new pb::MessageParser<PlayerUpdateResponse>(() => new PlayerUpdateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerUpdateResponse(PlayerUpdateResponse other) : this() {
      wildPokemons_ = other.wildPokemons_.Clone();
      forts_ = other.forts_.Clone();
      fortsNearby_ = other.fortsNearby_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerUpdateResponse Clone() {
      return new PlayerUpdateResponse(this);
    }

    /// <summary>Field number for the "wild_pokemons" field.</summary>
    public const int WildPokemonsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::POGOProtos.Map.Pokemon.WildPokemon> _repeated_wildPokemons_codec
        = pb::FieldCodec.ForMessage(10, global::POGOProtos.Map.Pokemon.WildPokemon.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Map.Pokemon.WildPokemon> wildPokemons_ = new pbc::RepeatedField<global::POGOProtos.Map.Pokemon.WildPokemon>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Map.Pokemon.WildPokemon> WildPokemons {
      get { return wildPokemons_; }
    }

    /// <summary>Field number for the "forts" field.</summary>
    public const int FortsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::POGOProtos.Map.Fort.FortData> _repeated_forts_codec
        = pb::FieldCodec.ForMessage(18, global::POGOProtos.Map.Fort.FortData.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Map.Fort.FortData> forts_ = new pbc::RepeatedField<global::POGOProtos.Map.Fort.FortData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Map.Fort.FortData> Forts {
      get { return forts_; }
    }

    /// <summary>Field number for the "forts_nearby" field.</summary>
    public const int FortsNearbyFieldNumber = 3;
    private int fortsNearby_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FortsNearby {
      get { return fortsNearby_; }
      set {
        fortsNearby_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!wildPokemons_.Equals(other.wildPokemons_)) return false;
      if(!forts_.Equals(other.forts_)) return false;
      if (FortsNearby != other.FortsNearby) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= wildPokemons_.GetHashCode();
      hash ^= forts_.GetHashCode();
      if (FortsNearby != 0) hash ^= FortsNearby.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      wildPokemons_.WriteTo(output, _repeated_wildPokemons_codec);
      forts_.WriteTo(output, _repeated_forts_codec);
      if (FortsNearby != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FortsNearby);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += wildPokemons_.CalculateSize(_repeated_wildPokemons_codec);
      size += forts_.CalculateSize(_repeated_forts_codec);
      if (FortsNearby != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FortsNearby);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerUpdateResponse other) {
      if (other == null) {
        return;
      }
      wildPokemons_.Add(other.wildPokemons_);
      forts_.Add(other.forts_);
      if (other.FortsNearby != 0) {
        FortsNearby = other.FortsNearby;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            wildPokemons_.AddEntriesFrom(input, _repeated_wildPokemons_codec);
            break;
          }
          case 18: {
            forts_.AddEntriesFrom(input, _repeated_forts_codec);
            break;
          }
          case 24: {
            FortsNearby = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpgradePokemonResponse : pb::IMessage<UpgradePokemonResponse> {
    private static readonly pb::MessageParser<UpgradePokemonResponse> _parser = new pb::MessageParser<UpgradePokemonResponse>(() => new UpgradePokemonResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpgradePokemonResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradePokemonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradePokemonResponse(UpgradePokemonResponse other) : this() {
      result_ = other.result_;
      UpgradedPokemon = other.upgradedPokemon_ != null ? other.UpgradedPokemon.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpgradePokemonResponse Clone() {
      return new UpgradePokemonResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.UpgradePokemonResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.UpgradePokemonResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "upgraded_pokemon" field.</summary>
    public const int UpgradedPokemonFieldNumber = 2;
    private global::POGOProtos.Data.PokemonData upgradedPokemon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PokemonData UpgradedPokemon {
      get { return upgradedPokemon_; }
      set {
        upgradedPokemon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpgradePokemonResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpgradePokemonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(UpgradedPokemon, other.UpgradedPokemon)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (upgradedPokemon_ != null) hash ^= UpgradedPokemon.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (upgradedPokemon_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpgradedPokemon);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (upgradedPokemon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpgradedPokemon);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpgradePokemonResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.upgradedPokemon_ != null) {
        if (upgradedPokemon_ == null) {
          upgradedPokemon_ = new global::POGOProtos.Data.PokemonData();
        }
        UpgradedPokemon.MergeFrom(other.UpgradedPokemon);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.UpgradePokemonResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (upgradedPokemon_ == null) {
              upgradedPokemon_ = new global::POGOProtos.Data.PokemonData();
            }
            input.ReadMessage(upgradedPokemon_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpgradePokemonResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_POKEMON_NOT_FOUND")] ErrorPokemonNotFound = 2,
        [pbr::OriginalName("ERROR_INSUFFICIENT_RESOURCES")] ErrorInsufficientResources = 3,
        [pbr::OriginalName("ERROR_UPGRADE_NOT_AVAILABLE")] ErrorUpgradeNotAvailable = 4,
        [pbr::OriginalName("ERROR_POKEMON_IS_DEPLOYED")] ErrorPokemonIsDeployed = 5,
      }

    }
    #endregion

  }

  public sealed partial class CatchPokemonResponse : pb::IMessage<CatchPokemonResponse> {
    private static readonly pb::MessageParser<CatchPokemonResponse> _parser = new pb::MessageParser<CatchPokemonResponse>(() => new CatchPokemonResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CatchPokemonResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatchPokemonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatchPokemonResponse(CatchPokemonResponse other) : this() {
      status_ = other.status_;
      missPercent_ = other.missPercent_;
      capturedPokemonId_ = other.capturedPokemonId_;
      CaptureAward = other.captureAward_ != null ? other.CaptureAward.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CatchPokemonResponse Clone() {
      return new CatchPokemonResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.CatchPokemonResponse.Types.CatchStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.CatchPokemonResponse.Types.CatchStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "miss_percent" field.</summary>
    public const int MissPercentFieldNumber = 2;
    private double missPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MissPercent {
      get { return missPercent_; }
      set {
        missPercent_ = value;
      }
    }

    /// <summary>Field number for the "captured_pokemon_id" field.</summary>
    public const int CapturedPokemonIdFieldNumber = 3;
    private ulong capturedPokemonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CapturedPokemonId {
      get { return capturedPokemonId_; }
      set {
        capturedPokemonId_ = value;
      }
    }

    /// <summary>Field number for the "capture_award" field.</summary>
    public const int CaptureAwardFieldNumber = 4;
    private global::POGOProtos.Data.Capture.CaptureAward captureAward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Capture.CaptureAward CaptureAward {
      get { return captureAward_; }
      set {
        captureAward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CatchPokemonResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CatchPokemonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (MissPercent != other.MissPercent) return false;
      if (CapturedPokemonId != other.CapturedPokemonId) return false;
      if (!object.Equals(CaptureAward, other.CaptureAward)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (MissPercent != 0D) hash ^= MissPercent.GetHashCode();
      if (CapturedPokemonId != 0UL) hash ^= CapturedPokemonId.GetHashCode();
      if (captureAward_ != null) hash ^= CaptureAward.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (MissPercent != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(MissPercent);
      }
      if (CapturedPokemonId != 0UL) {
        output.WriteRawTag(25);
        output.WriteFixed64(CapturedPokemonId);
      }
      if (captureAward_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CaptureAward);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (MissPercent != 0D) {
        size += 1 + 8;
      }
      if (CapturedPokemonId != 0UL) {
        size += 1 + 8;
      }
      if (captureAward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CaptureAward);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CatchPokemonResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.MissPercent != 0D) {
        MissPercent = other.MissPercent;
      }
      if (other.CapturedPokemonId != 0UL) {
        CapturedPokemonId = other.CapturedPokemonId;
      }
      if (other.captureAward_ != null) {
        if (captureAward_ == null) {
          captureAward_ = new global::POGOProtos.Data.Capture.CaptureAward();
        }
        CaptureAward.MergeFrom(other.CaptureAward);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::POGOProtos.Networking.Responses.CatchPokemonResponse.Types.CatchStatus) input.ReadEnum();
            break;
          }
          case 17: {
            MissPercent = input.ReadDouble();
            break;
          }
          case 25: {
            CapturedPokemonId = input.ReadFixed64();
            break;
          }
          case 34: {
            if (captureAward_ == null) {
              captureAward_ = new global::POGOProtos.Data.Capture.CaptureAward();
            }
            input.ReadMessage(captureAward_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CatchPokemonResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum CatchStatus {
        [pbr::OriginalName("CATCH_ERROR")] CatchError = 0,
        [pbr::OriginalName("CATCH_SUCCESS")] CatchSuccess = 1,
        [pbr::OriginalName("CATCH_ESCAPE")] CatchEscape = 2,
        [pbr::OriginalName("CATCH_FLEE")] CatchFlee = 3,
        [pbr::OriginalName("CATCH_MISSED")] CatchMissed = 4,
      }

    }
    #endregion

  }

  public sealed partial class StartGymBattleResponse : pb::IMessage<StartGymBattleResponse> {
    private static readonly pb::MessageParser<StartGymBattleResponse> _parser = new pb::MessageParser<StartGymBattleResponse>(() => new StartGymBattleResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartGymBattleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGymBattleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGymBattleResponse(StartGymBattleResponse other) : this() {
      result_ = other.result_;
      battleStartTimestampMs_ = other.battleStartTimestampMs_;
      battleEndTimestampMs_ = other.battleEndTimestampMs_;
      battleId_ = other.battleId_;
      Defender = other.defender_ != null ? other.Defender.Clone() : null;
      BattleLog = other.battleLog_ != null ? other.BattleLog.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartGymBattleResponse Clone() {
      return new StartGymBattleResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.StartGymBattleResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.StartGymBattleResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "battle_start_timestamp_ms" field.</summary>
    public const int BattleStartTimestampMsFieldNumber = 2;
    private long battleStartTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BattleStartTimestampMs {
      get { return battleStartTimestampMs_; }
      set {
        battleStartTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "battle_end_timestamp_ms" field.</summary>
    public const int BattleEndTimestampMsFieldNumber = 3;
    private long battleEndTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BattleEndTimestampMs {
      get { return battleEndTimestampMs_; }
      set {
        battleEndTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "battle_id" field.</summary>
    public const int BattleIdFieldNumber = 4;
    private string battleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BattleId {
      get { return battleId_; }
      set {
        battleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "defender" field.</summary>
    public const int DefenderFieldNumber = 5;
    private global::POGOProtos.Data.Battle.BattleParticipant defender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Battle.BattleParticipant Defender {
      get { return defender_; }
      set {
        defender_ = value;
      }
    }

    /// <summary>Field number for the "battle_log" field.</summary>
    public const int BattleLogFieldNumber = 6;
    private global::POGOProtos.Data.Battle.BattleLog battleLog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Battle.BattleLog BattleLog {
      get { return battleLog_; }
      set {
        battleLog_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartGymBattleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartGymBattleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (BattleStartTimestampMs != other.BattleStartTimestampMs) return false;
      if (BattleEndTimestampMs != other.BattleEndTimestampMs) return false;
      if (BattleId != other.BattleId) return false;
      if (!object.Equals(Defender, other.Defender)) return false;
      if (!object.Equals(BattleLog, other.BattleLog)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (BattleStartTimestampMs != 0L) hash ^= BattleStartTimestampMs.GetHashCode();
      if (BattleEndTimestampMs != 0L) hash ^= BattleEndTimestampMs.GetHashCode();
      if (BattleId.Length != 0) hash ^= BattleId.GetHashCode();
      if (defender_ != null) hash ^= Defender.GetHashCode();
      if (battleLog_ != null) hash ^= BattleLog.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (BattleStartTimestampMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BattleStartTimestampMs);
      }
      if (BattleEndTimestampMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BattleEndTimestampMs);
      }
      if (BattleId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BattleId);
      }
      if (defender_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Defender);
      }
      if (battleLog_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(BattleLog);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (BattleStartTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BattleStartTimestampMs);
      }
      if (BattleEndTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BattleEndTimestampMs);
      }
      if (BattleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BattleId);
      }
      if (defender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Defender);
      }
      if (battleLog_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleLog);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartGymBattleResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.BattleStartTimestampMs != 0L) {
        BattleStartTimestampMs = other.BattleStartTimestampMs;
      }
      if (other.BattleEndTimestampMs != 0L) {
        BattleEndTimestampMs = other.BattleEndTimestampMs;
      }
      if (other.BattleId.Length != 0) {
        BattleId = other.BattleId;
      }
      if (other.defender_ != null) {
        if (defender_ == null) {
          defender_ = new global::POGOProtos.Data.Battle.BattleParticipant();
        }
        Defender.MergeFrom(other.Defender);
      }
      if (other.battleLog_ != null) {
        if (battleLog_ == null) {
          battleLog_ = new global::POGOProtos.Data.Battle.BattleLog();
        }
        BattleLog.MergeFrom(other.BattleLog);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.StartGymBattleResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 16: {
            BattleStartTimestampMs = input.ReadInt64();
            break;
          }
          case 24: {
            BattleEndTimestampMs = input.ReadInt64();
            break;
          }
          case 34: {
            BattleId = input.ReadString();
            break;
          }
          case 42: {
            if (defender_ == null) {
              defender_ = new global::POGOProtos.Data.Battle.BattleParticipant();
            }
            input.ReadMessage(defender_);
            break;
          }
          case 50: {
            if (battleLog_ == null) {
              battleLog_ = new global::POGOProtos.Data.Battle.BattleLog();
            }
            input.ReadMessage(battleLog_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the StartGymBattleResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_GYM_NOT_FOUND")] ErrorGymNotFound = 2,
        [pbr::OriginalName("ERROR_GYM_NEUTRAL")] ErrorGymNeutral = 3,
        [pbr::OriginalName("ERROR_GYM_WRONG_TEAM")] ErrorGymWrongTeam = 4,
        [pbr::OriginalName("ERROR_GYM_EMPTY")] ErrorGymEmpty = 5,
        [pbr::OriginalName("ERROR_INVALID_DEFENDER")] ErrorInvalidDefender = 6,
        [pbr::OriginalName("ERROR_TRAINING_INVALID_ATTACKER_COUNT")] ErrorTrainingInvalidAttackerCount = 7,
        [pbr::OriginalName("ERROR_ALL_POKEMON_FAINTED")] ErrorAllPokemonFainted = 8,
        [pbr::OriginalName("ERROR_TOO_MANY_BATTLES")] ErrorTooManyBattles = 9,
        [pbr::OriginalName("ERROR_TOO_MANY_PLAYERS")] ErrorTooManyPlayers = 10,
        [pbr::OriginalName("ERROR_GYM_BATTLE_LOCKOUT")] ErrorGymBattleLockout = 11,
        [pbr::OriginalName("ERROR_PLAYER_BELOW_MINIMUM_LEVEL")] ErrorPlayerBelowMinimumLevel = 12,
        [pbr::OriginalName("ERROR_NOT_IN_RANGE")] ErrorNotInRange = 13,
      }

    }
    #endregion

  }

  public sealed partial class LevelUpRewardsResponse : pb::IMessage<LevelUpRewardsResponse> {
    private static readonly pb::MessageParser<LevelUpRewardsResponse> _parser = new pb::MessageParser<LevelUpRewardsResponse>(() => new LevelUpRewardsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LevelUpRewardsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelUpRewardsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelUpRewardsResponse(LevelUpRewardsResponse other) : this() {
      result_ = other.result_;
      itemsAwarded_ = other.itemsAwarded_.Clone();
      itemsUnlocked_ = other.itemsUnlocked_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelUpRewardsResponse Clone() {
      return new LevelUpRewardsResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.LevelUpRewardsResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.LevelUpRewardsResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "items_awarded" field.</summary>
    public const int ItemsAwardedFieldNumber = 2;
    private static readonly pb::FieldCodec<global::POGOProtos.Inventory.Item.ItemAward> _repeated_itemsAwarded_codec
        = pb::FieldCodec.ForMessage(18, global::POGOProtos.Inventory.Item.ItemAward.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Inventory.Item.ItemAward> itemsAwarded_ = new pbc::RepeatedField<global::POGOProtos.Inventory.Item.ItemAward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Inventory.Item.ItemAward> ItemsAwarded {
      get { return itemsAwarded_; }
    }

    /// <summary>Field number for the "items_unlocked" field.</summary>
    public const int ItemsUnlockedFieldNumber = 4;
    private static readonly pb::FieldCodec<global::POGOProtos.Inventory.Item.ItemId> _repeated_itemsUnlocked_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::POGOProtos.Inventory.Item.ItemId) x);
    private readonly pbc::RepeatedField<global::POGOProtos.Inventory.Item.ItemId> itemsUnlocked_ = new pbc::RepeatedField<global::POGOProtos.Inventory.Item.ItemId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Inventory.Item.ItemId> ItemsUnlocked {
      get { return itemsUnlocked_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LevelUpRewardsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LevelUpRewardsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!itemsAwarded_.Equals(other.itemsAwarded_)) return false;
      if(!itemsUnlocked_.Equals(other.itemsUnlocked_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= itemsAwarded_.GetHashCode();
      hash ^= itemsUnlocked_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      itemsAwarded_.WriteTo(output, _repeated_itemsAwarded_codec);
      itemsUnlocked_.WriteTo(output, _repeated_itemsUnlocked_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += itemsAwarded_.CalculateSize(_repeated_itemsAwarded_codec);
      size += itemsUnlocked_.CalculateSize(_repeated_itemsUnlocked_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LevelUpRewardsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      itemsAwarded_.Add(other.itemsAwarded_);
      itemsUnlocked_.Add(other.itemsUnlocked_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.LevelUpRewardsResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            itemsAwarded_.AddEntriesFrom(input, _repeated_itemsAwarded_codec);
            break;
          }
          case 34:
          case 32: {
            itemsUnlocked_.AddEntriesFrom(input, _repeated_itemsUnlocked_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LevelUpRewardsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("AWARDED_ALREADY")] AwardedAlready = 2,
      }

    }
    #endregion

  }

  public sealed partial class FortDetailsResponse : pb::IMessage<FortDetailsResponse> {
    private static readonly pb::MessageParser<FortDetailsResponse> _parser = new pb::MessageParser<FortDetailsResponse>(() => new FortDetailsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FortDetailsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortDetailsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortDetailsResponse(FortDetailsResponse other) : this() {
      fortId_ = other.fortId_;
      teamColor_ = other.teamColor_;
      PokemonData = other.pokemonData_ != null ? other.PokemonData.Clone() : null;
      name_ = other.name_;
      imageUrls_ = other.imageUrls_.Clone();
      fp_ = other.fp_;
      stamina_ = other.stamina_;
      maxStamina_ = other.maxStamina_;
      type_ = other.type_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      description_ = other.description_;
      modifiers_ = other.modifiers_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortDetailsResponse Clone() {
      return new FortDetailsResponse(this);
    }

    /// <summary>Field number for the "fort_id" field.</summary>
    public const int FortIdFieldNumber = 1;
    private string fortId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FortId {
      get { return fortId_; }
      set {
        fortId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "team_color" field.</summary>
    public const int TeamColorFieldNumber = 2;
    private global::POGOProtos.Enums.TeamColor teamColor_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Enums.TeamColor TeamColor {
      get { return teamColor_; }
      set {
        teamColor_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_data" field.</summary>
    public const int PokemonDataFieldNumber = 3;
    private global::POGOProtos.Data.PokemonData pokemonData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PokemonData PokemonData {
      get { return pokemonData_; }
      set {
        pokemonData_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_urls" field.</summary>
    public const int ImageUrlsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_imageUrls_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> imageUrls_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ImageUrls {
      get { return imageUrls_; }
    }

    /// <summary>Field number for the "fp" field.</summary>
    public const int FpFieldNumber = 6;
    private int fp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Fp {
      get { return fp_; }
      set {
        fp_ = value;
      }
    }

    /// <summary>Field number for the "stamina" field.</summary>
    public const int StaminaFieldNumber = 7;
    private int stamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stamina {
      get { return stamina_; }
      set {
        stamina_ = value;
      }
    }

    /// <summary>Field number for the "max_stamina" field.</summary>
    public const int MaxStaminaFieldNumber = 8;
    private int maxStamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxStamina {
      get { return maxStamina_; }
      set {
        maxStamina_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 9;
    private global::POGOProtos.Map.Fort.FortType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Map.Fort.FortType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 10;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 11;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 12;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modifiers" field.</summary>
    public const int ModifiersFieldNumber = 13;
    private static readonly pb::FieldCodec<global::POGOProtos.Map.Fort.FortModifier> _repeated_modifiers_codec
        = pb::FieldCodec.ForMessage(106, global::POGOProtos.Map.Fort.FortModifier.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Map.Fort.FortModifier> modifiers_ = new pbc::RepeatedField<global::POGOProtos.Map.Fort.FortModifier>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Map.Fort.FortModifier> Modifiers {
      get { return modifiers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FortDetailsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FortDetailsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FortId != other.FortId) return false;
      if (TeamColor != other.TeamColor) return false;
      if (!object.Equals(PokemonData, other.PokemonData)) return false;
      if (Name != other.Name) return false;
      if(!imageUrls_.Equals(other.imageUrls_)) return false;
      if (Fp != other.Fp) return false;
      if (Stamina != other.Stamina) return false;
      if (MaxStamina != other.MaxStamina) return false;
      if (Type != other.Type) return false;
      if (Latitude != other.Latitude) return false;
      if (Longitude != other.Longitude) return false;
      if (Description != other.Description) return false;
      if(!modifiers_.Equals(other.modifiers_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FortId.Length != 0) hash ^= FortId.GetHashCode();
      if (TeamColor != 0) hash ^= TeamColor.GetHashCode();
      if (pokemonData_ != null) hash ^= PokemonData.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= imageUrls_.GetHashCode();
      if (Fp != 0) hash ^= Fp.GetHashCode();
      if (Stamina != 0) hash ^= Stamina.GetHashCode();
      if (MaxStamina != 0) hash ^= MaxStamina.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Latitude != 0D) hash ^= Latitude.GetHashCode();
      if (Longitude != 0D) hash ^= Longitude.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= modifiers_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FortId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FortId);
      }
      if (TeamColor != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TeamColor);
      }
      if (pokemonData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PokemonData);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      imageUrls_.WriteTo(output, _repeated_imageUrls_codec);
      if (Fp != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Fp);
      }
      if (Stamina != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Stamina);
      }
      if (MaxStamina != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MaxStamina);
      }
      if (Type != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Type);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Longitude);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Description);
      }
      modifiers_.WriteTo(output, _repeated_modifiers_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FortId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FortId);
      }
      if (TeamColor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TeamColor);
      }
      if (pokemonData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonData);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += imageUrls_.CalculateSize(_repeated_imageUrls_codec);
      if (Fp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Fp);
      }
      if (Stamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stamina);
      }
      if (MaxStamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxStamina);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += modifiers_.CalculateSize(_repeated_modifiers_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FortDetailsResponse other) {
      if (other == null) {
        return;
      }
      if (other.FortId.Length != 0) {
        FortId = other.FortId;
      }
      if (other.TeamColor != 0) {
        TeamColor = other.TeamColor;
      }
      if (other.pokemonData_ != null) {
        if (pokemonData_ == null) {
          pokemonData_ = new global::POGOProtos.Data.PokemonData();
        }
        PokemonData.MergeFrom(other.PokemonData);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      imageUrls_.Add(other.imageUrls_);
      if (other.Fp != 0) {
        Fp = other.Fp;
      }
      if (other.Stamina != 0) {
        Stamina = other.Stamina;
      }
      if (other.MaxStamina != 0) {
        MaxStamina = other.MaxStamina;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      modifiers_.Add(other.modifiers_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            FortId = input.ReadString();
            break;
          }
          case 16: {
            teamColor_ = (global::POGOProtos.Enums.TeamColor) input.ReadEnum();
            break;
          }
          case 26: {
            if (pokemonData_ == null) {
              pokemonData_ = new global::POGOProtos.Data.PokemonData();
            }
            input.ReadMessage(pokemonData_);
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            imageUrls_.AddEntriesFrom(input, _repeated_imageUrls_codec);
            break;
          }
          case 48: {
            Fp = input.ReadInt32();
            break;
          }
          case 56: {
            Stamina = input.ReadInt32();
            break;
          }
          case 64: {
            MaxStamina = input.ReadInt32();
            break;
          }
          case 72: {
            type_ = (global::POGOProtos.Map.Fort.FortType) input.ReadEnum();
            break;
          }
          case 81: {
            Latitude = input.ReadDouble();
            break;
          }
          case 89: {
            Longitude = input.ReadDouble();
            break;
          }
          case 98: {
            Description = input.ReadString();
            break;
          }
          case 106: {
            modifiers_.AddEntriesFrom(input, _repeated_modifiers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CollectDailyDefenderBonusResponse : pb::IMessage<CollectDailyDefenderBonusResponse> {
    private static readonly pb::MessageParser<CollectDailyDefenderBonusResponse> _parser = new pb::MessageParser<CollectDailyDefenderBonusResponse>(() => new CollectDailyDefenderBonusResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CollectDailyDefenderBonusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectDailyDefenderBonusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectDailyDefenderBonusResponse(CollectDailyDefenderBonusResponse other) : this() {
      result_ = other.result_;
      currencyType_ = other.currencyType_.Clone();
      currencyAwarded_ = other.currencyAwarded_.Clone();
      defendersCount_ = other.defendersCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CollectDailyDefenderBonusResponse Clone() {
      return new CollectDailyDefenderBonusResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.CollectDailyDefenderBonusResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.CollectDailyDefenderBonusResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "currency_type" field.</summary>
    public const int CurrencyTypeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_currencyType_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> currencyType_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CurrencyType {
      get { return currencyType_; }
    }

    /// <summary>Field number for the "currency_awarded" field.</summary>
    public const int CurrencyAwardedFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_currencyAwarded_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> currencyAwarded_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CurrencyAwarded {
      get { return currencyAwarded_; }
    }

    /// <summary>Field number for the "defenders_count" field.</summary>
    public const int DefendersCountFieldNumber = 4;
    private int defendersCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefendersCount {
      get { return defendersCount_; }
      set {
        defendersCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CollectDailyDefenderBonusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CollectDailyDefenderBonusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!currencyType_.Equals(other.currencyType_)) return false;
      if(!currencyAwarded_.Equals(other.currencyAwarded_)) return false;
      if (DefendersCount != other.DefendersCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= currencyType_.GetHashCode();
      hash ^= currencyAwarded_.GetHashCode();
      if (DefendersCount != 0) hash ^= DefendersCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      currencyType_.WriteTo(output, _repeated_currencyType_codec);
      currencyAwarded_.WriteTo(output, _repeated_currencyAwarded_codec);
      if (DefendersCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DefendersCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += currencyType_.CalculateSize(_repeated_currencyType_codec);
      size += currencyAwarded_.CalculateSize(_repeated_currencyAwarded_codec);
      if (DefendersCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefendersCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CollectDailyDefenderBonusResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      currencyType_.Add(other.currencyType_);
      currencyAwarded_.Add(other.currencyAwarded_);
      if (other.DefendersCount != 0) {
        DefendersCount = other.DefendersCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.CollectDailyDefenderBonusResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            currencyType_.AddEntriesFrom(input, _repeated_currencyType_codec);
            break;
          }
          case 26:
          case 24: {
            currencyAwarded_.AddEntriesFrom(input, _repeated_currencyAwarded_codec);
            break;
          }
          case 32: {
            DefendersCount = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CollectDailyDefenderBonusResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("FAILURE")] Failure = 2,
        [pbr::OriginalName("TOO_SOON")] TooSoon = 3,
        [pbr::OriginalName("NO_DEFENDERS")] NoDefenders = 4,
      }

    }
    #endregion

  }

  public sealed partial class SfidaActionLogResponse : pb::IMessage<SfidaActionLogResponse> {
    private static readonly pb::MessageParser<SfidaActionLogResponse> _parser = new pb::MessageParser<SfidaActionLogResponse>(() => new SfidaActionLogResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SfidaActionLogResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SfidaActionLogResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SfidaActionLogResponse(SfidaActionLogResponse other) : this() {
      result_ = other.result_;
      logEntries_ = other.logEntries_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SfidaActionLogResponse Clone() {
      return new SfidaActionLogResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.SfidaActionLogResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.SfidaActionLogResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "log_entries" field.</summary>
    public const int LogEntriesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.Logs.ActionLogEntry> _repeated_logEntries_codec
        = pb::FieldCodec.ForMessage(18, global::POGOProtos.Data.Logs.ActionLogEntry.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.Logs.ActionLogEntry> logEntries_ = new pbc::RepeatedField<global::POGOProtos.Data.Logs.ActionLogEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.Logs.ActionLogEntry> LogEntries {
      get { return logEntries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SfidaActionLogResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SfidaActionLogResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!logEntries_.Equals(other.logEntries_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= logEntries_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      logEntries_.WriteTo(output, _repeated_logEntries_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += logEntries_.CalculateSize(_repeated_logEntries_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SfidaActionLogResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      logEntries_.Add(other.logEntries_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.SfidaActionLogResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            logEntries_.AddEntriesFrom(input, _repeated_logEntries_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SfidaActionLogResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
      }

    }
    #endregion

  }

  public sealed partial class RecycleInventoryItemResponse : pb::IMessage<RecycleInventoryItemResponse> {
    private static readonly pb::MessageParser<RecycleInventoryItemResponse> _parser = new pb::MessageParser<RecycleInventoryItemResponse>(() => new RecycleInventoryItemResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecycleInventoryItemResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecycleInventoryItemResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecycleInventoryItemResponse(RecycleInventoryItemResponse other) : this() {
      result_ = other.result_;
      newCount_ = other.newCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecycleInventoryItemResponse Clone() {
      return new RecycleInventoryItemResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.RecycleInventoryItemResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.RecycleInventoryItemResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "new_count" field.</summary>
    public const int NewCountFieldNumber = 2;
    private int newCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewCount {
      get { return newCount_; }
      set {
        newCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecycleInventoryItemResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecycleInventoryItemResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (NewCount != other.NewCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (NewCount != 0) hash ^= NewCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (NewCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NewCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (NewCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecycleInventoryItemResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.NewCount != 0) {
        NewCount = other.NewCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.RecycleInventoryItemResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 16: {
            NewCount = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RecycleInventoryItemResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_NOT_ENOUGH_COPIES")] ErrorNotEnoughCopies = 2,
        [pbr::OriginalName("ERROR_CANNOT_RECYCLE_INCUBATORS")] ErrorCannotRecycleIncubators = 3,
      }

    }
    #endregion

  }

  public sealed partial class GetAssetDigestResponse : pb::IMessage<GetAssetDigestResponse> {
    private static readonly pb::MessageParser<GetAssetDigestResponse> _parser = new pb::MessageParser<GetAssetDigestResponse>(() => new GetAssetDigestResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAssetDigestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAssetDigestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAssetDigestResponse(GetAssetDigestResponse other) : this() {
      digest_ = other.digest_.Clone();
      timestampMs_ = other.timestampMs_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAssetDigestResponse Clone() {
      return new GetAssetDigestResponse(this);
    }

    /// <summary>Field number for the "digest" field.</summary>
    public const int DigestFieldNumber = 1;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.AssetDigestEntry> _repeated_digest_codec
        = pb::FieldCodec.ForMessage(10, global::POGOProtos.Data.AssetDigestEntry.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.AssetDigestEntry> digest_ = new pbc::RepeatedField<global::POGOProtos.Data.AssetDigestEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.AssetDigestEntry> Digest {
      get { return digest_; }
    }

    /// <summary>Field number for the "timestamp_ms" field.</summary>
    public const int TimestampMsFieldNumber = 2;
    private ulong timestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimestampMs {
      get { return timestampMs_; }
      set {
        timestampMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAssetDigestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAssetDigestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!digest_.Equals(other.digest_)) return false;
      if (TimestampMs != other.TimestampMs) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= digest_.GetHashCode();
      if (TimestampMs != 0UL) hash ^= TimestampMs.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      digest_.WriteTo(output, _repeated_digest_codec);
      if (TimestampMs != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(TimestampMs);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += digest_.CalculateSize(_repeated_digest_codec);
      if (TimestampMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimestampMs);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAssetDigestResponse other) {
      if (other == null) {
        return;
      }
      digest_.Add(other.digest_);
      if (other.TimestampMs != 0UL) {
        TimestampMs = other.TimestampMs;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            digest_.AddEntriesFrom(input, _repeated_digest_codec);
            break;
          }
          case 16: {
            TimestampMs = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetHatchedEggsResponse : pb::IMessage<GetHatchedEggsResponse> {
    private static readonly pb::MessageParser<GetHatchedEggsResponse> _parser = new pb::MessageParser<GetHatchedEggsResponse>(() => new GetHatchedEggsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHatchedEggsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHatchedEggsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHatchedEggsResponse(GetHatchedEggsResponse other) : this() {
      success_ = other.success_;
      pokemonId_ = other.pokemonId_.Clone();
      experienceAwarded_ = other.experienceAwarded_.Clone();
      candyAwarded_ = other.candyAwarded_.Clone();
      stardustAwarded_ = other.stardustAwarded_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHatchedEggsResponse Clone() {
      return new GetHatchedEggsResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_id" field.</summary>
    public const int PokemonIdFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_pokemonId_codec
        = pb::FieldCodec.ForFixed64(18);
    private readonly pbc::RepeatedField<ulong> pokemonId_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> PokemonId {
      get { return pokemonId_; }
    }

    /// <summary>Field number for the "experience_awarded" field.</summary>
    public const int ExperienceAwardedFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_experienceAwarded_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> experienceAwarded_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ExperienceAwarded {
      get { return experienceAwarded_; }
    }

    /// <summary>Field number for the "candy_awarded" field.</summary>
    public const int CandyAwardedFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_candyAwarded_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> candyAwarded_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CandyAwarded {
      get { return candyAwarded_; }
    }

    /// <summary>Field number for the "stardust_awarded" field.</summary>
    public const int StardustAwardedFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_stardustAwarded_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> stardustAwarded_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> StardustAwarded {
      get { return stardustAwarded_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHatchedEggsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHatchedEggsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if(!pokemonId_.Equals(other.pokemonId_)) return false;
      if(!experienceAwarded_.Equals(other.experienceAwarded_)) return false;
      if(!candyAwarded_.Equals(other.candyAwarded_)) return false;
      if(!stardustAwarded_.Equals(other.stardustAwarded_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      hash ^= pokemonId_.GetHashCode();
      hash ^= experienceAwarded_.GetHashCode();
      hash ^= candyAwarded_.GetHashCode();
      hash ^= stardustAwarded_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      pokemonId_.WriteTo(output, _repeated_pokemonId_codec);
      experienceAwarded_.WriteTo(output, _repeated_experienceAwarded_codec);
      candyAwarded_.WriteTo(output, _repeated_candyAwarded_codec);
      stardustAwarded_.WriteTo(output, _repeated_stardustAwarded_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      size += pokemonId_.CalculateSize(_repeated_pokemonId_codec);
      size += experienceAwarded_.CalculateSize(_repeated_experienceAwarded_codec);
      size += candyAwarded_.CalculateSize(_repeated_candyAwarded_codec);
      size += stardustAwarded_.CalculateSize(_repeated_stardustAwarded_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHatchedEggsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      pokemonId_.Add(other.pokemonId_);
      experienceAwarded_.Add(other.experienceAwarded_);
      candyAwarded_.Add(other.candyAwarded_);
      stardustAwarded_.Add(other.stardustAwarded_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18:
          case 17: {
            pokemonId_.AddEntriesFrom(input, _repeated_pokemonId_codec);
            break;
          }
          case 26:
          case 24: {
            experienceAwarded_.AddEntriesFrom(input, _repeated_experienceAwarded_codec);
            break;
          }
          case 34:
          case 32: {
            candyAwarded_.AddEntriesFrom(input, _repeated_candyAwarded_codec);
            break;
          }
          case 42:
          case 40: {
            stardustAwarded_.AddEntriesFrom(input, _repeated_stardustAwarded_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadSettingsResponse : pb::IMessage<DownloadSettingsResponse> {
    private static readonly pb::MessageParser<DownloadSettingsResponse> _parser = new pb::MessageParser<DownloadSettingsResponse>(() => new DownloadSettingsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadSettingsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadSettingsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadSettingsResponse(DownloadSettingsResponse other) : this() {
      error_ = other.error_;
      hash_ = other.hash_;
      Settings = other.settings_ != null ? other.Settings.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadSettingsResponse Clone() {
      return new DownloadSettingsResponse(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 3;
    private global::POGOProtos.Settings.GlobalSettings settings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.GlobalSettings Settings {
      get { return settings_; }
      set {
        settings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadSettingsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadSettingsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (Hash != other.Hash) return false;
      if (!object.Equals(Settings, other.Settings)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (settings_ != null) hash ^= Settings.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Error);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hash);
      }
      if (settings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Settings);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (settings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadSettingsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.settings_ != null) {
        if (settings_ == null) {
          settings_ = new global::POGOProtos.Settings.GlobalSettings();
        }
        Settings.MergeFrom(other.Settings);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Error = input.ReadString();
            break;
          }
          case 18: {
            Hash = input.ReadString();
            break;
          }
          case 26: {
            if (settings_ == null) {
              settings_ = new global::POGOProtos.Settings.GlobalSettings();
            }
            input.ReadMessage(settings_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetPlayerTeamResponse : pb::IMessage<SetPlayerTeamResponse> {
    private static readonly pb::MessageParser<SetPlayerTeamResponse> _parser = new pb::MessageParser<SetPlayerTeamResponse>(() => new SetPlayerTeamResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetPlayerTeamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPlayerTeamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPlayerTeamResponse(SetPlayerTeamResponse other) : this() {
      status_ = other.status_;
      PlayerData = other.playerData_ != null ? other.PlayerData.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPlayerTeamResponse Clone() {
      return new SetPlayerTeamResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.SetPlayerTeamResponse.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.SetPlayerTeamResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "player_data" field.</summary>
    public const int PlayerDataFieldNumber = 2;
    private global::POGOProtos.Data.PlayerData playerData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PlayerData PlayerData {
      get { return playerData_; }
      set {
        playerData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetPlayerTeamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetPlayerTeamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(PlayerData, other.PlayerData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (playerData_ != null) hash ^= PlayerData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (playerData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (playerData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetPlayerTeamResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.playerData_ != null) {
        if (playerData_ == null) {
          playerData_ = new global::POGOProtos.Data.PlayerData();
        }
        PlayerData.MergeFrom(other.PlayerData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::POGOProtos.Networking.Responses.SetPlayerTeamResponse.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            if (playerData_ == null) {
              playerData_ = new global::POGOProtos.Data.PlayerData();
            }
            input.ReadMessage(playerData_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SetPlayerTeamResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("TEAM_ALREADY_SET")] TeamAlreadySet = 2,
        [pbr::OriginalName("FAILURE")] Failure = 3,
      }

    }
    #endregion

  }

  public sealed partial class IncenseEncounterResponse : pb::IMessage<IncenseEncounterResponse> {
    private static readonly pb::MessageParser<IncenseEncounterResponse> _parser = new pb::MessageParser<IncenseEncounterResponse>(() => new IncenseEncounterResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncenseEncounterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncenseEncounterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncenseEncounterResponse(IncenseEncounterResponse other) : this() {
      result_ = other.result_;
      PokemonData = other.pokemonData_ != null ? other.PokemonData.Clone() : null;
      CaptureProbability = other.captureProbability_ != null ? other.CaptureProbability.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncenseEncounterResponse Clone() {
      return new IncenseEncounterResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.IncenseEncounterResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.IncenseEncounterResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_data" field.</summary>
    public const int PokemonDataFieldNumber = 2;
    private global::POGOProtos.Data.PokemonData pokemonData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PokemonData PokemonData {
      get { return pokemonData_; }
      set {
        pokemonData_ = value;
      }
    }

    /// <summary>Field number for the "capture_probability" field.</summary>
    public const int CaptureProbabilityFieldNumber = 3;
    private global::POGOProtos.Data.Capture.CaptureProbability captureProbability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Capture.CaptureProbability CaptureProbability {
      get { return captureProbability_; }
      set {
        captureProbability_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncenseEncounterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncenseEncounterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(PokemonData, other.PokemonData)) return false;
      if (!object.Equals(CaptureProbability, other.CaptureProbability)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (pokemonData_ != null) hash ^= PokemonData.GetHashCode();
      if (captureProbability_ != null) hash ^= CaptureProbability.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (pokemonData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PokemonData);
      }
      if (captureProbability_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CaptureProbability);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (pokemonData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonData);
      }
      if (captureProbability_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CaptureProbability);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncenseEncounterResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.pokemonData_ != null) {
        if (pokemonData_ == null) {
          pokemonData_ = new global::POGOProtos.Data.PokemonData();
        }
        PokemonData.MergeFrom(other.PokemonData);
      }
      if (other.captureProbability_ != null) {
        if (captureProbability_ == null) {
          captureProbability_ = new global::POGOProtos.Data.Capture.CaptureProbability();
        }
        CaptureProbability.MergeFrom(other.CaptureProbability);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.IncenseEncounterResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (pokemonData_ == null) {
              pokemonData_ = new global::POGOProtos.Data.PokemonData();
            }
            input.ReadMessage(pokemonData_);
            break;
          }
          case 26: {
            if (captureProbability_ == null) {
              captureProbability_ = new global::POGOProtos.Data.Capture.CaptureProbability();
            }
            input.ReadMessage(captureProbability_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the IncenseEncounterResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("INCENSE_ENCOUNTER_UNKNOWN")] IncenseEncounterUnknown = 0,
        [pbr::OriginalName("INCENSE_ENCOUNTER_SUCCESS")] IncenseEncounterSuccess = 1,
        [pbr::OriginalName("INCENSE_ENCOUNTER_NOT_AVAILABLE")] IncenseEncounterNotAvailable = 2,
        [pbr::OriginalName("POKEMON_INVENTORY_FULL")] PokemonInventoryFull = 3,
      }

    }
    #endregion

  }

  public sealed partial class EvolvePokemonResponse : pb::IMessage<EvolvePokemonResponse> {
    private static readonly pb::MessageParser<EvolvePokemonResponse> _parser = new pb::MessageParser<EvolvePokemonResponse>(() => new EvolvePokemonResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EvolvePokemonResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvolvePokemonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvolvePokemonResponse(EvolvePokemonResponse other) : this() {
      result_ = other.result_;
      EvolvedPokemonData = other.evolvedPokemonData_ != null ? other.EvolvedPokemonData.Clone() : null;
      experienceAwarded_ = other.experienceAwarded_;
      candyAwarded_ = other.candyAwarded_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EvolvePokemonResponse Clone() {
      return new EvolvePokemonResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.EvolvePokemonResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.EvolvePokemonResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "evolved_pokemon_data" field.</summary>
    public const int EvolvedPokemonDataFieldNumber = 2;
    private global::POGOProtos.Data.PokemonData evolvedPokemonData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PokemonData EvolvedPokemonData {
      get { return evolvedPokemonData_; }
      set {
        evolvedPokemonData_ = value;
      }
    }

    /// <summary>Field number for the "experience_awarded" field.</summary>
    public const int ExperienceAwardedFieldNumber = 3;
    private int experienceAwarded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExperienceAwarded {
      get { return experienceAwarded_; }
      set {
        experienceAwarded_ = value;
      }
    }

    /// <summary>Field number for the "candy_awarded" field.</summary>
    public const int CandyAwardedFieldNumber = 4;
    private int candyAwarded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CandyAwarded {
      get { return candyAwarded_; }
      set {
        candyAwarded_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EvolvePokemonResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EvolvePokemonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(EvolvedPokemonData, other.EvolvedPokemonData)) return false;
      if (ExperienceAwarded != other.ExperienceAwarded) return false;
      if (CandyAwarded != other.CandyAwarded) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (evolvedPokemonData_ != null) hash ^= EvolvedPokemonData.GetHashCode();
      if (ExperienceAwarded != 0) hash ^= ExperienceAwarded.GetHashCode();
      if (CandyAwarded != 0) hash ^= CandyAwarded.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (evolvedPokemonData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EvolvedPokemonData);
      }
      if (ExperienceAwarded != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ExperienceAwarded);
      }
      if (CandyAwarded != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CandyAwarded);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (evolvedPokemonData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EvolvedPokemonData);
      }
      if (ExperienceAwarded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExperienceAwarded);
      }
      if (CandyAwarded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CandyAwarded);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EvolvePokemonResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.evolvedPokemonData_ != null) {
        if (evolvedPokemonData_ == null) {
          evolvedPokemonData_ = new global::POGOProtos.Data.PokemonData();
        }
        EvolvedPokemonData.MergeFrom(other.EvolvedPokemonData);
      }
      if (other.ExperienceAwarded != 0) {
        ExperienceAwarded = other.ExperienceAwarded;
      }
      if (other.CandyAwarded != 0) {
        CandyAwarded = other.CandyAwarded;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.EvolvePokemonResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (evolvedPokemonData_ == null) {
              evolvedPokemonData_ = new global::POGOProtos.Data.PokemonData();
            }
            input.ReadMessage(evolvedPokemonData_);
            break;
          }
          case 24: {
            ExperienceAwarded = input.ReadInt32();
            break;
          }
          case 32: {
            CandyAwarded = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EvolvePokemonResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("FAILED_POKEMON_MISSING")] FailedPokemonMissing = 2,
        [pbr::OriginalName("FAILED_INSUFFICIENT_RESOURCES")] FailedInsufficientResources = 3,
        [pbr::OriginalName("FAILED_POKEMON_CANNOT_EVOLVE")] FailedPokemonCannotEvolve = 4,
        [pbr::OriginalName("FAILED_POKEMON_IS_DEPLOYED")] FailedPokemonIsDeployed = 5,
      }

    }
    #endregion

  }

  public sealed partial class UseItemEggIncubatorResponse : pb::IMessage<UseItemEggIncubatorResponse> {
    private static readonly pb::MessageParser<UseItemEggIncubatorResponse> _parser = new pb::MessageParser<UseItemEggIncubatorResponse>(() => new UseItemEggIncubatorResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UseItemEggIncubatorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemEggIncubatorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemEggIncubatorResponse(UseItemEggIncubatorResponse other) : this() {
      result_ = other.result_;
      EggIncubator = other.eggIncubator_ != null ? other.EggIncubator.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseItemEggIncubatorResponse Clone() {
      return new UseItemEggIncubatorResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.UseItemEggIncubatorResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.UseItemEggIncubatorResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "egg_incubator" field.</summary>
    public const int EggIncubatorFieldNumber = 2;
    private global::POGOProtos.Inventory.EggIncubator eggIncubator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.EggIncubator EggIncubator {
      get { return eggIncubator_; }
      set {
        eggIncubator_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UseItemEggIncubatorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UseItemEggIncubatorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(EggIncubator, other.EggIncubator)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (eggIncubator_ != null) hash ^= EggIncubator.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (eggIncubator_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EggIncubator);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (eggIncubator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EggIncubator);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UseItemEggIncubatorResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.eggIncubator_ != null) {
        if (eggIncubator_ == null) {
          eggIncubator_ = new global::POGOProtos.Inventory.EggIncubator();
        }
        EggIncubator.MergeFrom(other.EggIncubator);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.UseItemEggIncubatorResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (eggIncubator_ == null) {
              eggIncubator_ = new global::POGOProtos.Inventory.EggIncubator();
            }
            input.ReadMessage(eggIncubator_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UseItemEggIncubatorResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_INCUBATOR_NOT_FOUND")] ErrorIncubatorNotFound = 2,
        [pbr::OriginalName("ERROR_POKEMON_EGG_NOT_FOUND")] ErrorPokemonEggNotFound = 3,
        [pbr::OriginalName("ERROR_POKEMON_ID_NOT_EGG")] ErrorPokemonIdNotEgg = 4,
        [pbr::OriginalName("ERROR_INCUBATOR_ALREADY_IN_USE")] ErrorIncubatorAlreadyInUse = 5,
        [pbr::OriginalName("ERROR_POKEMON_ALREADY_INCUBATING")] ErrorPokemonAlreadyIncubating = 6,
        [pbr::OriginalName("ERROR_INCUBATOR_NO_USES_REMAINING")] ErrorIncubatorNoUsesRemaining = 7,
      }

    }
    #endregion

  }

  public sealed partial class ReleasePokemonResponse : pb::IMessage<ReleasePokemonResponse> {
    private static readonly pb::MessageParser<ReleasePokemonResponse> _parser = new pb::MessageParser<ReleasePokemonResponse>(() => new ReleasePokemonResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReleasePokemonResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleasePokemonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleasePokemonResponse(ReleasePokemonResponse other) : this() {
      result_ = other.result_;
      candyAwarded_ = other.candyAwarded_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleasePokemonResponse Clone() {
      return new ReleasePokemonResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.ReleasePokemonResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.ReleasePokemonResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "candy_awarded" field.</summary>
    public const int CandyAwardedFieldNumber = 2;
    private int candyAwarded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CandyAwarded {
      get { return candyAwarded_; }
      set {
        candyAwarded_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReleasePokemonResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReleasePokemonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (CandyAwarded != other.CandyAwarded) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (CandyAwarded != 0) hash ^= CandyAwarded.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (CandyAwarded != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CandyAwarded);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (CandyAwarded != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CandyAwarded);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReleasePokemonResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.CandyAwarded != 0) {
        CandyAwarded = other.CandyAwarded;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.ReleasePokemonResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 16: {
            CandyAwarded = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ReleasePokemonResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("POKEMON_DEPLOYED")] PokemonDeployed = 2,
        [pbr::OriginalName("FAILED")] Failed = 3,
        [pbr::OriginalName("ERROR_POKEMON_IS_EGG")] ErrorPokemonIsEgg = 4,
      }

    }
    #endregion

  }

  public sealed partial class GetGymDetailsResponse : pb::IMessage<GetGymDetailsResponse> {
    private static readonly pb::MessageParser<GetGymDetailsResponse> _parser = new pb::MessageParser<GetGymDetailsResponse>(() => new GetGymDetailsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGymDetailsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGymDetailsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGymDetailsResponse(GetGymDetailsResponse other) : this() {
      GymState = other.gymState_ != null ? other.GymState.Clone() : null;
      name_ = other.name_;
      urls_ = other.urls_.Clone();
      result_ = other.result_;
      description_ = other.description_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGymDetailsResponse Clone() {
      return new GetGymDetailsResponse(this);
    }

    /// <summary>Field number for the "gym_state" field.</summary>
    public const int GymStateFieldNumber = 1;
    private global::POGOProtos.Data.Gym.GymState gymState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Gym.GymState GymState {
      get { return gymState_; }
      set {
        gymState_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "urls" field.</summary>
    public const int UrlsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_urls_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> urls_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Urls {
      get { return urls_; }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 4;
    private global::POGOProtos.Networking.Responses.GetGymDetailsResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.GetGymDetailsResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGymDetailsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGymDetailsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GymState, other.GymState)) return false;
      if (Name != other.Name) return false;
      if(!urls_.Equals(other.urls_)) return false;
      if (Result != other.Result) return false;
      if (Description != other.Description) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (gymState_ != null) hash ^= GymState.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= urls_.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (gymState_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GymState);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      urls_.WriteTo(output, _repeated_urls_codec);
      if (Result != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Result);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (gymState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GymState);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += urls_.CalculateSize(_repeated_urls_codec);
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGymDetailsResponse other) {
      if (other == null) {
        return;
      }
      if (other.gymState_ != null) {
        if (gymState_ == null) {
          gymState_ = new global::POGOProtos.Data.Gym.GymState();
        }
        GymState.MergeFrom(other.GymState);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      urls_.Add(other.urls_);
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (gymState_ == null) {
              gymState_ = new global::POGOProtos.Data.Gym.GymState();
            }
            input.ReadMessage(gymState_);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            urls_.AddEntriesFrom(input, _repeated_urls_codec);
            break;
          }
          case 32: {
            result_ = (global::POGOProtos.Networking.Responses.GetGymDetailsResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetGymDetailsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_NOT_IN_RANGE")] ErrorNotInRange = 2,
      }

    }
    #endregion

  }

  public sealed partial class FortRecallPokemonResponse : pb::IMessage<FortRecallPokemonResponse> {
    private static readonly pb::MessageParser<FortRecallPokemonResponse> _parser = new pb::MessageParser<FortRecallPokemonResponse>(() => new FortRecallPokemonResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FortRecallPokemonResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortRecallPokemonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortRecallPokemonResponse(FortRecallPokemonResponse other) : this() {
      result_ = other.result_;
      FortDetails = other.fortDetails_ != null ? other.FortDetails.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortRecallPokemonResponse Clone() {
      return new FortRecallPokemonResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.FortRecallPokemonResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.FortRecallPokemonResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "fort_details" field.</summary>
    public const int FortDetailsFieldNumber = 2;
    private global::POGOProtos.Networking.Responses.FortDetailsResponse fortDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.FortDetailsResponse FortDetails {
      get { return fortDetails_; }
      set {
        fortDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FortRecallPokemonResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FortRecallPokemonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(FortDetails, other.FortDetails)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (fortDetails_ != null) hash ^= FortDetails.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (fortDetails_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FortDetails);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (fortDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FortDetails);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FortRecallPokemonResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.fortDetails_ != null) {
        if (fortDetails_ == null) {
          fortDetails_ = new global::POGOProtos.Networking.Responses.FortDetailsResponse();
        }
        FortDetails.MergeFrom(other.FortDetails);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.FortRecallPokemonResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (fortDetails_ == null) {
              fortDetails_ = new global::POGOProtos.Networking.Responses.FortDetailsResponse();
            }
            input.ReadMessage(fortDetails_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FortRecallPokemonResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("NO_RESULT_SET")] NoResultSet = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_NOT_IN_RANGE")] ErrorNotInRange = 2,
        [pbr::OriginalName("ERROR_POKEMON_NOT_ON_FORT")] ErrorPokemonNotOnFort = 3,
        [pbr::OriginalName("ERROR_NO_PLAYER")] ErrorNoPlayer = 4,
      }

    }
    #endregion

  }

  public sealed partial class UseIncenseResponse : pb::IMessage<UseIncenseResponse> {
    private static readonly pb::MessageParser<UseIncenseResponse> _parser = new pb::MessageParser<UseIncenseResponse>(() => new UseIncenseResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UseIncenseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseIncenseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseIncenseResponse(UseIncenseResponse other) : this() {
      result_ = other.result_;
      AppliedIncense = other.appliedIncense_ != null ? other.AppliedIncense.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseIncenseResponse Clone() {
      return new UseIncenseResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.UseIncenseResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.UseIncenseResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "applied_incense" field.</summary>
    public const int AppliedIncenseFieldNumber = 2;
    private global::POGOProtos.Inventory.AppliedItem appliedIncense_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.AppliedItem AppliedIncense {
      get { return appliedIncense_; }
      set {
        appliedIncense_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UseIncenseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UseIncenseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(AppliedIncense, other.AppliedIncense)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (appliedIncense_ != null) hash ^= AppliedIncense.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (appliedIncense_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AppliedIncense);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (appliedIncense_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppliedIncense);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UseIncenseResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.appliedIncense_ != null) {
        if (appliedIncense_ == null) {
          appliedIncense_ = new global::POGOProtos.Inventory.AppliedItem();
        }
        AppliedIncense.MergeFrom(other.AppliedIncense);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.UseIncenseResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (appliedIncense_ == null) {
              appliedIncense_ = new global::POGOProtos.Inventory.AppliedItem();
            }
            input.ReadMessage(appliedIncense_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UseIncenseResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("INCENSE_ALREADY_ACTIVE")] IncenseAlreadyActive = 2,
        [pbr::OriginalName("NONE_IN_INVENTORY")] NoneInInventory = 3,
        [pbr::OriginalName("LOCATION_UNSET")] LocationUnset = 4,
      }

    }
    #endregion

  }

  public sealed partial class NicknamePokemonResponse : pb::IMessage<NicknamePokemonResponse> {
    private static readonly pb::MessageParser<NicknamePokemonResponse> _parser = new pb::MessageParser<NicknamePokemonResponse>(() => new NicknamePokemonResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NicknamePokemonResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.POGOProtosNetworkingResponsesReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NicknamePokemonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NicknamePokemonResponse(NicknamePokemonResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NicknamePokemonResponse Clone() {
      return new NicknamePokemonResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::POGOProtos.Networking.Responses.NicknamePokemonResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Networking.Responses.NicknamePokemonResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NicknamePokemonResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NicknamePokemonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NicknamePokemonResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::POGOProtos.Networking.Responses.NicknamePokemonResponse.Types.Result) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NicknamePokemonResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_INVALID_NICKNAME")] ErrorInvalidNickname = 2,
        [pbr::OriginalName("ERROR_POKEMON_NOT_FOUND")] ErrorPokemonNotFound = 3,
        [pbr::OriginalName("ERROR_POKEMON_IS_EGG")] ErrorPokemonIsEgg = 4,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
