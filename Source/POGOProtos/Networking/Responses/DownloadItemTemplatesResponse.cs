// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/DownloadItemTemplatesResponse.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Networking.Responses {

  /// <summary>Holder for reflection information generated from POGOProtos/Networking/Responses/DownloadItemTemplatesResponse.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class DownloadItemTemplatesResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Networking/Responses/DownloadItemTemplatesResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DownloadItemTemplatesResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkNQT0dPUHJvdG9zL05ldHdvcmtpbmcvUmVzcG9uc2VzL0Rvd25sb2FkSXRl",
            "bVRlbXBsYXRlc1Jlc3BvbnNlLnByb3RvEh9QT0dPUHJvdG9zLk5ldHdvcmtp",
            "bmcuUmVzcG9uc2VzGi1QT0dPUHJvdG9zL1NldHRpbmdzL01hc3Rlci9JdGVt",
            "U2V0dGluZ3MucHJvdG8aLVBPR09Qcm90b3MvU2V0dGluZ3MvTWFzdGVyL01v",
            "dmVTZXR0aW5ncy5wcm90bxouUE9HT1Byb3Rvcy9TZXR0aW5ncy9NYXN0ZXIv",
            "QmFkZ2VTZXR0aW5ncy5wcm90bxowUE9HT1Byb3Rvcy9TZXR0aW5ncy9NYXN0",
            "ZXIvUG9rZW1vblNldHRpbmdzLnByb3RvGjVQT0dPUHJvdG9zL1NldHRpbmdz",
            "L01hc3Rlci9Nb3ZlU2VxdWVuY2VTZXR0aW5ncy5wcm90bxo2UE9HT1Byb3Rv",
            "cy9TZXR0aW5ncy9NYXN0ZXIvVHlwZUVmZmVjdGl2ZVNldHRpbmdzLnByb3Rv",
            "Gi9QT0dPUHJvdG9zL1NldHRpbmdzL01hc3Rlci9DYW1lcmFTZXR0aW5ncy5w",
            "cm90bxo0UE9HT1Byb3Rvcy9TZXR0aW5ncy9NYXN0ZXIvUGxheWVyTGV2ZWxT",
            "ZXR0aW5ncy5wcm90bxoxUE9HT1Byb3Rvcy9TZXR0aW5ncy9NYXN0ZXIvR3lt",
            "TGV2ZWxTZXR0aW5ncy5wcm90bxoyUE9HT1Byb3Rvcy9TZXR0aW5ncy9NYXN0",
            "ZXIvR3ltQmF0dGxlU2V0dGluZ3MucHJvdG8aMlBPR09Qcm90b3MvU2V0dGlu",
            "Z3MvTWFzdGVyL0VuY291bnRlclNldHRpbmdzLnByb3RvGi9QT0dPUHJvdG9z",
            "L1NldHRpbmdzL01hc3Rlci9JYXBJdGVtRGlzcGxheS5wcm90bxosUE9HT1By",
            "b3Rvcy9TZXR0aW5ncy9NYXN0ZXIvSWFwU2V0dGluZ3MucHJvdG8aN1BPR09Q",
            "cm90b3MvU2V0dGluZ3MvTWFzdGVyL1Bva2Vtb25VcGdyYWRlU2V0dGluZ3Mu",
            "cHJvdG8aNlBPR09Qcm90b3MvU2V0dGluZ3MvTWFzdGVyL0VxdWlwcGVkQmFk",
            "Z2VTZXR0aW5ncy5wcm90bxouUE9HT1Byb3Rvcy9TZXR0aW5ncy9NYXN0ZXIv",
            "UXVlc3RTZXR0aW5ncy5wcm90byKzCgodRG93bmxvYWRJdGVtVGVtcGxhdGVz",
            "UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBJjCg5pdGVtX3RlbXBsYXRlcxgC",
            "IAMoCzJLLlBPR09Qcm90b3MuTmV0d29ya2luZy5SZXNwb25zZXMuRG93bmxv",
            "YWRJdGVtVGVtcGxhdGVzUmVzcG9uc2UuSXRlbVRlbXBsYXRlEhQKDHRpbWVz",
            "dGFtcF9tcxgDIAEoBBqFCQoMSXRlbVRlbXBsYXRlEhMKC3RlbXBsYXRlX2lk",
            "GAEgASgJEkUKEHBva2Vtb25fc2V0dGluZ3MYAiABKAsyKy5QT0dPUHJvdG9z",
            "LlNldHRpbmdzLk1hc3Rlci5Qb2tlbW9uU2V0dGluZ3MSPwoNaXRlbV9zZXR0",
            "aW5ncxgDIAEoCzIoLlBPR09Qcm90b3MuU2V0dGluZ3MuTWFzdGVyLkl0ZW1T",
            "ZXR0aW5ncxI/Cg1tb3ZlX3NldHRpbmdzGAQgASgLMiguUE9HT1Byb3Rvcy5T",
            "ZXR0aW5ncy5NYXN0ZXIuTW92ZVNldHRpbmdzElAKFm1vdmVfc2VxdWVuY2Vf",
            "c2V0dGluZ3MYBSABKAsyMC5QT0dPUHJvdG9zLlNldHRpbmdzLk1hc3Rlci5N",
            "b3ZlU2VxdWVuY2VTZXR0aW5ncxJJCg50eXBlX2VmZmVjdGl2ZRgIIAEoCzIx",
            "LlBPR09Qcm90b3MuU2V0dGluZ3MuTWFzdGVyLlR5cGVFZmZlY3RpdmVTZXR0",
            "aW5ncxJBCg5iYWRnZV9zZXR0aW5ncxgKIAEoCzIpLlBPR09Qcm90b3MuU2V0",
            "dGluZ3MuTWFzdGVyLkJhZGdlU2V0dGluZ3MSOgoGY2FtZXJhGAsgASgLMiou",
            "UE9HT1Byb3Rvcy5TZXR0aW5ncy5NYXN0ZXIuQ2FtZXJhU2V0dGluZ3MSRQoM",
            "cGxheWVyX2xldmVsGAwgASgLMi8uUE9HT1Byb3Rvcy5TZXR0aW5ncy5NYXN0",
            "ZXIuUGxheWVyTGV2ZWxTZXR0aW5ncxI/CglneW1fbGV2ZWwYDSABKAsyLC5Q",
            "T0dPUHJvdG9zLlNldHRpbmdzLk1hc3Rlci5HeW1MZXZlbFNldHRpbmdzEkYK",
            "D2JhdHRsZV9zZXR0aW5ncxgOIAEoCzItLlBPR09Qcm90b3MuU2V0dGluZ3Mu",
            "TWFzdGVyLkd5bUJhdHRsZVNldHRpbmdzEkkKEmVuY291bnRlcl9zZXR0aW5n",
            "cxgPIAEoCzItLlBPR09Qcm90b3MuU2V0dGluZ3MuTWFzdGVyLkVuY291bnRl",
            "clNldHRpbmdzEkQKEGlhcF9pdGVtX2Rpc3BsYXkYECABKAsyKi5QT0dPUHJv",
            "dG9zLlNldHRpbmdzLk1hc3Rlci5JYXBJdGVtRGlzcGxheRI9CgxpYXBfc2V0",
            "dGluZ3MYESABKAsyJy5QT0dPUHJvdG9zLlNldHRpbmdzLk1hc3Rlci5JYXBT",
            "ZXR0aW5ncxJMChBwb2tlbW9uX3VwZ3JhZGVzGBIgASgLMjIuUE9HT1Byb3Rv",
            "cy5TZXR0aW5ncy5NYXN0ZXIuUG9rZW1vblVwZ3JhZGVTZXR0aW5ncxJKCg9l",
            "cXVpcHBlZF9iYWRnZXMYEyABKAsyMS5QT0dPUHJvdG9zLlNldHRpbmdzLk1h",
            "c3Rlci5FcXVpcHBlZEJhZGdlU2V0dGluZ3MSQQoOcXVlc3Rfc2V0dGluZ3MY",
            "FCABKAsyKS5QT0dPUHJvdG9zLlNldHRpbmdzLk1hc3Rlci5RdWVzdFNldHRp",
            "bmdzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Settings.Master.ItemSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.MoveSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.BadgeSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.PokemonSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.MoveSequenceSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.TypeEffectiveSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.CameraSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.PlayerLevelSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.GymLevelSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.GymBattleSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.EncounterSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.IapItemDisplayReflection.Descriptor, global::POGOProtos.Settings.Master.IapSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.PokemonUpgradeSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.EquippedBadgeSettingsReflection.Descriptor, global::POGOProtos.Settings.Master.QuestSettingsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse), global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Parser, new[]{ "Success", "ItemTemplates", "TimestampMs" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate), global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate.Parser, new[]{ "TemplateId", "PokemonSettings", "ItemSettings", "MoveSettings", "MoveSequenceSettings", "TypeEffective", "BadgeSettings", "Camera", "PlayerLevel", "GymLevel", "BattleSettings", "EncounterSettings", "IapItemDisplay", "IapSettings", "PokemonUpgrades", "EquippedBadges", "QuestSettings" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DownloadItemTemplatesResponse : pb::IMessage<DownloadItemTemplatesResponse> {
    private static readonly pb::MessageParser<DownloadItemTemplatesResponse> _parser = new pb::MessageParser<DownloadItemTemplatesResponse>(() => new DownloadItemTemplatesResponse());
    public static pb::MessageParser<DownloadItemTemplatesResponse> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponseReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public DownloadItemTemplatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    public DownloadItemTemplatesResponse(DownloadItemTemplatesResponse other) : this() {
      success_ = other.success_;
      itemTemplates_ = other.itemTemplates_.Clone();
      timestampMs_ = other.timestampMs_;
    }

    public DownloadItemTemplatesResponse Clone() {
      return new DownloadItemTemplatesResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "item_templates" field.</summary>
    public const int ItemTemplatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate> _repeated_itemTemplates_codec
        = pb::FieldCodec.ForMessage(18, global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate> itemTemplates_ = new pbc::RepeatedField<global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate>();
    public pbc::RepeatedField<global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Types.ItemTemplate> ItemTemplates {
      get { return itemTemplates_; }
    }

    /// <summary>Field number for the "timestamp_ms" field.</summary>
    public const int TimestampMsFieldNumber = 3;
    private ulong timestampMs_;
    public ulong TimestampMs {
      get { return timestampMs_; }
      set {
        timestampMs_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as DownloadItemTemplatesResponse);
    }

    public bool Equals(DownloadItemTemplatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if(!itemTemplates_.Equals(other.itemTemplates_)) return false;
      if (TimestampMs != other.TimestampMs) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      hash ^= itemTemplates_.GetHashCode();
      if (TimestampMs != 0UL) hash ^= TimestampMs.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      itemTemplates_.WriteTo(output, _repeated_itemTemplates_codec);
      if (TimestampMs != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TimestampMs);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      size += itemTemplates_.CalculateSize(_repeated_itemTemplates_codec);
      if (TimestampMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimestampMs);
      }
      return size;
    }

    public void MergeFrom(DownloadItemTemplatesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      itemTemplates_.Add(other.itemTemplates_);
      if (other.TimestampMs != 0UL) {
        TimestampMs = other.TimestampMs;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            itemTemplates_.AddEntriesFrom(input, _repeated_itemTemplates_codec);
            break;
          }
          case 24: {
            TimestampMs = input.ReadUInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DownloadItemTemplatesResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class ItemTemplate : pb::IMessage<ItemTemplate> {
        private static readonly pb::MessageParser<ItemTemplate> _parser = new pb::MessageParser<ItemTemplate>(() => new ItemTemplate());
        public static pb::MessageParser<ItemTemplate> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::POGOProtos.Networking.Responses.DownloadItemTemplatesResponse.Descriptor.NestedTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public ItemTemplate() {
          OnConstruction();
        }

        partial void OnConstruction();

        public ItemTemplate(ItemTemplate other) : this() {
          templateId_ = other.templateId_;
          PokemonSettings = other.pokemonSettings_ != null ? other.PokemonSettings.Clone() : null;
          ItemSettings = other.itemSettings_ != null ? other.ItemSettings.Clone() : null;
          MoveSettings = other.moveSettings_ != null ? other.MoveSettings.Clone() : null;
          MoveSequenceSettings = other.moveSequenceSettings_ != null ? other.MoveSequenceSettings.Clone() : null;
          TypeEffective = other.typeEffective_ != null ? other.TypeEffective.Clone() : null;
          BadgeSettings = other.badgeSettings_ != null ? other.BadgeSettings.Clone() : null;
          Camera = other.camera_ != null ? other.Camera.Clone() : null;
          PlayerLevel = other.playerLevel_ != null ? other.PlayerLevel.Clone() : null;
          GymLevel = other.gymLevel_ != null ? other.GymLevel.Clone() : null;
          BattleSettings = other.battleSettings_ != null ? other.BattleSettings.Clone() : null;
          EncounterSettings = other.encounterSettings_ != null ? other.EncounterSettings.Clone() : null;
          IapItemDisplay = other.iapItemDisplay_ != null ? other.IapItemDisplay.Clone() : null;
          IapSettings = other.iapSettings_ != null ? other.IapSettings.Clone() : null;
          PokemonUpgrades = other.pokemonUpgrades_ != null ? other.PokemonUpgrades.Clone() : null;
          EquippedBadges = other.equippedBadges_ != null ? other.EquippedBadges.Clone() : null;
          QuestSettings = other.questSettings_ != null ? other.QuestSettings.Clone() : null;
        }

        public ItemTemplate Clone() {
          return new ItemTemplate(this);
        }

        /// <summary>Field number for the "template_id" field.</summary>
        public const int TemplateIdFieldNumber = 1;
        private string templateId_ = "";
        public string TemplateId {
          get { return templateId_; }
          set {
            templateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "pokemon_settings" field.</summary>
        public const int PokemonSettingsFieldNumber = 2;
        private global::POGOProtos.Settings.Master.PokemonSettings pokemonSettings_;
        public global::POGOProtos.Settings.Master.PokemonSettings PokemonSettings {
          get { return pokemonSettings_; }
          set {
            pokemonSettings_ = value;
          }
        }

        /// <summary>Field number for the "item_settings" field.</summary>
        public const int ItemSettingsFieldNumber = 3;
        private global::POGOProtos.Settings.Master.ItemSettings itemSettings_;
        public global::POGOProtos.Settings.Master.ItemSettings ItemSettings {
          get { return itemSettings_; }
          set {
            itemSettings_ = value;
          }
        }

        /// <summary>Field number for the "move_settings" field.</summary>
        public const int MoveSettingsFieldNumber = 4;
        private global::POGOProtos.Settings.Master.MoveSettings moveSettings_;
        public global::POGOProtos.Settings.Master.MoveSettings MoveSettings {
          get { return moveSettings_; }
          set {
            moveSettings_ = value;
          }
        }

        /// <summary>Field number for the "move_sequence_settings" field.</summary>
        public const int MoveSequenceSettingsFieldNumber = 5;
        private global::POGOProtos.Settings.Master.MoveSequenceSettings moveSequenceSettings_;
        public global::POGOProtos.Settings.Master.MoveSequenceSettings MoveSequenceSettings {
          get { return moveSequenceSettings_; }
          set {
            moveSequenceSettings_ = value;
          }
        }

        /// <summary>Field number for the "type_effective" field.</summary>
        public const int TypeEffectiveFieldNumber = 8;
        private global::POGOProtos.Settings.Master.TypeEffectiveSettings typeEffective_;
        public global::POGOProtos.Settings.Master.TypeEffectiveSettings TypeEffective {
          get { return typeEffective_; }
          set {
            typeEffective_ = value;
          }
        }

        /// <summary>Field number for the "badge_settings" field.</summary>
        public const int BadgeSettingsFieldNumber = 10;
        private global::POGOProtos.Settings.Master.BadgeSettings badgeSettings_;
        public global::POGOProtos.Settings.Master.BadgeSettings BadgeSettings {
          get { return badgeSettings_; }
          set {
            badgeSettings_ = value;
          }
        }

        /// <summary>Field number for the "camera" field.</summary>
        public const int CameraFieldNumber = 11;
        private global::POGOProtos.Settings.Master.CameraSettings camera_;
        public global::POGOProtos.Settings.Master.CameraSettings Camera {
          get { return camera_; }
          set {
            camera_ = value;
          }
        }

        /// <summary>Field number for the "player_level" field.</summary>
        public const int PlayerLevelFieldNumber = 12;
        private global::POGOProtos.Settings.Master.PlayerLevelSettings playerLevel_;
        public global::POGOProtos.Settings.Master.PlayerLevelSettings PlayerLevel {
          get { return playerLevel_; }
          set {
            playerLevel_ = value;
          }
        }

        /// <summary>Field number for the "gym_level" field.</summary>
        public const int GymLevelFieldNumber = 13;
        private global::POGOProtos.Settings.Master.GymLevelSettings gymLevel_;
        public global::POGOProtos.Settings.Master.GymLevelSettings GymLevel {
          get { return gymLevel_; }
          set {
            gymLevel_ = value;
          }
        }

        /// <summary>Field number for the "battle_settings" field.</summary>
        public const int BattleSettingsFieldNumber = 14;
        private global::POGOProtos.Settings.Master.GymBattleSettings battleSettings_;
        public global::POGOProtos.Settings.Master.GymBattleSettings BattleSettings {
          get { return battleSettings_; }
          set {
            battleSettings_ = value;
          }
        }

        /// <summary>Field number for the "encounter_settings" field.</summary>
        public const int EncounterSettingsFieldNumber = 15;
        private global::POGOProtos.Settings.Master.EncounterSettings encounterSettings_;
        public global::POGOProtos.Settings.Master.EncounterSettings EncounterSettings {
          get { return encounterSettings_; }
          set {
            encounterSettings_ = value;
          }
        }

        /// <summary>Field number for the "iap_item_display" field.</summary>
        public const int IapItemDisplayFieldNumber = 16;
        private global::POGOProtos.Settings.Master.IapItemDisplay iapItemDisplay_;
        public global::POGOProtos.Settings.Master.IapItemDisplay IapItemDisplay {
          get { return iapItemDisplay_; }
          set {
            iapItemDisplay_ = value;
          }
        }

        /// <summary>Field number for the "iap_settings" field.</summary>
        public const int IapSettingsFieldNumber = 17;
        private global::POGOProtos.Settings.Master.IapSettings iapSettings_;
        public global::POGOProtos.Settings.Master.IapSettings IapSettings {
          get { return iapSettings_; }
          set {
            iapSettings_ = value;
          }
        }

        /// <summary>Field number for the "pokemon_upgrades" field.</summary>
        public const int PokemonUpgradesFieldNumber = 18;
        private global::POGOProtos.Settings.Master.PokemonUpgradeSettings pokemonUpgrades_;
        public global::POGOProtos.Settings.Master.PokemonUpgradeSettings PokemonUpgrades {
          get { return pokemonUpgrades_; }
          set {
            pokemonUpgrades_ = value;
          }
        }

        /// <summary>Field number for the "equipped_badges" field.</summary>
        public const int EquippedBadgesFieldNumber = 19;
        private global::POGOProtos.Settings.Master.EquippedBadgeSettings equippedBadges_;
        public global::POGOProtos.Settings.Master.EquippedBadgeSettings EquippedBadges {
          get { return equippedBadges_; }
          set {
            equippedBadges_ = value;
          }
        }

        /// <summary>Field number for the "quest_settings" field.</summary>
        public const int QuestSettingsFieldNumber = 20;
        private global::POGOProtos.Settings.Master.QuestSettings questSettings_;
        public global::POGOProtos.Settings.Master.QuestSettings QuestSettings {
          get { return questSettings_; }
          set {
            questSettings_ = value;
          }
        }

        public override bool Equals(object other) {
          return Equals(other as ItemTemplate);
        }

        public bool Equals(ItemTemplate other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TemplateId != other.TemplateId) return false;
          if (!object.Equals(PokemonSettings, other.PokemonSettings)) return false;
          if (!object.Equals(ItemSettings, other.ItemSettings)) return false;
          if (!object.Equals(MoveSettings, other.MoveSettings)) return false;
          if (!object.Equals(MoveSequenceSettings, other.MoveSequenceSettings)) return false;
          if (!object.Equals(TypeEffective, other.TypeEffective)) return false;
          if (!object.Equals(BadgeSettings, other.BadgeSettings)) return false;
          if (!object.Equals(Camera, other.Camera)) return false;
          if (!object.Equals(PlayerLevel, other.PlayerLevel)) return false;
          if (!object.Equals(GymLevel, other.GymLevel)) return false;
          if (!object.Equals(BattleSettings, other.BattleSettings)) return false;
          if (!object.Equals(EncounterSettings, other.EncounterSettings)) return false;
          if (!object.Equals(IapItemDisplay, other.IapItemDisplay)) return false;
          if (!object.Equals(IapSettings, other.IapSettings)) return false;
          if (!object.Equals(PokemonUpgrades, other.PokemonUpgrades)) return false;
          if (!object.Equals(EquippedBadges, other.EquippedBadges)) return false;
          if (!object.Equals(QuestSettings, other.QuestSettings)) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (TemplateId.Length != 0) hash ^= TemplateId.GetHashCode();
          if (pokemonSettings_ != null) hash ^= PokemonSettings.GetHashCode();
          if (itemSettings_ != null) hash ^= ItemSettings.GetHashCode();
          if (moveSettings_ != null) hash ^= MoveSettings.GetHashCode();
          if (moveSequenceSettings_ != null) hash ^= MoveSequenceSettings.GetHashCode();
          if (typeEffective_ != null) hash ^= TypeEffective.GetHashCode();
          if (badgeSettings_ != null) hash ^= BadgeSettings.GetHashCode();
          if (camera_ != null) hash ^= Camera.GetHashCode();
          if (playerLevel_ != null) hash ^= PlayerLevel.GetHashCode();
          if (gymLevel_ != null) hash ^= GymLevel.GetHashCode();
          if (battleSettings_ != null) hash ^= BattleSettings.GetHashCode();
          if (encounterSettings_ != null) hash ^= EncounterSettings.GetHashCode();
          if (iapItemDisplay_ != null) hash ^= IapItemDisplay.GetHashCode();
          if (iapSettings_ != null) hash ^= IapSettings.GetHashCode();
          if (pokemonUpgrades_ != null) hash ^= PokemonUpgrades.GetHashCode();
          if (equippedBadges_ != null) hash ^= EquippedBadges.GetHashCode();
          if (questSettings_ != null) hash ^= QuestSettings.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (TemplateId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TemplateId);
          }
          if (pokemonSettings_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PokemonSettings);
          }
          if (itemSettings_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ItemSettings);
          }
          if (moveSettings_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(MoveSettings);
          }
          if (moveSequenceSettings_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(MoveSequenceSettings);
          }
          if (typeEffective_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(TypeEffective);
          }
          if (badgeSettings_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(BadgeSettings);
          }
          if (camera_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(Camera);
          }
          if (playerLevel_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(PlayerLevel);
          }
          if (gymLevel_ != null) {
            output.WriteRawTag(106);
            output.WriteMessage(GymLevel);
          }
          if (battleSettings_ != null) {
            output.WriteRawTag(114);
            output.WriteMessage(BattleSettings);
          }
          if (encounterSettings_ != null) {
            output.WriteRawTag(122);
            output.WriteMessage(EncounterSettings);
          }
          if (iapItemDisplay_ != null) {
            output.WriteRawTag(130, 1);
            output.WriteMessage(IapItemDisplay);
          }
          if (iapSettings_ != null) {
            output.WriteRawTag(138, 1);
            output.WriteMessage(IapSettings);
          }
          if (pokemonUpgrades_ != null) {
            output.WriteRawTag(146, 1);
            output.WriteMessage(PokemonUpgrades);
          }
          if (equippedBadges_ != null) {
            output.WriteRawTag(154, 1);
            output.WriteMessage(EquippedBadges);
          }
          if (questSettings_ != null) {
            output.WriteRawTag(162, 1);
            output.WriteMessage(QuestSettings);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (TemplateId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateId);
          }
          if (pokemonSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonSettings);
          }
          if (itemSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemSettings);
          }
          if (moveSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveSettings);
          }
          if (moveSequenceSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MoveSequenceSettings);
          }
          if (typeEffective_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeEffective);
          }
          if (badgeSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BadgeSettings);
          }
          if (camera_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Camera);
          }
          if (playerLevel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerLevel);
          }
          if (gymLevel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(GymLevel);
          }
          if (battleSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleSettings);
          }
          if (encounterSettings_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncounterSettings);
          }
          if (iapItemDisplay_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(IapItemDisplay);
          }
          if (iapSettings_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(IapSettings);
          }
          if (pokemonUpgrades_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(PokemonUpgrades);
          }
          if (equippedBadges_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(EquippedBadges);
          }
          if (questSettings_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(QuestSettings);
          }
          return size;
        }

        public void MergeFrom(ItemTemplate other) {
          if (other == null) {
            return;
          }
          if (other.TemplateId.Length != 0) {
            TemplateId = other.TemplateId;
          }
          if (other.pokemonSettings_ != null) {
            if (pokemonSettings_ == null) {
              pokemonSettings_ = new global::POGOProtos.Settings.Master.PokemonSettings();
            }
            PokemonSettings.MergeFrom(other.PokemonSettings);
          }
          if (other.itemSettings_ != null) {
            if (itemSettings_ == null) {
              itemSettings_ = new global::POGOProtos.Settings.Master.ItemSettings();
            }
            ItemSettings.MergeFrom(other.ItemSettings);
          }
          if (other.moveSettings_ != null) {
            if (moveSettings_ == null) {
              moveSettings_ = new global::POGOProtos.Settings.Master.MoveSettings();
            }
            MoveSettings.MergeFrom(other.MoveSettings);
          }
          if (other.moveSequenceSettings_ != null) {
            if (moveSequenceSettings_ == null) {
              moveSequenceSettings_ = new global::POGOProtos.Settings.Master.MoveSequenceSettings();
            }
            MoveSequenceSettings.MergeFrom(other.MoveSequenceSettings);
          }
          if (other.typeEffective_ != null) {
            if (typeEffective_ == null) {
              typeEffective_ = new global::POGOProtos.Settings.Master.TypeEffectiveSettings();
            }
            TypeEffective.MergeFrom(other.TypeEffective);
          }
          if (other.badgeSettings_ != null) {
            if (badgeSettings_ == null) {
              badgeSettings_ = new global::POGOProtos.Settings.Master.BadgeSettings();
            }
            BadgeSettings.MergeFrom(other.BadgeSettings);
          }
          if (other.camera_ != null) {
            if (camera_ == null) {
              camera_ = new global::POGOProtos.Settings.Master.CameraSettings();
            }
            Camera.MergeFrom(other.Camera);
          }
          if (other.playerLevel_ != null) {
            if (playerLevel_ == null) {
              playerLevel_ = new global::POGOProtos.Settings.Master.PlayerLevelSettings();
            }
            PlayerLevel.MergeFrom(other.PlayerLevel);
          }
          if (other.gymLevel_ != null) {
            if (gymLevel_ == null) {
              gymLevel_ = new global::POGOProtos.Settings.Master.GymLevelSettings();
            }
            GymLevel.MergeFrom(other.GymLevel);
          }
          if (other.battleSettings_ != null) {
            if (battleSettings_ == null) {
              battleSettings_ = new global::POGOProtos.Settings.Master.GymBattleSettings();
            }
            BattleSettings.MergeFrom(other.BattleSettings);
          }
          if (other.encounterSettings_ != null) {
            if (encounterSettings_ == null) {
              encounterSettings_ = new global::POGOProtos.Settings.Master.EncounterSettings();
            }
            EncounterSettings.MergeFrom(other.EncounterSettings);
          }
          if (other.iapItemDisplay_ != null) {
            if (iapItemDisplay_ == null) {
              iapItemDisplay_ = new global::POGOProtos.Settings.Master.IapItemDisplay();
            }
            IapItemDisplay.MergeFrom(other.IapItemDisplay);
          }
          if (other.iapSettings_ != null) {
            if (iapSettings_ == null) {
              iapSettings_ = new global::POGOProtos.Settings.Master.IapSettings();
            }
            IapSettings.MergeFrom(other.IapSettings);
          }
          if (other.pokemonUpgrades_ != null) {
            if (pokemonUpgrades_ == null) {
              pokemonUpgrades_ = new global::POGOProtos.Settings.Master.PokemonUpgradeSettings();
            }
            PokemonUpgrades.MergeFrom(other.PokemonUpgrades);
          }
          if (other.equippedBadges_ != null) {
            if (equippedBadges_ == null) {
              equippedBadges_ = new global::POGOProtos.Settings.Master.EquippedBadgeSettings();
            }
            EquippedBadges.MergeFrom(other.EquippedBadges);
          }
          if (other.questSettings_ != null) {
            if (questSettings_ == null) {
              questSettings_ = new global::POGOProtos.Settings.Master.QuestSettings();
            }
            QuestSettings.MergeFrom(other.QuestSettings);
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                TemplateId = input.ReadString();
                break;
              }
              case 18: {
                if (pokemonSettings_ == null) {
                  pokemonSettings_ = new global::POGOProtos.Settings.Master.PokemonSettings();
                }
                input.ReadMessage(pokemonSettings_);
                break;
              }
              case 26: {
                if (itemSettings_ == null) {
                  itemSettings_ = new global::POGOProtos.Settings.Master.ItemSettings();
                }
                input.ReadMessage(itemSettings_);
                break;
              }
              case 34: {
                if (moveSettings_ == null) {
                  moveSettings_ = new global::POGOProtos.Settings.Master.MoveSettings();
                }
                input.ReadMessage(moveSettings_);
                break;
              }
              case 42: {
                if (moveSequenceSettings_ == null) {
                  moveSequenceSettings_ = new global::POGOProtos.Settings.Master.MoveSequenceSettings();
                }
                input.ReadMessage(moveSequenceSettings_);
                break;
              }
              case 66: {
                if (typeEffective_ == null) {
                  typeEffective_ = new global::POGOProtos.Settings.Master.TypeEffectiveSettings();
                }
                input.ReadMessage(typeEffective_);
                break;
              }
              case 82: {
                if (badgeSettings_ == null) {
                  badgeSettings_ = new global::POGOProtos.Settings.Master.BadgeSettings();
                }
                input.ReadMessage(badgeSettings_);
                break;
              }
              case 90: {
                if (camera_ == null) {
                  camera_ = new global::POGOProtos.Settings.Master.CameraSettings();
                }
                input.ReadMessage(camera_);
                break;
              }
              case 98: {
                if (playerLevel_ == null) {
                  playerLevel_ = new global::POGOProtos.Settings.Master.PlayerLevelSettings();
                }
                input.ReadMessage(playerLevel_);
                break;
              }
              case 106: {
                if (gymLevel_ == null) {
                  gymLevel_ = new global::POGOProtos.Settings.Master.GymLevelSettings();
                }
                input.ReadMessage(gymLevel_);
                break;
              }
              case 114: {
                if (battleSettings_ == null) {
                  battleSettings_ = new global::POGOProtos.Settings.Master.GymBattleSettings();
                }
                input.ReadMessage(battleSettings_);
                break;
              }
              case 122: {
                if (encounterSettings_ == null) {
                  encounterSettings_ = new global::POGOProtos.Settings.Master.EncounterSettings();
                }
                input.ReadMessage(encounterSettings_);
                break;
              }
              case 130: {
                if (iapItemDisplay_ == null) {
                  iapItemDisplay_ = new global::POGOProtos.Settings.Master.IapItemDisplay();
                }
                input.ReadMessage(iapItemDisplay_);
                break;
              }
              case 138: {
                if (iapSettings_ == null) {
                  iapSettings_ = new global::POGOProtos.Settings.Master.IapSettings();
                }
                input.ReadMessage(iapSettings_);
                break;
              }
              case 146: {
                if (pokemonUpgrades_ == null) {
                  pokemonUpgrades_ = new global::POGOProtos.Settings.Master.PokemonUpgradeSettings();
                }
                input.ReadMessage(pokemonUpgrades_);
                break;
              }
              case 154: {
                if (equippedBadges_ == null) {
                  equippedBadges_ = new global::POGOProtos.Settings.Master.EquippedBadgeSettings();
                }
                input.ReadMessage(equippedBadges_);
                break;
              }
              case 162: {
                if (questSettings_ == null) {
                  questSettings_ = new global::POGOProtos.Settings.Master.QuestSettings();
                }
                input.ReadMessage(questSettings_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
