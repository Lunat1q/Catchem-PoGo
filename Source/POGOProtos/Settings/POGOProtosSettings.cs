// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Settings.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Settings {

  /// <summary>Holder for reflection information generated from POGOProtos.Settings.proto</summary>
  public static partial class POGOProtosSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos.Settings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static POGOProtosSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQT0dPUHJvdG9zLlNldHRpbmdzLnByb3RvEhNQT0dPUHJvdG9zLlNldHRp",
            "bmdzIo8CCgtNYXBTZXR0aW5ncxIdChVwb2tlbW9uX3Zpc2libGVfcmFuZ2UY",
            "ASABKAESHQoVcG9rZV9uYXZfcmFuZ2VfbWV0ZXJzGAIgASgBEh4KFmVuY291",
            "bnRlcl9yYW5nZV9tZXRlcnMYAyABKAESKwojZ2V0X21hcF9vYmplY3RzX21p",
            "bl9yZWZyZXNoX3NlY29uZHMYBCABKAISKwojZ2V0X21hcF9vYmplY3RzX21h",
            "eF9yZWZyZXNoX3NlY29uZHMYBSABKAISKwojZ2V0X21hcF9vYmplY3RzX21p",
            "bl9kaXN0YW5jZV9tZXRlcnMYBiABKAISGwoTZ29vZ2xlX21hcHNfYXBpX2tl",
            "eRgHIAEoCSKAAQoRSW52ZW50b3J5U2V0dGluZ3MSEwoLbWF4X3Bva2Vtb24Y",
            "ASABKAUSFQoNbWF4X2JhZ19pdGVtcxgCIAEoBRIUCgxiYXNlX3Bva2Vtb24Y",
            "AyABKAUSFgoOYmFzZV9iYWdfaXRlbXMYBCABKAUSEQoJYmFzZV9lZ2dzGAUg",
            "ASgFIuQBCgxGb3J0U2V0dGluZ3MSIAoYaW50ZXJhY3Rpb25fcmFuZ2VfbWV0",
            "ZXJzGAEgASgBEiIKGm1heF90b3RhbF9kZXBsb3llZF9wb2tlbW9uGAIgASgF",
            "EiMKG21heF9wbGF5ZXJfZGVwbG95ZWRfcG9rZW1vbhgDIAEoBRIhChlkZXBs",
            "b3lfc3RhbWluYV9tdWx0aXBsaWVyGAQgASgBEiAKGGRlcGxveV9hdHRhY2tf",
            "bXVsdGlwbGllchgFIAEoARIkChxmYXJfaW50ZXJhY3Rpb25fcmFuZ2VfbWV0",
            "ZXJzGAYgASgBIqICCg5HbG9iYWxTZXR0aW5ncxI4Cg1mb3J0X3NldHRpbmdz",
            "GAIgASgLMiEuUE9HT1Byb3Rvcy5TZXR0aW5ncy5Gb3J0U2V0dGluZ3MSNgoM",
            "bWFwX3NldHRpbmdzGAMgASgLMiAuUE9HT1Byb3Rvcy5TZXR0aW5ncy5NYXBT",
            "ZXR0aW5ncxI6Cg5sZXZlbF9zZXR0aW5ncxgEIAEoCzIiLlBPR09Qcm90b3Mu",
            "U2V0dGluZ3MuTGV2ZWxTZXR0aW5ncxJCChJpbnZlbnRvcnlfc2V0dGluZ3MY",
            "BSABKAsyJi5QT0dPUHJvdG9zLlNldHRpbmdzLkludmVudG9yeVNldHRpbmdz",
            "Eh4KFm1pbmltdW1fY2xpZW50X3ZlcnNpb24YBiABKAkiJgoWRG93bmxvYWRT",
            "ZXR0aW5nc0FjdGlvbhIMCgRoYXNoGAEgASgJIlEKDUxldmVsU2V0dGluZ3MS",
            "GwoTdHJhaW5lcl9jcF9tb2RpZmllchgCIAEoARIjCht0cmFpbmVyX2RpZmZp",
            "Y3VsdHlfbW9kaWZpZXIYAyABKAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.MapSettings), global::POGOProtos.Settings.MapSettings.Parser, new[]{ "PokemonVisibleRange", "PokeNavRangeMeters", "EncounterRangeMeters", "GetMapObjectsMinRefreshSeconds", "GetMapObjectsMaxRefreshSeconds", "GetMapObjectsMinDistanceMeters", "GoogleMapsApiKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.InventorySettings), global::POGOProtos.Settings.InventorySettings.Parser, new[]{ "MaxPokemon", "MaxBagItems", "BasePokemon", "BaseBagItems", "BaseEggs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.FortSettings), global::POGOProtos.Settings.FortSettings.Parser, new[]{ "InteractionRangeMeters", "MaxTotalDeployedPokemon", "MaxPlayerDeployedPokemon", "DeployStaminaMultiplier", "DeployAttackMultiplier", "FarInteractionRangeMeters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.GlobalSettings), global::POGOProtos.Settings.GlobalSettings.Parser, new[]{ "FortSettings", "MapSettings", "LevelSettings", "InventorySettings", "MinimumClientVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.DownloadSettingsAction), global::POGOProtos.Settings.DownloadSettingsAction.Parser, new[]{ "Hash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.LevelSettings), global::POGOProtos.Settings.LevelSettings.Parser, new[]{ "TrainerCpModifier", "TrainerDifficultyModifier" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MapSettings : pb::IMessage<MapSettings> {
    private static readonly pb::MessageParser<MapSettings> _parser = new pb::MessageParser<MapSettings>(() => new MapSettings());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.POGOProtosSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapSettings(MapSettings other) : this() {
      pokemonVisibleRange_ = other.pokemonVisibleRange_;
      pokeNavRangeMeters_ = other.pokeNavRangeMeters_;
      encounterRangeMeters_ = other.encounterRangeMeters_;
      getMapObjectsMinRefreshSeconds_ = other.getMapObjectsMinRefreshSeconds_;
      getMapObjectsMaxRefreshSeconds_ = other.getMapObjectsMaxRefreshSeconds_;
      getMapObjectsMinDistanceMeters_ = other.getMapObjectsMinDistanceMeters_;
      googleMapsApiKey_ = other.googleMapsApiKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapSettings Clone() {
      return new MapSettings(this);
    }

    /// <summary>Field number for the "pokemon_visible_range" field.</summary>
    public const int PokemonVisibleRangeFieldNumber = 1;
    private double pokemonVisibleRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PokemonVisibleRange {
      get { return pokemonVisibleRange_; }
      set {
        pokemonVisibleRange_ = value;
      }
    }

    /// <summary>Field number for the "poke_nav_range_meters" field.</summary>
    public const int PokeNavRangeMetersFieldNumber = 2;
    private double pokeNavRangeMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PokeNavRangeMeters {
      get { return pokeNavRangeMeters_; }
      set {
        pokeNavRangeMeters_ = value;
      }
    }

    /// <summary>Field number for the "encounter_range_meters" field.</summary>
    public const int EncounterRangeMetersFieldNumber = 3;
    private double encounterRangeMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double EncounterRangeMeters {
      get { return encounterRangeMeters_; }
      set {
        encounterRangeMeters_ = value;
      }
    }

    /// <summary>Field number for the "get_map_objects_min_refresh_seconds" field.</summary>
    public const int GetMapObjectsMinRefreshSecondsFieldNumber = 4;
    private float getMapObjectsMinRefreshSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float GetMapObjectsMinRefreshSeconds {
      get { return getMapObjectsMinRefreshSeconds_; }
      set {
        getMapObjectsMinRefreshSeconds_ = value;
      }
    }

    /// <summary>Field number for the "get_map_objects_max_refresh_seconds" field.</summary>
    public const int GetMapObjectsMaxRefreshSecondsFieldNumber = 5;
    private float getMapObjectsMaxRefreshSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float GetMapObjectsMaxRefreshSeconds {
      get { return getMapObjectsMaxRefreshSeconds_; }
      set {
        getMapObjectsMaxRefreshSeconds_ = value;
      }
    }

    /// <summary>Field number for the "get_map_objects_min_distance_meters" field.</summary>
    public const int GetMapObjectsMinDistanceMetersFieldNumber = 6;
    private float getMapObjectsMinDistanceMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float GetMapObjectsMinDistanceMeters {
      get { return getMapObjectsMinDistanceMeters_; }
      set {
        getMapObjectsMinDistanceMeters_ = value;
      }
    }

    /// <summary>Field number for the "google_maps_api_key" field.</summary>
    public const int GoogleMapsApiKeyFieldNumber = 7;
    private string googleMapsApiKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GoogleMapsApiKey {
      get { return googleMapsApiKey_; }
      set {
        googleMapsApiKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PokemonVisibleRange != other.PokemonVisibleRange) return false;
      if (PokeNavRangeMeters != other.PokeNavRangeMeters) return false;
      if (EncounterRangeMeters != other.EncounterRangeMeters) return false;
      if (GetMapObjectsMinRefreshSeconds != other.GetMapObjectsMinRefreshSeconds) return false;
      if (GetMapObjectsMaxRefreshSeconds != other.GetMapObjectsMaxRefreshSeconds) return false;
      if (GetMapObjectsMinDistanceMeters != other.GetMapObjectsMinDistanceMeters) return false;
      if (GoogleMapsApiKey != other.GoogleMapsApiKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PokemonVisibleRange != 0D) hash ^= PokemonVisibleRange.GetHashCode();
      if (PokeNavRangeMeters != 0D) hash ^= PokeNavRangeMeters.GetHashCode();
      if (EncounterRangeMeters != 0D) hash ^= EncounterRangeMeters.GetHashCode();
      if (GetMapObjectsMinRefreshSeconds != 0F) hash ^= GetMapObjectsMinRefreshSeconds.GetHashCode();
      if (GetMapObjectsMaxRefreshSeconds != 0F) hash ^= GetMapObjectsMaxRefreshSeconds.GetHashCode();
      if (GetMapObjectsMinDistanceMeters != 0F) hash ^= GetMapObjectsMinDistanceMeters.GetHashCode();
      if (GoogleMapsApiKey.Length != 0) hash ^= GoogleMapsApiKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PokemonVisibleRange != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(PokemonVisibleRange);
      }
      if (PokeNavRangeMeters != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(PokeNavRangeMeters);
      }
      if (EncounterRangeMeters != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(EncounterRangeMeters);
      }
      if (GetMapObjectsMinRefreshSeconds != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(GetMapObjectsMinRefreshSeconds);
      }
      if (GetMapObjectsMaxRefreshSeconds != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(GetMapObjectsMaxRefreshSeconds);
      }
      if (GetMapObjectsMinDistanceMeters != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(GetMapObjectsMinDistanceMeters);
      }
      if (GoogleMapsApiKey.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GoogleMapsApiKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PokemonVisibleRange != 0D) {
        size += 1 + 8;
      }
      if (PokeNavRangeMeters != 0D) {
        size += 1 + 8;
      }
      if (EncounterRangeMeters != 0D) {
        size += 1 + 8;
      }
      if (GetMapObjectsMinRefreshSeconds != 0F) {
        size += 1 + 4;
      }
      if (GetMapObjectsMaxRefreshSeconds != 0F) {
        size += 1 + 4;
      }
      if (GetMapObjectsMinDistanceMeters != 0F) {
        size += 1 + 4;
      }
      if (GoogleMapsApiKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GoogleMapsApiKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapSettings other) {
      if (other == null) {
        return;
      }
      if (other.PokemonVisibleRange != 0D) {
        PokemonVisibleRange = other.PokemonVisibleRange;
      }
      if (other.PokeNavRangeMeters != 0D) {
        PokeNavRangeMeters = other.PokeNavRangeMeters;
      }
      if (other.EncounterRangeMeters != 0D) {
        EncounterRangeMeters = other.EncounterRangeMeters;
      }
      if (other.GetMapObjectsMinRefreshSeconds != 0F) {
        GetMapObjectsMinRefreshSeconds = other.GetMapObjectsMinRefreshSeconds;
      }
      if (other.GetMapObjectsMaxRefreshSeconds != 0F) {
        GetMapObjectsMaxRefreshSeconds = other.GetMapObjectsMaxRefreshSeconds;
      }
      if (other.GetMapObjectsMinDistanceMeters != 0F) {
        GetMapObjectsMinDistanceMeters = other.GetMapObjectsMinDistanceMeters;
      }
      if (other.GoogleMapsApiKey.Length != 0) {
        GoogleMapsApiKey = other.GoogleMapsApiKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            PokemonVisibleRange = input.ReadDouble();
            break;
          }
          case 17: {
            PokeNavRangeMeters = input.ReadDouble();
            break;
          }
          case 25: {
            EncounterRangeMeters = input.ReadDouble();
            break;
          }
          case 37: {
            GetMapObjectsMinRefreshSeconds = input.ReadFloat();
            break;
          }
          case 45: {
            GetMapObjectsMaxRefreshSeconds = input.ReadFloat();
            break;
          }
          case 53: {
            GetMapObjectsMinDistanceMeters = input.ReadFloat();
            break;
          }
          case 58: {
            GoogleMapsApiKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InventorySettings : pb::IMessage<InventorySettings> {
    private static readonly pb::MessageParser<InventorySettings> _parser = new pb::MessageParser<InventorySettings>(() => new InventorySettings());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventorySettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.POGOProtosSettingsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventorySettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventorySettings(InventorySettings other) : this() {
      maxPokemon_ = other.maxPokemon_;
      maxBagItems_ = other.maxBagItems_;
      basePokemon_ = other.basePokemon_;
      baseBagItems_ = other.baseBagItems_;
      baseEggs_ = other.baseEggs_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventorySettings Clone() {
      return new InventorySettings(this);
    }

    /// <summary>Field number for the "max_pokemon" field.</summary>
    public const int MaxPokemonFieldNumber = 1;
    private int maxPokemon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPokemon {
      get { return maxPokemon_; }
      set {
        maxPokemon_ = value;
      }
    }

    /// <summary>Field number for the "max_bag_items" field.</summary>
    public const int MaxBagItemsFieldNumber = 2;
    private int maxBagItems_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxBagItems {
      get { return maxBagItems_; }
      set {
        maxBagItems_ = value;
      }
    }

    /// <summary>Field number for the "base_pokemon" field.</summary>
    public const int BasePokemonFieldNumber = 3;
    private int basePokemon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BasePokemon {
      get { return basePokemon_; }
      set {
        basePokemon_ = value;
      }
    }

    /// <summary>Field number for the "base_bag_items" field.</summary>
    public const int BaseBagItemsFieldNumber = 4;
    private int baseBagItems_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseBagItems {
      get { return baseBagItems_; }
      set {
        baseBagItems_ = value;
      }
    }

    /// <summary>Field number for the "base_eggs" field.</summary>
    public const int BaseEggsFieldNumber = 5;
    private int baseEggs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseEggs {
      get { return baseEggs_; }
      set {
        baseEggs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventorySettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventorySettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxPokemon != other.MaxPokemon) return false;
      if (MaxBagItems != other.MaxBagItems) return false;
      if (BasePokemon != other.BasePokemon) return false;
      if (BaseBagItems != other.BaseBagItems) return false;
      if (BaseEggs != other.BaseEggs) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxPokemon != 0) hash ^= MaxPokemon.GetHashCode();
      if (MaxBagItems != 0) hash ^= MaxBagItems.GetHashCode();
      if (BasePokemon != 0) hash ^= BasePokemon.GetHashCode();
      if (BaseBagItems != 0) hash ^= BaseBagItems.GetHashCode();
      if (BaseEggs != 0) hash ^= BaseEggs.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxPokemon != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxPokemon);
      }
      if (MaxBagItems != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxBagItems);
      }
      if (BasePokemon != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BasePokemon);
      }
      if (BaseBagItems != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BaseBagItems);
      }
      if (BaseEggs != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BaseEggs);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxPokemon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPokemon);
      }
      if (MaxBagItems != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxBagItems);
      }
      if (BasePokemon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BasePokemon);
      }
      if (BaseBagItems != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseBagItems);
      }
      if (BaseEggs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseEggs);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventorySettings other) {
      if (other == null) {
        return;
      }
      if (other.MaxPokemon != 0) {
        MaxPokemon = other.MaxPokemon;
      }
      if (other.MaxBagItems != 0) {
        MaxBagItems = other.MaxBagItems;
      }
      if (other.BasePokemon != 0) {
        BasePokemon = other.BasePokemon;
      }
      if (other.BaseBagItems != 0) {
        BaseBagItems = other.BaseBagItems;
      }
      if (other.BaseEggs != 0) {
        BaseEggs = other.BaseEggs;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MaxPokemon = input.ReadInt32();
            break;
          }
          case 16: {
            MaxBagItems = input.ReadInt32();
            break;
          }
          case 24: {
            BasePokemon = input.ReadInt32();
            break;
          }
          case 32: {
            BaseBagItems = input.ReadInt32();
            break;
          }
          case 40: {
            BaseEggs = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FortSettings : pb::IMessage<FortSettings> {
    private static readonly pb::MessageParser<FortSettings> _parser = new pb::MessageParser<FortSettings>(() => new FortSettings());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FortSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.POGOProtosSettingsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortSettings(FortSettings other) : this() {
      interactionRangeMeters_ = other.interactionRangeMeters_;
      maxTotalDeployedPokemon_ = other.maxTotalDeployedPokemon_;
      maxPlayerDeployedPokemon_ = other.maxPlayerDeployedPokemon_;
      deployStaminaMultiplier_ = other.deployStaminaMultiplier_;
      deployAttackMultiplier_ = other.deployAttackMultiplier_;
      farInteractionRangeMeters_ = other.farInteractionRangeMeters_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FortSettings Clone() {
      return new FortSettings(this);
    }

    /// <summary>Field number for the "interaction_range_meters" field.</summary>
    public const int InteractionRangeMetersFieldNumber = 1;
    private double interactionRangeMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double InteractionRangeMeters {
      get { return interactionRangeMeters_; }
      set {
        interactionRangeMeters_ = value;
      }
    }

    /// <summary>Field number for the "max_total_deployed_pokemon" field.</summary>
    public const int MaxTotalDeployedPokemonFieldNumber = 2;
    private int maxTotalDeployedPokemon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxTotalDeployedPokemon {
      get { return maxTotalDeployedPokemon_; }
      set {
        maxTotalDeployedPokemon_ = value;
      }
    }

    /// <summary>Field number for the "max_player_deployed_pokemon" field.</summary>
    public const int MaxPlayerDeployedPokemonFieldNumber = 3;
    private int maxPlayerDeployedPokemon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPlayerDeployedPokemon {
      get { return maxPlayerDeployedPokemon_; }
      set {
        maxPlayerDeployedPokemon_ = value;
      }
    }

    /// <summary>Field number for the "deploy_stamina_multiplier" field.</summary>
    public const int DeployStaminaMultiplierFieldNumber = 4;
    private double deployStaminaMultiplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DeployStaminaMultiplier {
      get { return deployStaminaMultiplier_; }
      set {
        deployStaminaMultiplier_ = value;
      }
    }

    /// <summary>Field number for the "deploy_attack_multiplier" field.</summary>
    public const int DeployAttackMultiplierFieldNumber = 5;
    private double deployAttackMultiplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DeployAttackMultiplier {
      get { return deployAttackMultiplier_; }
      set {
        deployAttackMultiplier_ = value;
      }
    }

    /// <summary>Field number for the "far_interaction_range_meters" field.</summary>
    public const int FarInteractionRangeMetersFieldNumber = 6;
    private double farInteractionRangeMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FarInteractionRangeMeters {
      get { return farInteractionRangeMeters_; }
      set {
        farInteractionRangeMeters_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FortSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FortSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InteractionRangeMeters != other.InteractionRangeMeters) return false;
      if (MaxTotalDeployedPokemon != other.MaxTotalDeployedPokemon) return false;
      if (MaxPlayerDeployedPokemon != other.MaxPlayerDeployedPokemon) return false;
      if (DeployStaminaMultiplier != other.DeployStaminaMultiplier) return false;
      if (DeployAttackMultiplier != other.DeployAttackMultiplier) return false;
      if (FarInteractionRangeMeters != other.FarInteractionRangeMeters) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InteractionRangeMeters != 0D) hash ^= InteractionRangeMeters.GetHashCode();
      if (MaxTotalDeployedPokemon != 0) hash ^= MaxTotalDeployedPokemon.GetHashCode();
      if (MaxPlayerDeployedPokemon != 0) hash ^= MaxPlayerDeployedPokemon.GetHashCode();
      if (DeployStaminaMultiplier != 0D) hash ^= DeployStaminaMultiplier.GetHashCode();
      if (DeployAttackMultiplier != 0D) hash ^= DeployAttackMultiplier.GetHashCode();
      if (FarInteractionRangeMeters != 0D) hash ^= FarInteractionRangeMeters.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InteractionRangeMeters != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(InteractionRangeMeters);
      }
      if (MaxTotalDeployedPokemon != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxTotalDeployedPokemon);
      }
      if (MaxPlayerDeployedPokemon != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxPlayerDeployedPokemon);
      }
      if (DeployStaminaMultiplier != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(DeployStaminaMultiplier);
      }
      if (DeployAttackMultiplier != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(DeployAttackMultiplier);
      }
      if (FarInteractionRangeMeters != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(FarInteractionRangeMeters);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InteractionRangeMeters != 0D) {
        size += 1 + 8;
      }
      if (MaxTotalDeployedPokemon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxTotalDeployedPokemon);
      }
      if (MaxPlayerDeployedPokemon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayerDeployedPokemon);
      }
      if (DeployStaminaMultiplier != 0D) {
        size += 1 + 8;
      }
      if (DeployAttackMultiplier != 0D) {
        size += 1 + 8;
      }
      if (FarInteractionRangeMeters != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FortSettings other) {
      if (other == null) {
        return;
      }
      if (other.InteractionRangeMeters != 0D) {
        InteractionRangeMeters = other.InteractionRangeMeters;
      }
      if (other.MaxTotalDeployedPokemon != 0) {
        MaxTotalDeployedPokemon = other.MaxTotalDeployedPokemon;
      }
      if (other.MaxPlayerDeployedPokemon != 0) {
        MaxPlayerDeployedPokemon = other.MaxPlayerDeployedPokemon;
      }
      if (other.DeployStaminaMultiplier != 0D) {
        DeployStaminaMultiplier = other.DeployStaminaMultiplier;
      }
      if (other.DeployAttackMultiplier != 0D) {
        DeployAttackMultiplier = other.DeployAttackMultiplier;
      }
      if (other.FarInteractionRangeMeters != 0D) {
        FarInteractionRangeMeters = other.FarInteractionRangeMeters;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            InteractionRangeMeters = input.ReadDouble();
            break;
          }
          case 16: {
            MaxTotalDeployedPokemon = input.ReadInt32();
            break;
          }
          case 24: {
            MaxPlayerDeployedPokemon = input.ReadInt32();
            break;
          }
          case 33: {
            DeployStaminaMultiplier = input.ReadDouble();
            break;
          }
          case 41: {
            DeployAttackMultiplier = input.ReadDouble();
            break;
          }
          case 49: {
            FarInteractionRangeMeters = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GlobalSettings : pb::IMessage<GlobalSettings> {
    private static readonly pb::MessageParser<GlobalSettings> _parser = new pb::MessageParser<GlobalSettings>(() => new GlobalSettings());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GlobalSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.POGOProtosSettingsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlobalSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlobalSettings(GlobalSettings other) : this() {
      FortSettings = other.fortSettings_ != null ? other.FortSettings.Clone() : null;
      MapSettings = other.mapSettings_ != null ? other.MapSettings.Clone() : null;
      LevelSettings = other.levelSettings_ != null ? other.LevelSettings.Clone() : null;
      InventorySettings = other.inventorySettings_ != null ? other.InventorySettings.Clone() : null;
      minimumClientVersion_ = other.minimumClientVersion_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GlobalSettings Clone() {
      return new GlobalSettings(this);
    }

    /// <summary>Field number for the "fort_settings" field.</summary>
    public const int FortSettingsFieldNumber = 2;
    private global::POGOProtos.Settings.FortSettings fortSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.FortSettings FortSettings {
      get { return fortSettings_; }
      set {
        fortSettings_ = value;
      }
    }

    /// <summary>Field number for the "map_settings" field.</summary>
    public const int MapSettingsFieldNumber = 3;
    private global::POGOProtos.Settings.MapSettings mapSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.MapSettings MapSettings {
      get { return mapSettings_; }
      set {
        mapSettings_ = value;
      }
    }

    /// <summary>Field number for the "level_settings" field.</summary>
    public const int LevelSettingsFieldNumber = 4;
    private global::POGOProtos.Settings.LevelSettings levelSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.LevelSettings LevelSettings {
      get { return levelSettings_; }
      set {
        levelSettings_ = value;
      }
    }

    /// <summary>Field number for the "inventory_settings" field.</summary>
    public const int InventorySettingsFieldNumber = 5;
    private global::POGOProtos.Settings.InventorySettings inventorySettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Settings.InventorySettings InventorySettings {
      get { return inventorySettings_; }
      set {
        inventorySettings_ = value;
      }
    }

    /// <summary>Field number for the "minimum_client_version" field.</summary>
    public const int MinimumClientVersionFieldNumber = 6;
    private string minimumClientVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MinimumClientVersion {
      get { return minimumClientVersion_; }
      set {
        minimumClientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GlobalSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GlobalSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FortSettings, other.FortSettings)) return false;
      if (!object.Equals(MapSettings, other.MapSettings)) return false;
      if (!object.Equals(LevelSettings, other.LevelSettings)) return false;
      if (!object.Equals(InventorySettings, other.InventorySettings)) return false;
      if (MinimumClientVersion != other.MinimumClientVersion) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fortSettings_ != null) hash ^= FortSettings.GetHashCode();
      if (mapSettings_ != null) hash ^= MapSettings.GetHashCode();
      if (levelSettings_ != null) hash ^= LevelSettings.GetHashCode();
      if (inventorySettings_ != null) hash ^= InventorySettings.GetHashCode();
      if (MinimumClientVersion.Length != 0) hash ^= MinimumClientVersion.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (fortSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FortSettings);
      }
      if (mapSettings_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MapSettings);
      }
      if (levelSettings_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LevelSettings);
      }
      if (inventorySettings_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(InventorySettings);
      }
      if (MinimumClientVersion.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MinimumClientVersion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fortSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FortSettings);
      }
      if (mapSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapSettings);
      }
      if (levelSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelSettings);
      }
      if (inventorySettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InventorySettings);
      }
      if (MinimumClientVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinimumClientVersion);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GlobalSettings other) {
      if (other == null) {
        return;
      }
      if (other.fortSettings_ != null) {
        if (fortSettings_ == null) {
          fortSettings_ = new global::POGOProtos.Settings.FortSettings();
        }
        FortSettings.MergeFrom(other.FortSettings);
      }
      if (other.mapSettings_ != null) {
        if (mapSettings_ == null) {
          mapSettings_ = new global::POGOProtos.Settings.MapSettings();
        }
        MapSettings.MergeFrom(other.MapSettings);
      }
      if (other.levelSettings_ != null) {
        if (levelSettings_ == null) {
          levelSettings_ = new global::POGOProtos.Settings.LevelSettings();
        }
        LevelSettings.MergeFrom(other.LevelSettings);
      }
      if (other.inventorySettings_ != null) {
        if (inventorySettings_ == null) {
          inventorySettings_ = new global::POGOProtos.Settings.InventorySettings();
        }
        InventorySettings.MergeFrom(other.InventorySettings);
      }
      if (other.MinimumClientVersion.Length != 0) {
        MinimumClientVersion = other.MinimumClientVersion;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            if (fortSettings_ == null) {
              fortSettings_ = new global::POGOProtos.Settings.FortSettings();
            }
            input.ReadMessage(fortSettings_);
            break;
          }
          case 26: {
            if (mapSettings_ == null) {
              mapSettings_ = new global::POGOProtos.Settings.MapSettings();
            }
            input.ReadMessage(mapSettings_);
            break;
          }
          case 34: {
            if (levelSettings_ == null) {
              levelSettings_ = new global::POGOProtos.Settings.LevelSettings();
            }
            input.ReadMessage(levelSettings_);
            break;
          }
          case 42: {
            if (inventorySettings_ == null) {
              inventorySettings_ = new global::POGOProtos.Settings.InventorySettings();
            }
            input.ReadMessage(inventorySettings_);
            break;
          }
          case 50: {
            MinimumClientVersion = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadSettingsAction : pb::IMessage<DownloadSettingsAction> {
    private static readonly pb::MessageParser<DownloadSettingsAction> _parser = new pb::MessageParser<DownloadSettingsAction>(() => new DownloadSettingsAction());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadSettingsAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.POGOProtosSettingsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadSettingsAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadSettingsAction(DownloadSettingsAction other) : this() {
      hash_ = other.hash_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadSettingsAction Clone() {
      return new DownloadSettingsAction(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadSettingsAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadSettingsAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hash);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadSettingsAction other) {
      if (other == null) {
        return;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Hash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LevelSettings : pb::IMessage<LevelSettings> {
    private static readonly pb::MessageParser<LevelSettings> _parser = new pb::MessageParser<LevelSettings>(() => new LevelSettings());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LevelSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.POGOProtosSettingsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelSettings(LevelSettings other) : this() {
      trainerCpModifier_ = other.trainerCpModifier_;
      trainerDifficultyModifier_ = other.trainerDifficultyModifier_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelSettings Clone() {
      return new LevelSettings(this);
    }

    /// <summary>Field number for the "trainer_cp_modifier" field.</summary>
    public const int TrainerCpModifierFieldNumber = 2;
    private double trainerCpModifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TrainerCpModifier {
      get { return trainerCpModifier_; }
      set {
        trainerCpModifier_ = value;
      }
    }

    /// <summary>Field number for the "trainer_difficulty_modifier" field.</summary>
    public const int TrainerDifficultyModifierFieldNumber = 3;
    private double trainerDifficultyModifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TrainerDifficultyModifier {
      get { return trainerDifficultyModifier_; }
      set {
        trainerDifficultyModifier_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LevelSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LevelSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TrainerCpModifier != other.TrainerCpModifier) return false;
      if (TrainerDifficultyModifier != other.TrainerDifficultyModifier) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TrainerCpModifier != 0D) hash ^= TrainerCpModifier.GetHashCode();
      if (TrainerDifficultyModifier != 0D) hash ^= TrainerDifficultyModifier.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TrainerCpModifier != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(TrainerCpModifier);
      }
      if (TrainerDifficultyModifier != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TrainerDifficultyModifier);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TrainerCpModifier != 0D) {
        size += 1 + 8;
      }
      if (TrainerDifficultyModifier != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LevelSettings other) {
      if (other == null) {
        return;
      }
      if (other.TrainerCpModifier != 0D) {
        TrainerCpModifier = other.TrainerCpModifier;
      }
      if (other.TrainerDifficultyModifier != 0D) {
        TrainerDifficultyModifier = other.TrainerDifficultyModifier;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 17: {
            TrainerCpModifier = input.ReadDouble();
            break;
          }
          case 25: {
            TrainerDifficultyModifier = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
