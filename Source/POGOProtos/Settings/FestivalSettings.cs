// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/FestivalSettings.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Settings {

  /// <summary>Holder for reflection information generated from POGOProtos/Settings/FestivalSettings.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class FestivalSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos/Settings/FestivalSettings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FestivalSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CipQT0dPUHJvdG9zL1NldHRpbmdzL0Zlc3RpdmFsU2V0dGluZ3MucHJvdG8S",
            "E1BPR09Qcm90b3MuU2V0dGluZ3MiowEKEEZlc3RpdmFsU2V0dGluZ3MSSQoN",
            "ZmVzdGl2YWxfdHlwZRgBIAEoDjIyLlBPR09Qcm90b3MuU2V0dGluZ3MuRmVz",
            "dGl2YWxTZXR0aW5ncy5GZXN0aXZhbFR5cGUSCwoDa2V5GAIgASgJEg4KBnZl",
            "Y3RvchgDIAEoCSInCgxGZXN0aXZhbFR5cGUSCAoETk9ORRAAEg0KCUhBTExP",
            "V0VFThABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Settings.FestivalSettings), global::POGOProtos.Settings.FestivalSettings.Parser, new[]{ "FestivalType", "Key", "Vector" }, null, new[]{ typeof(global::POGOProtos.Settings.FestivalSettings.Types.FestivalType) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FestivalSettings : pb::IMessage<FestivalSettings> {
    private static readonly pb::MessageParser<FestivalSettings> _parser = new pb::MessageParser<FestivalSettings>(() => new FestivalSettings());
    public static pb::MessageParser<FestivalSettings> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Settings.FestivalSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public FestivalSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    public FestivalSettings(FestivalSettings other) : this() {
      festivalType_ = other.festivalType_;
      key_ = other.key_;
      vector_ = other.vector_;
    }

    public FestivalSettings Clone() {
      return new FestivalSettings(this);
    }

    /// <summary>Field number for the "festival_type" field.</summary>
    public const int FestivalTypeFieldNumber = 1;
    private global::POGOProtos.Settings.FestivalSettings.Types.FestivalType festivalType_ = 0;
    public global::POGOProtos.Settings.FestivalSettings.Types.FestivalType FestivalType {
      get { return festivalType_; }
      set {
        festivalType_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private string key_ = "";
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vector" field.</summary>
    public const int VectorFieldNumber = 3;
    private string vector_ = "";
    public string Vector {
      get { return vector_; }
      set {
        vector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as FestivalSettings);
    }

    public bool Equals(FestivalSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FestivalType != other.FestivalType) return false;
      if (Key != other.Key) return false;
      if (Vector != other.Vector) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (FestivalType != 0) hash ^= FestivalType.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Vector.Length != 0) hash ^= Vector.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (FestivalType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) FestivalType);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      if (Vector.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Vector);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (FestivalType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FestivalType);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Vector.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Vector);
      }
      return size;
    }

    public void MergeFrom(FestivalSettings other) {
      if (other == null) {
        return;
      }
      if (other.FestivalType != 0) {
        FestivalType = other.FestivalType;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Vector.Length != 0) {
        Vector = other.Vector;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            festivalType_ = (global::POGOProtos.Settings.FestivalSettings.Types.FestivalType) input.ReadEnum();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            Vector = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FestivalSettings message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum FestivalType {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("HALLOWEEN")] Halloween = 1,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
