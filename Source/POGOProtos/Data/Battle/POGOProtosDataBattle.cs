// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Data.Battle.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data.Battle {

  /// <summary>Holder for reflection information generated from POGOProtos.Data.Battle.proto</summary>
  public static partial class POGOProtosDataBattleReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos.Data.Battle.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static POGOProtosDataBattleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxQT0dPUHJvdG9zLkRhdGEuQmF0dGxlLnByb3RvEhZQT0dPUHJvdG9zLkRh",
            "dGEuQmF0dGxlGhVQT0dPUHJvdG9zLkRhdGEucHJvdG8aGVBPR09Qcm90b3Mu",
            "RGF0YS5HeW0ucHJvdG8aHFBPR09Qcm90b3MuRGF0YS5QbGF5ZXIucHJvdG8i",
            "dwoRQmF0dGxlUG9rZW1vbkluZm8SMgoMcG9rZW1vbl9kYXRhGAEgASgLMhwu",
            "UE9HT1Byb3Rvcy5EYXRhLlBva2Vtb25EYXRhEhYKDmN1cnJlbnRfaGVhbHRo",
            "GAIgASgFEhYKDmN1cnJlbnRfZW5lcmd5GAMgASgFIt4BCg1CYXR0bGVSZXN1",
            "bHRzEjAKCWd5bV9zdGF0ZRgBIAEoCzIdLlBPR09Qcm90b3MuRGF0YS5HeW0u",
            "R3ltU3RhdGUSPAoJYXR0YWNrZXJzGAIgAygLMikuUE9HT1Byb3Rvcy5EYXRh",
            "LkJhdHRsZS5CYXR0bGVQYXJ0aWNpcGFudBIhChlwbGF5ZXJfZXhwZXJpZW5j",
            "ZV9hd2FyZGVkGAMgAygFEiAKGG5leHRfZGVmZW5kZXJfcG9rZW1vbl9pZBgE",
            "IAEoAxIYChBneW1fcG9pbnRzX2RlbHRhGAUgASgFIo0CCglCYXR0bGVMb2cS",
            "MgoFc3RhdGUYASABKA4yIy5QT0dPUHJvdG9zLkRhdGEuQmF0dGxlLkJhdHRs",
            "ZVN0YXRlEjcKC2JhdHRsZV90eXBlGAIgASgOMiIuUE9HT1Byb3Rvcy5EYXRh",
            "LkJhdHRsZS5CYXR0bGVUeXBlEhEKCXNlcnZlcl9tcxgDIAEoAxI8Cg5iYXR0",
            "bGVfYWN0aW9ucxgEIAMoCzIkLlBPR09Qcm90b3MuRGF0YS5CYXR0bGUuQmF0",
            "dGxlQWN0aW9uEiEKGWJhdHRsZV9zdGFydF90aW1lc3RhbXBfbXMYBSABKAMS",
            "HwoXYmF0dGxlX2VuZF90aW1lc3RhbXBfbXMYBiABKAMirAIKEUJhdHRsZVBh",
            "cnRpY2lwYW50EkEKDmFjdGl2ZV9wb2tlbW9uGAEgASgLMikuUE9HT1Byb3Rv",
            "cy5EYXRhLkJhdHRsZS5CYXR0bGVQb2tlbW9uSW5mbxJLChZ0cmFpbmVyX3B1",
            "YmxpY19wcm9maWxlGAIgASgLMisuUE9HT1Byb3Rvcy5EYXRhLlBsYXllci5Q",
            "bGF5ZXJQdWJsaWNQcm9maWxlEkIKD3JldmVyc2VfcG9rZW1vbhgDIAMoCzIp",
            "LlBPR09Qcm90b3MuRGF0YS5CYXR0bGUuQmF0dGxlUG9rZW1vbkluZm8SQwoQ",
            "ZGVmZWF0ZWRfcG9rZW1vbhgEIAMoCzIpLlBPR09Qcm90b3MuRGF0YS5CYXR0",
            "bGUuQmF0dGxlUG9rZW1vbkluZm8ihQQKDEJhdHRsZUFjdGlvbhI2CgRUeXBl",
            "GAEgASgOMiguUE9HT1Byb3Rvcy5EYXRhLkJhdHRsZS5CYXR0bGVBY3Rpb25U",
            "eXBlEhcKD2FjdGlvbl9zdGFydF9tcxgCIAEoAxITCgtkdXJhdGlvbl9tcxgD",
            "IAEoBRIUCgxlbmVyZ3lfZGVsdGEYBSABKAUSFgoOYXR0YWNrZXJfaW5kZXgY",
            "BiABKAUSFAoMdGFyZ2V0X2luZGV4GAcgASgFEhkKEWFjdGl2ZV9wb2tlbW9u",
            "X2lkGAggASgGEkAKDXBsYXllcl9qb2luZWQYCSABKAsyKS5QT0dPUHJvdG9z",
            "LkRhdGEuQmF0dGxlLkJhdHRsZVBhcnRpY2lwYW50Ej0KDmJhdHRsZV9yZXN1",
            "bHRzGAogASgLMiUuUE9HT1Byb3Rvcy5EYXRhLkJhdHRsZS5CYXR0bGVSZXN1",
            "bHRzEioKImRhbWFnZV93aW5kb3dzX3N0YXJ0X3RpbWVzdGFtcF9tc3MYCyAB",
            "KAMSKAogZGFtYWdlX3dpbmRvd3NfZW5kX3RpbWVzdGFtcF9tc3MYDCABKAMS",
            "PgoLcGxheWVyX2xlZnQYDSABKAsyKS5QT0dPUHJvdG9zLkRhdGEuQmF0dGxl",
            "LkJhdHRsZVBhcnRpY2lwYW50EhkKEXRhcmdldF9wb2tlbW9uX2lkGA4gASgG",
            "KlQKC0JhdHRsZVN0YXRlEg8KC1NUQVRFX1VOU0VUEAASCgoGQUNUSVZFEAES",
            "CwoHVklDVE9SWRACEgwKCERFRkVBVEVEEAMSDQoJVElNRURfT1VUEAQq/AEK",
            "EEJhdHRsZUFjdGlvblR5cGUSEAoMQUNUSU9OX1VOU0VUEAASEQoNQUNUSU9O",
            "X0FUVEFDSxABEhAKDEFDVElPTl9ET0RHRRACEhkKFUFDVElPTl9TUEVDSUFM",
            "X0FUVEFDSxADEhcKE0FDVElPTl9TV0FQX1BPS0VNT04QBBIQCgxBQ1RJT05f",
            "RkFJTlQQBRIWChJBQ1RJT05fUExBWUVSX0pPSU4QBhIWChJBQ1RJT05fUExB",
            "WUVSX1FVSVQQBxISCg5BQ1RJT05fVklDVE9SWRAIEhEKDUFDVElPTl9ERUZF",
            "QVQQCRIUChBBQ1RJT05fVElNRURfT1VUEAoqPQoKQmF0dGxlVHlwZRIVChFC",
            "QVRUTEVfVFlQRV9VTlNFVBAAEgoKBk5PUk1BTBABEgwKCFRSQUlOSU5HEAJQ",
            "AFABUAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Data.POGOProtosDataReflection.Descriptor, global::POGOProtos.Data.Gym.POGOProtosDataGymReflection.Descriptor, global::POGOProtos.Data.Player.POGOProtosDataPlayerReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::POGOProtos.Data.Battle.BattleState), typeof(global::POGOProtos.Data.Battle.BattleActionType), typeof(global::POGOProtos.Data.Battle.BattleType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Battle.BattlePokemonInfo), global::POGOProtos.Data.Battle.BattlePokemonInfo.Parser, new[]{ "PokemonData", "CurrentHealth", "CurrentEnergy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Battle.BattleResults), global::POGOProtos.Data.Battle.BattleResults.Parser, new[]{ "GymState", "Attackers", "PlayerExperienceAwarded", "NextDefenderPokemonId", "GymPointsDelta" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Battle.BattleLog), global::POGOProtos.Data.Battle.BattleLog.Parser, new[]{ "State", "BattleType", "ServerMs", "BattleActions", "BattleStartTimestampMs", "BattleEndTimestampMs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Battle.BattleParticipant), global::POGOProtos.Data.Battle.BattleParticipant.Parser, new[]{ "ActivePokemon", "TrainerPublicProfile", "ReversePokemon", "DefeatedPokemon" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Battle.BattleAction), global::POGOProtos.Data.Battle.BattleAction.Parser, new[]{ "Type", "ActionStartMs", "DurationMs", "EnergyDelta", "AttackerIndex", "TargetIndex", "ActivePokemonId", "PlayerJoined", "BattleResults", "DamageWindowsStartTimestampMss", "DamageWindowsEndTimestampMss", "PlayerLeft", "TargetPokemonId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum BattleState {
    [pbr::OriginalName("STATE_UNSET")] StateUnset = 0,
    [pbr::OriginalName("ACTIVE")] Active = 1,
    [pbr::OriginalName("VICTORY")] Victory = 2,
    [pbr::OriginalName("DEFEATED")] Defeated = 3,
    [pbr::OriginalName("TIMED_OUT")] TimedOut = 4,
  }

  public enum BattleActionType {
    [pbr::OriginalName("ACTION_UNSET")] ActionUnset = 0,
    [pbr::OriginalName("ACTION_ATTACK")] ActionAttack = 1,
    [pbr::OriginalName("ACTION_DODGE")] ActionDodge = 2,
    [pbr::OriginalName("ACTION_SPECIAL_ATTACK")] ActionSpecialAttack = 3,
    [pbr::OriginalName("ACTION_SWAP_POKEMON")] ActionSwapPokemon = 4,
    [pbr::OriginalName("ACTION_FAINT")] ActionFaint = 5,
    [pbr::OriginalName("ACTION_PLAYER_JOIN")] ActionPlayerJoin = 6,
    [pbr::OriginalName("ACTION_PLAYER_QUIT")] ActionPlayerQuit = 7,
    [pbr::OriginalName("ACTION_VICTORY")] ActionVictory = 8,
    [pbr::OriginalName("ACTION_DEFEAT")] ActionDefeat = 9,
    [pbr::OriginalName("ACTION_TIMED_OUT")] ActionTimedOut = 10,
  }

  public enum BattleType {
    [pbr::OriginalName("BATTLE_TYPE_UNSET")] Unset = 0,
    [pbr::OriginalName("NORMAL")] Normal = 1,
    [pbr::OriginalName("TRAINING")] Training = 2,
  }

  #endregion

  #region Messages
  public sealed partial class BattlePokemonInfo : pb::IMessage<BattlePokemonInfo> {
    private static readonly pb::MessageParser<BattlePokemonInfo> _parser = new pb::MessageParser<BattlePokemonInfo>(() => new BattlePokemonInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattlePokemonInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Battle.POGOProtosDataBattleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattlePokemonInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattlePokemonInfo(BattlePokemonInfo other) : this() {
      PokemonData = other.pokemonData_ != null ? other.PokemonData.Clone() : null;
      currentHealth_ = other.currentHealth_;
      currentEnergy_ = other.currentEnergy_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattlePokemonInfo Clone() {
      return new BattlePokemonInfo(this);
    }

    /// <summary>Field number for the "pokemon_data" field.</summary>
    public const int PokemonDataFieldNumber = 1;
    private global::POGOProtos.Data.PokemonData pokemonData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PokemonData PokemonData {
      get { return pokemonData_; }
      set {
        pokemonData_ = value;
      }
    }

    /// <summary>Field number for the "current_health" field.</summary>
    public const int CurrentHealthFieldNumber = 2;
    private int currentHealth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentHealth {
      get { return currentHealth_; }
      set {
        currentHealth_ = value;
      }
    }

    /// <summary>Field number for the "current_energy" field.</summary>
    public const int CurrentEnergyFieldNumber = 3;
    private int currentEnergy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentEnergy {
      get { return currentEnergy_; }
      set {
        currentEnergy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattlePokemonInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattlePokemonInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PokemonData, other.PokemonData)) return false;
      if (CurrentHealth != other.CurrentHealth) return false;
      if (CurrentEnergy != other.CurrentEnergy) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pokemonData_ != null) hash ^= PokemonData.GetHashCode();
      if (CurrentHealth != 0) hash ^= CurrentHealth.GetHashCode();
      if (CurrentEnergy != 0) hash ^= CurrentEnergy.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pokemonData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PokemonData);
      }
      if (CurrentHealth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentHealth);
      }
      if (CurrentEnergy != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrentEnergy);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pokemonData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonData);
      }
      if (CurrentHealth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentHealth);
      }
      if (CurrentEnergy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentEnergy);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattlePokemonInfo other) {
      if (other == null) {
        return;
      }
      if (other.pokemonData_ != null) {
        if (pokemonData_ == null) {
          pokemonData_ = new global::POGOProtos.Data.PokemonData();
        }
        PokemonData.MergeFrom(other.PokemonData);
      }
      if (other.CurrentHealth != 0) {
        CurrentHealth = other.CurrentHealth;
      }
      if (other.CurrentEnergy != 0) {
        CurrentEnergy = other.CurrentEnergy;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (pokemonData_ == null) {
              pokemonData_ = new global::POGOProtos.Data.PokemonData();
            }
            input.ReadMessage(pokemonData_);
            break;
          }
          case 16: {
            CurrentHealth = input.ReadInt32();
            break;
          }
          case 24: {
            CurrentEnergy = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BattleResults : pb::IMessage<BattleResults> {
    private static readonly pb::MessageParser<BattleResults> _parser = new pb::MessageParser<BattleResults>(() => new BattleResults());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleResults> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Battle.POGOProtosDataBattleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleResults() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleResults(BattleResults other) : this() {
      GymState = other.gymState_ != null ? other.GymState.Clone() : null;
      attackers_ = other.attackers_.Clone();
      playerExperienceAwarded_ = other.playerExperienceAwarded_.Clone();
      nextDefenderPokemonId_ = other.nextDefenderPokemonId_;
      gymPointsDelta_ = other.gymPointsDelta_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleResults Clone() {
      return new BattleResults(this);
    }

    /// <summary>Field number for the "gym_state" field.</summary>
    public const int GymStateFieldNumber = 1;
    private global::POGOProtos.Data.Gym.GymState gymState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Gym.GymState GymState {
      get { return gymState_; }
      set {
        gymState_ = value;
      }
    }

    /// <summary>Field number for the "attackers" field.</summary>
    public const int AttackersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.Battle.BattleParticipant> _repeated_attackers_codec
        = pb::FieldCodec.ForMessage(18, global::POGOProtos.Data.Battle.BattleParticipant.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.Battle.BattleParticipant> attackers_ = new pbc::RepeatedField<global::POGOProtos.Data.Battle.BattleParticipant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.Battle.BattleParticipant> Attackers {
      get { return attackers_; }
    }

    /// <summary>Field number for the "player_experience_awarded" field.</summary>
    public const int PlayerExperienceAwardedFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_playerExperienceAwarded_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> playerExperienceAwarded_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PlayerExperienceAwarded {
      get { return playerExperienceAwarded_; }
    }

    /// <summary>Field number for the "next_defender_pokemon_id" field.</summary>
    public const int NextDefenderPokemonIdFieldNumber = 4;
    private long nextDefenderPokemonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NextDefenderPokemonId {
      get { return nextDefenderPokemonId_; }
      set {
        nextDefenderPokemonId_ = value;
      }
    }

    /// <summary>Field number for the "gym_points_delta" field.</summary>
    public const int GymPointsDeltaFieldNumber = 5;
    private int gymPointsDelta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GymPointsDelta {
      get { return gymPointsDelta_; }
      set {
        gymPointsDelta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleResults);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleResults other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GymState, other.GymState)) return false;
      if(!attackers_.Equals(other.attackers_)) return false;
      if(!playerExperienceAwarded_.Equals(other.playerExperienceAwarded_)) return false;
      if (NextDefenderPokemonId != other.NextDefenderPokemonId) return false;
      if (GymPointsDelta != other.GymPointsDelta) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (gymState_ != null) hash ^= GymState.GetHashCode();
      hash ^= attackers_.GetHashCode();
      hash ^= playerExperienceAwarded_.GetHashCode();
      if (NextDefenderPokemonId != 0L) hash ^= NextDefenderPokemonId.GetHashCode();
      if (GymPointsDelta != 0) hash ^= GymPointsDelta.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (gymState_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GymState);
      }
      attackers_.WriteTo(output, _repeated_attackers_codec);
      playerExperienceAwarded_.WriteTo(output, _repeated_playerExperienceAwarded_codec);
      if (NextDefenderPokemonId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NextDefenderPokemonId);
      }
      if (GymPointsDelta != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GymPointsDelta);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (gymState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GymState);
      }
      size += attackers_.CalculateSize(_repeated_attackers_codec);
      size += playerExperienceAwarded_.CalculateSize(_repeated_playerExperienceAwarded_codec);
      if (NextDefenderPokemonId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextDefenderPokemonId);
      }
      if (GymPointsDelta != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GymPointsDelta);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleResults other) {
      if (other == null) {
        return;
      }
      if (other.gymState_ != null) {
        if (gymState_ == null) {
          gymState_ = new global::POGOProtos.Data.Gym.GymState();
        }
        GymState.MergeFrom(other.GymState);
      }
      attackers_.Add(other.attackers_);
      playerExperienceAwarded_.Add(other.playerExperienceAwarded_);
      if (other.NextDefenderPokemonId != 0L) {
        NextDefenderPokemonId = other.NextDefenderPokemonId;
      }
      if (other.GymPointsDelta != 0) {
        GymPointsDelta = other.GymPointsDelta;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (gymState_ == null) {
              gymState_ = new global::POGOProtos.Data.Gym.GymState();
            }
            input.ReadMessage(gymState_);
            break;
          }
          case 18: {
            attackers_.AddEntriesFrom(input, _repeated_attackers_codec);
            break;
          }
          case 26:
          case 24: {
            playerExperienceAwarded_.AddEntriesFrom(input, _repeated_playerExperienceAwarded_codec);
            break;
          }
          case 32: {
            NextDefenderPokemonId = input.ReadInt64();
            break;
          }
          case 40: {
            GymPointsDelta = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BattleLog : pb::IMessage<BattleLog> {
    private static readonly pb::MessageParser<BattleLog> _parser = new pb::MessageParser<BattleLog>(() => new BattleLog());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Battle.POGOProtosDataBattleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleLog(BattleLog other) : this() {
      state_ = other.state_;
      battleType_ = other.battleType_;
      serverMs_ = other.serverMs_;
      battleActions_ = other.battleActions_.Clone();
      battleStartTimestampMs_ = other.battleStartTimestampMs_;
      battleEndTimestampMs_ = other.battleEndTimestampMs_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleLog Clone() {
      return new BattleLog(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::POGOProtos.Data.Battle.BattleState state_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Battle.BattleState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "battle_type" field.</summary>
    public const int BattleTypeFieldNumber = 2;
    private global::POGOProtos.Data.Battle.BattleType battleType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Battle.BattleType BattleType {
      get { return battleType_; }
      set {
        battleType_ = value;
      }
    }

    /// <summary>Field number for the "server_ms" field.</summary>
    public const int ServerMsFieldNumber = 3;
    private long serverMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ServerMs {
      get { return serverMs_; }
      set {
        serverMs_ = value;
      }
    }

    /// <summary>Field number for the "battle_actions" field.</summary>
    public const int BattleActionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.Battle.BattleAction> _repeated_battleActions_codec
        = pb::FieldCodec.ForMessage(34, global::POGOProtos.Data.Battle.BattleAction.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.Battle.BattleAction> battleActions_ = new pbc::RepeatedField<global::POGOProtos.Data.Battle.BattleAction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.Battle.BattleAction> BattleActions {
      get { return battleActions_; }
    }

    /// <summary>Field number for the "battle_start_timestamp_ms" field.</summary>
    public const int BattleStartTimestampMsFieldNumber = 5;
    private long battleStartTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BattleStartTimestampMs {
      get { return battleStartTimestampMs_; }
      set {
        battleStartTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "battle_end_timestamp_ms" field.</summary>
    public const int BattleEndTimestampMsFieldNumber = 6;
    private long battleEndTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BattleEndTimestampMs {
      get { return battleEndTimestampMs_; }
      set {
        battleEndTimestampMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (BattleType != other.BattleType) return false;
      if (ServerMs != other.ServerMs) return false;
      if(!battleActions_.Equals(other.battleActions_)) return false;
      if (BattleStartTimestampMs != other.BattleStartTimestampMs) return false;
      if (BattleEndTimestampMs != other.BattleEndTimestampMs) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (BattleType != 0) hash ^= BattleType.GetHashCode();
      if (ServerMs != 0L) hash ^= ServerMs.GetHashCode();
      hash ^= battleActions_.GetHashCode();
      if (BattleStartTimestampMs != 0L) hash ^= BattleStartTimestampMs.GetHashCode();
      if (BattleEndTimestampMs != 0L) hash ^= BattleEndTimestampMs.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (BattleType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BattleType);
      }
      if (ServerMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ServerMs);
      }
      battleActions_.WriteTo(output, _repeated_battleActions_codec);
      if (BattleStartTimestampMs != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(BattleStartTimestampMs);
      }
      if (BattleEndTimestampMs != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BattleEndTimestampMs);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (BattleType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BattleType);
      }
      if (ServerMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerMs);
      }
      size += battleActions_.CalculateSize(_repeated_battleActions_codec);
      if (BattleStartTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BattleStartTimestampMs);
      }
      if (BattleEndTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BattleEndTimestampMs);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleLog other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.BattleType != 0) {
        BattleType = other.BattleType;
      }
      if (other.ServerMs != 0L) {
        ServerMs = other.ServerMs;
      }
      battleActions_.Add(other.battleActions_);
      if (other.BattleStartTimestampMs != 0L) {
        BattleStartTimestampMs = other.BattleStartTimestampMs;
      }
      if (other.BattleEndTimestampMs != 0L) {
        BattleEndTimestampMs = other.BattleEndTimestampMs;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            state_ = (global::POGOProtos.Data.Battle.BattleState) input.ReadEnum();
            break;
          }
          case 16: {
            battleType_ = (global::POGOProtos.Data.Battle.BattleType) input.ReadEnum();
            break;
          }
          case 24: {
            ServerMs = input.ReadInt64();
            break;
          }
          case 34: {
            battleActions_.AddEntriesFrom(input, _repeated_battleActions_codec);
            break;
          }
          case 40: {
            BattleStartTimestampMs = input.ReadInt64();
            break;
          }
          case 48: {
            BattleEndTimestampMs = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BattleParticipant : pb::IMessage<BattleParticipant> {
    private static readonly pb::MessageParser<BattleParticipant> _parser = new pb::MessageParser<BattleParticipant>(() => new BattleParticipant());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleParticipant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Battle.POGOProtosDataBattleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleParticipant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleParticipant(BattleParticipant other) : this() {
      ActivePokemon = other.activePokemon_ != null ? other.ActivePokemon.Clone() : null;
      TrainerPublicProfile = other.trainerPublicProfile_ != null ? other.TrainerPublicProfile.Clone() : null;
      reversePokemon_ = other.reversePokemon_.Clone();
      defeatedPokemon_ = other.defeatedPokemon_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleParticipant Clone() {
      return new BattleParticipant(this);
    }

    /// <summary>Field number for the "active_pokemon" field.</summary>
    public const int ActivePokemonFieldNumber = 1;
    private global::POGOProtos.Data.Battle.BattlePokemonInfo activePokemon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Battle.BattlePokemonInfo ActivePokemon {
      get { return activePokemon_; }
      set {
        activePokemon_ = value;
      }
    }

    /// <summary>Field number for the "trainer_public_profile" field.</summary>
    public const int TrainerPublicProfileFieldNumber = 2;
    private global::POGOProtos.Data.Player.PlayerPublicProfile trainerPublicProfile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Player.PlayerPublicProfile TrainerPublicProfile {
      get { return trainerPublicProfile_; }
      set {
        trainerPublicProfile_ = value;
      }
    }

    /// <summary>Field number for the "reverse_pokemon" field.</summary>
    public const int ReversePokemonFieldNumber = 3;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.Battle.BattlePokemonInfo> _repeated_reversePokemon_codec
        = pb::FieldCodec.ForMessage(26, global::POGOProtos.Data.Battle.BattlePokemonInfo.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.Battle.BattlePokemonInfo> reversePokemon_ = new pbc::RepeatedField<global::POGOProtos.Data.Battle.BattlePokemonInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.Battle.BattlePokemonInfo> ReversePokemon {
      get { return reversePokemon_; }
    }

    /// <summary>Field number for the "defeated_pokemon" field.</summary>
    public const int DefeatedPokemonFieldNumber = 4;
    private static readonly pb::FieldCodec<global::POGOProtos.Data.Battle.BattlePokemonInfo> _repeated_defeatedPokemon_codec
        = pb::FieldCodec.ForMessage(34, global::POGOProtos.Data.Battle.BattlePokemonInfo.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Data.Battle.BattlePokemonInfo> defeatedPokemon_ = new pbc::RepeatedField<global::POGOProtos.Data.Battle.BattlePokemonInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Data.Battle.BattlePokemonInfo> DefeatedPokemon {
      get { return defeatedPokemon_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleParticipant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleParticipant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ActivePokemon, other.ActivePokemon)) return false;
      if (!object.Equals(TrainerPublicProfile, other.TrainerPublicProfile)) return false;
      if(!reversePokemon_.Equals(other.reversePokemon_)) return false;
      if(!defeatedPokemon_.Equals(other.defeatedPokemon_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (activePokemon_ != null) hash ^= ActivePokemon.GetHashCode();
      if (trainerPublicProfile_ != null) hash ^= TrainerPublicProfile.GetHashCode();
      hash ^= reversePokemon_.GetHashCode();
      hash ^= defeatedPokemon_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (activePokemon_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ActivePokemon);
      }
      if (trainerPublicProfile_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TrainerPublicProfile);
      }
      reversePokemon_.WriteTo(output, _repeated_reversePokemon_codec);
      defeatedPokemon_.WriteTo(output, _repeated_defeatedPokemon_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (activePokemon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivePokemon);
      }
      if (trainerPublicProfile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrainerPublicProfile);
      }
      size += reversePokemon_.CalculateSize(_repeated_reversePokemon_codec);
      size += defeatedPokemon_.CalculateSize(_repeated_defeatedPokemon_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleParticipant other) {
      if (other == null) {
        return;
      }
      if (other.activePokemon_ != null) {
        if (activePokemon_ == null) {
          activePokemon_ = new global::POGOProtos.Data.Battle.BattlePokemonInfo();
        }
        ActivePokemon.MergeFrom(other.ActivePokemon);
      }
      if (other.trainerPublicProfile_ != null) {
        if (trainerPublicProfile_ == null) {
          trainerPublicProfile_ = new global::POGOProtos.Data.Player.PlayerPublicProfile();
        }
        TrainerPublicProfile.MergeFrom(other.TrainerPublicProfile);
      }
      reversePokemon_.Add(other.reversePokemon_);
      defeatedPokemon_.Add(other.defeatedPokemon_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (activePokemon_ == null) {
              activePokemon_ = new global::POGOProtos.Data.Battle.BattlePokemonInfo();
            }
            input.ReadMessage(activePokemon_);
            break;
          }
          case 18: {
            if (trainerPublicProfile_ == null) {
              trainerPublicProfile_ = new global::POGOProtos.Data.Player.PlayerPublicProfile();
            }
            input.ReadMessage(trainerPublicProfile_);
            break;
          }
          case 26: {
            reversePokemon_.AddEntriesFrom(input, _repeated_reversePokemon_codec);
            break;
          }
          case 34: {
            defeatedPokemon_.AddEntriesFrom(input, _repeated_defeatedPokemon_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BattleAction : pb::IMessage<BattleAction> {
    private static readonly pb::MessageParser<BattleAction> _parser = new pb::MessageParser<BattleAction>(() => new BattleAction());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Battle.POGOProtosDataBattleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleAction(BattleAction other) : this() {
      type_ = other.type_;
      actionStartMs_ = other.actionStartMs_;
      durationMs_ = other.durationMs_;
      energyDelta_ = other.energyDelta_;
      attackerIndex_ = other.attackerIndex_;
      targetIndex_ = other.targetIndex_;
      activePokemonId_ = other.activePokemonId_;
      PlayerJoined = other.playerJoined_ != null ? other.PlayerJoined.Clone() : null;
      BattleResults = other.battleResults_ != null ? other.BattleResults.Clone() : null;
      damageWindowsStartTimestampMss_ = other.damageWindowsStartTimestampMss_;
      damageWindowsEndTimestampMss_ = other.damageWindowsEndTimestampMss_;
      PlayerLeft = other.playerLeft_ != null ? other.PlayerLeft.Clone() : null;
      targetPokemonId_ = other.targetPokemonId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleAction Clone() {
      return new BattleAction(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::POGOProtos.Data.Battle.BattleActionType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Battle.BattleActionType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "action_start_ms" field.</summary>
    public const int ActionStartMsFieldNumber = 2;
    private long actionStartMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ActionStartMs {
      get { return actionStartMs_; }
      set {
        actionStartMs_ = value;
      }
    }

    /// <summary>Field number for the "duration_ms" field.</summary>
    public const int DurationMsFieldNumber = 3;
    private int durationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DurationMs {
      get { return durationMs_; }
      set {
        durationMs_ = value;
      }
    }

    /// <summary>Field number for the "energy_delta" field.</summary>
    public const int EnergyDeltaFieldNumber = 5;
    private int energyDelta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnergyDelta {
      get { return energyDelta_; }
      set {
        energyDelta_ = value;
      }
    }

    /// <summary>Field number for the "attacker_index" field.</summary>
    public const int AttackerIndexFieldNumber = 6;
    private int attackerIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackerIndex {
      get { return attackerIndex_; }
      set {
        attackerIndex_ = value;
      }
    }

    /// <summary>Field number for the "target_index" field.</summary>
    public const int TargetIndexFieldNumber = 7;
    private int targetIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetIndex {
      get { return targetIndex_; }
      set {
        targetIndex_ = value;
      }
    }

    /// <summary>Field number for the "active_pokemon_id" field.</summary>
    public const int ActivePokemonIdFieldNumber = 8;
    private ulong activePokemonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ActivePokemonId {
      get { return activePokemonId_; }
      set {
        activePokemonId_ = value;
      }
    }

    /// <summary>Field number for the "player_joined" field.</summary>
    public const int PlayerJoinedFieldNumber = 9;
    private global::POGOProtos.Data.Battle.BattleParticipant playerJoined_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Battle.BattleParticipant PlayerJoined {
      get { return playerJoined_; }
      set {
        playerJoined_ = value;
      }
    }

    /// <summary>Field number for the "battle_results" field.</summary>
    public const int BattleResultsFieldNumber = 10;
    private global::POGOProtos.Data.Battle.BattleResults battleResults_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Battle.BattleResults BattleResults {
      get { return battleResults_; }
      set {
        battleResults_ = value;
      }
    }

    /// <summary>Field number for the "damage_windows_start_timestamp_mss" field.</summary>
    public const int DamageWindowsStartTimestampMssFieldNumber = 11;
    private long damageWindowsStartTimestampMss_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DamageWindowsStartTimestampMss {
      get { return damageWindowsStartTimestampMss_; }
      set {
        damageWindowsStartTimestampMss_ = value;
      }
    }

    /// <summary>Field number for the "damage_windows_end_timestamp_mss" field.</summary>
    public const int DamageWindowsEndTimestampMssFieldNumber = 12;
    private long damageWindowsEndTimestampMss_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DamageWindowsEndTimestampMss {
      get { return damageWindowsEndTimestampMss_; }
      set {
        damageWindowsEndTimestampMss_ = value;
      }
    }

    /// <summary>Field number for the "player_left" field.</summary>
    public const int PlayerLeftFieldNumber = 13;
    private global::POGOProtos.Data.Battle.BattleParticipant playerLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Battle.BattleParticipant PlayerLeft {
      get { return playerLeft_; }
      set {
        playerLeft_ = value;
      }
    }

    /// <summary>Field number for the "target_pokemon_id" field.</summary>
    public const int TargetPokemonIdFieldNumber = 14;
    private ulong targetPokemonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TargetPokemonId {
      get { return targetPokemonId_; }
      set {
        targetPokemonId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (ActionStartMs != other.ActionStartMs) return false;
      if (DurationMs != other.DurationMs) return false;
      if (EnergyDelta != other.EnergyDelta) return false;
      if (AttackerIndex != other.AttackerIndex) return false;
      if (TargetIndex != other.TargetIndex) return false;
      if (ActivePokemonId != other.ActivePokemonId) return false;
      if (!object.Equals(PlayerJoined, other.PlayerJoined)) return false;
      if (!object.Equals(BattleResults, other.BattleResults)) return false;
      if (DamageWindowsStartTimestampMss != other.DamageWindowsStartTimestampMss) return false;
      if (DamageWindowsEndTimestampMss != other.DamageWindowsEndTimestampMss) return false;
      if (!object.Equals(PlayerLeft, other.PlayerLeft)) return false;
      if (TargetPokemonId != other.TargetPokemonId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (ActionStartMs != 0L) hash ^= ActionStartMs.GetHashCode();
      if (DurationMs != 0) hash ^= DurationMs.GetHashCode();
      if (EnergyDelta != 0) hash ^= EnergyDelta.GetHashCode();
      if (AttackerIndex != 0) hash ^= AttackerIndex.GetHashCode();
      if (TargetIndex != 0) hash ^= TargetIndex.GetHashCode();
      if (ActivePokemonId != 0UL) hash ^= ActivePokemonId.GetHashCode();
      if (playerJoined_ != null) hash ^= PlayerJoined.GetHashCode();
      if (battleResults_ != null) hash ^= BattleResults.GetHashCode();
      if (DamageWindowsStartTimestampMss != 0L) hash ^= DamageWindowsStartTimestampMss.GetHashCode();
      if (DamageWindowsEndTimestampMss != 0L) hash ^= DamageWindowsEndTimestampMss.GetHashCode();
      if (playerLeft_ != null) hash ^= PlayerLeft.GetHashCode();
      if (TargetPokemonId != 0UL) hash ^= TargetPokemonId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (ActionStartMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ActionStartMs);
      }
      if (DurationMs != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DurationMs);
      }
      if (EnergyDelta != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EnergyDelta);
      }
      if (AttackerIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttackerIndex);
      }
      if (TargetIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TargetIndex);
      }
      if (ActivePokemonId != 0UL) {
        output.WriteRawTag(65);
        output.WriteFixed64(ActivePokemonId);
      }
      if (playerJoined_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PlayerJoined);
      }
      if (battleResults_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(BattleResults);
      }
      if (DamageWindowsStartTimestampMss != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(DamageWindowsStartTimestampMss);
      }
      if (DamageWindowsEndTimestampMss != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(DamageWindowsEndTimestampMss);
      }
      if (playerLeft_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PlayerLeft);
      }
      if (TargetPokemonId != 0UL) {
        output.WriteRawTag(113);
        output.WriteFixed64(TargetPokemonId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ActionStartMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ActionStartMs);
      }
      if (DurationMs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DurationMs);
      }
      if (EnergyDelta != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnergyDelta);
      }
      if (AttackerIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackerIndex);
      }
      if (TargetIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetIndex);
      }
      if (ActivePokemonId != 0UL) {
        size += 1 + 8;
      }
      if (playerJoined_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerJoined);
      }
      if (battleResults_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleResults);
      }
      if (DamageWindowsStartTimestampMss != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DamageWindowsStartTimestampMss);
      }
      if (DamageWindowsEndTimestampMss != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DamageWindowsEndTimestampMss);
      }
      if (playerLeft_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerLeft);
      }
      if (TargetPokemonId != 0UL) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleAction other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.ActionStartMs != 0L) {
        ActionStartMs = other.ActionStartMs;
      }
      if (other.DurationMs != 0) {
        DurationMs = other.DurationMs;
      }
      if (other.EnergyDelta != 0) {
        EnergyDelta = other.EnergyDelta;
      }
      if (other.AttackerIndex != 0) {
        AttackerIndex = other.AttackerIndex;
      }
      if (other.TargetIndex != 0) {
        TargetIndex = other.TargetIndex;
      }
      if (other.ActivePokemonId != 0UL) {
        ActivePokemonId = other.ActivePokemonId;
      }
      if (other.playerJoined_ != null) {
        if (playerJoined_ == null) {
          playerJoined_ = new global::POGOProtos.Data.Battle.BattleParticipant();
        }
        PlayerJoined.MergeFrom(other.PlayerJoined);
      }
      if (other.battleResults_ != null) {
        if (battleResults_ == null) {
          battleResults_ = new global::POGOProtos.Data.Battle.BattleResults();
        }
        BattleResults.MergeFrom(other.BattleResults);
      }
      if (other.DamageWindowsStartTimestampMss != 0L) {
        DamageWindowsStartTimestampMss = other.DamageWindowsStartTimestampMss;
      }
      if (other.DamageWindowsEndTimestampMss != 0L) {
        DamageWindowsEndTimestampMss = other.DamageWindowsEndTimestampMss;
      }
      if (other.playerLeft_ != null) {
        if (playerLeft_ == null) {
          playerLeft_ = new global::POGOProtos.Data.Battle.BattleParticipant();
        }
        PlayerLeft.MergeFrom(other.PlayerLeft);
      }
      if (other.TargetPokemonId != 0UL) {
        TargetPokemonId = other.TargetPokemonId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            type_ = (global::POGOProtos.Data.Battle.BattleActionType) input.ReadEnum();
            break;
          }
          case 16: {
            ActionStartMs = input.ReadInt64();
            break;
          }
          case 24: {
            DurationMs = input.ReadInt32();
            break;
          }
          case 40: {
            EnergyDelta = input.ReadInt32();
            break;
          }
          case 48: {
            AttackerIndex = input.ReadInt32();
            break;
          }
          case 56: {
            TargetIndex = input.ReadInt32();
            break;
          }
          case 65: {
            ActivePokemonId = input.ReadFixed64();
            break;
          }
          case 74: {
            if (playerJoined_ == null) {
              playerJoined_ = new global::POGOProtos.Data.Battle.BattleParticipant();
            }
            input.ReadMessage(playerJoined_);
            break;
          }
          case 82: {
            if (battleResults_ == null) {
              battleResults_ = new global::POGOProtos.Data.Battle.BattleResults();
            }
            input.ReadMessage(battleResults_);
            break;
          }
          case 88: {
            DamageWindowsStartTimestampMss = input.ReadInt64();
            break;
          }
          case 96: {
            DamageWindowsEndTimestampMss = input.ReadInt64();
            break;
          }
          case 106: {
            if (playerLeft_ == null) {
              playerLeft_ = new global::POGOProtos.Data.Battle.BattleParticipant();
            }
            input.ReadMessage(playerLeft_);
            break;
          }
          case 113: {
            TargetPokemonId = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
