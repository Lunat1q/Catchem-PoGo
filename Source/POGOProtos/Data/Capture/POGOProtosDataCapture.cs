// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Data.Capture.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data.Capture {

  /// <summary>Holder for reflection information generated from POGOProtos.Data.Capture.proto</summary>
  public static partial class POGOProtosDataCaptureReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos.Data.Capture.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static POGOProtosDataCaptureReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1QT0dPUHJvdG9zLkRhdGEuQ2FwdHVyZS5wcm90bxIXUE9HT1Byb3Rvcy5E",
            "YXRhLkNhcHR1cmUaH1BPR09Qcm90b3MuSW52ZW50b3J5Lkl0ZW0ucHJvdG8a",
            "FlBPR09Qcm90b3MuRW51bXMucHJvdG8ilQEKEkNhcHR1cmVQcm9iYWJpbGl0",
            "eRI8Cg1wb2tlYmFsbF90eXBlGAEgAygOMiEuUE9HT1Byb3Rvcy5JbnZlbnRv",
            "cnkuSXRlbS5JdGVtSWRCAhABEh8KE2NhcHR1cmVfcHJvYmFiaWxpdHkYAiAD",
            "KAJCAhABEiAKGHJldGljbGVfZGlmZmljdWx0eV9zY2FsZRgMIAEoASJyCgxD",
            "YXB0dXJlQXdhcmQSNQoNYWN0aXZpdHlfdHlwZRgBIAMoDjIeLlBPR09Qcm90",
            "b3MuRW51bXMuQWN0aXZpdHlUeXBlEgoKAnhwGAIgAygFEg0KBWNhbmR5GAMg",
            "AygFEhAKCHN0YXJkdXN0GAQgAygFUABQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Inventory.Item.POGOProtosInventoryItemReflection.Descriptor, global::POGOProtos.Enums.POGOProtosEnumsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Capture.CaptureProbability), global::POGOProtos.Data.Capture.CaptureProbability.Parser, new[]{ "PokeballType", "CaptureProbability_", "ReticleDifficultyScale" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.Capture.CaptureAward), global::POGOProtos.Data.Capture.CaptureAward.Parser, new[]{ "ActivityType", "Xp", "Candy", "Stardust" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CaptureProbability : pb::IMessage<CaptureProbability> {
    private static readonly pb::MessageParser<CaptureProbability> _parser = new pb::MessageParser<CaptureProbability>(() => new CaptureProbability());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CaptureProbability> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Capture.POGOProtosDataCaptureReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CaptureProbability() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CaptureProbability(CaptureProbability other) : this() {
      pokeballType_ = other.pokeballType_.Clone();
      captureProbability_ = other.captureProbability_.Clone();
      reticleDifficultyScale_ = other.reticleDifficultyScale_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CaptureProbability Clone() {
      return new CaptureProbability(this);
    }

    /// <summary>Field number for the "pokeball_type" field.</summary>
    public const int PokeballTypeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::POGOProtos.Inventory.Item.ItemId> _repeated_pokeballType_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::POGOProtos.Inventory.Item.ItemId) x);
    private readonly pbc::RepeatedField<global::POGOProtos.Inventory.Item.ItemId> pokeballType_ = new pbc::RepeatedField<global::POGOProtos.Inventory.Item.ItemId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Inventory.Item.ItemId> PokeballType {
      get { return pokeballType_; }
    }

    /// <summary>Field number for the "capture_probability" field.</summary>
    public const int CaptureProbability_FieldNumber = 2;
    private static readonly pb::FieldCodec<float> _repeated_captureProbability_codec
        = pb::FieldCodec.ForFloat(18);
    private readonly pbc::RepeatedField<float> captureProbability_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> CaptureProbability_ {
      get { return captureProbability_; }
    }

    /// <summary>Field number for the "reticle_difficulty_scale" field.</summary>
    public const int ReticleDifficultyScaleFieldNumber = 12;
    private double reticleDifficultyScale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ReticleDifficultyScale {
      get { return reticleDifficultyScale_; }
      set {
        reticleDifficultyScale_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CaptureProbability);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CaptureProbability other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pokeballType_.Equals(other.pokeballType_)) return false;
      if(!captureProbability_.Equals(other.captureProbability_)) return false;
      if (ReticleDifficultyScale != other.ReticleDifficultyScale) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pokeballType_.GetHashCode();
      hash ^= captureProbability_.GetHashCode();
      if (ReticleDifficultyScale != 0D) hash ^= ReticleDifficultyScale.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pokeballType_.WriteTo(output, _repeated_pokeballType_codec);
      captureProbability_.WriteTo(output, _repeated_captureProbability_codec);
      if (ReticleDifficultyScale != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(ReticleDifficultyScale);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pokeballType_.CalculateSize(_repeated_pokeballType_codec);
      size += captureProbability_.CalculateSize(_repeated_captureProbability_codec);
      if (ReticleDifficultyScale != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CaptureProbability other) {
      if (other == null) {
        return;
      }
      pokeballType_.Add(other.pokeballType_);
      captureProbability_.Add(other.captureProbability_);
      if (other.ReticleDifficultyScale != 0D) {
        ReticleDifficultyScale = other.ReticleDifficultyScale;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            pokeballType_.AddEntriesFrom(input, _repeated_pokeballType_codec);
            break;
          }
          case 18:
          case 21: {
            captureProbability_.AddEntriesFrom(input, _repeated_captureProbability_codec);
            break;
          }
          case 97: {
            ReticleDifficultyScale = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CaptureAward : pb::IMessage<CaptureAward> {
    private static readonly pb::MessageParser<CaptureAward> _parser = new pb::MessageParser<CaptureAward>(() => new CaptureAward());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CaptureAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.Capture.POGOProtosDataCaptureReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CaptureAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CaptureAward(CaptureAward other) : this() {
      activityType_ = other.activityType_.Clone();
      xp_ = other.xp_.Clone();
      candy_ = other.candy_.Clone();
      stardust_ = other.stardust_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CaptureAward Clone() {
      return new CaptureAward(this);
    }

    /// <summary>Field number for the "activity_type" field.</summary>
    public const int ActivityTypeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::POGOProtos.Enums.ActivityType> _repeated_activityType_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::POGOProtos.Enums.ActivityType) x);
    private readonly pbc::RepeatedField<global::POGOProtos.Enums.ActivityType> activityType_ = new pbc::RepeatedField<global::POGOProtos.Enums.ActivityType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Enums.ActivityType> ActivityType {
      get { return activityType_; }
    }

    /// <summary>Field number for the "xp" field.</summary>
    public const int XpFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_xp_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> xp_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Xp {
      get { return xp_; }
    }

    /// <summary>Field number for the "candy" field.</summary>
    public const int CandyFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_candy_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> candy_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Candy {
      get { return candy_; }
    }

    /// <summary>Field number for the "stardust" field.</summary>
    public const int StardustFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_stardust_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> stardust_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Stardust {
      get { return stardust_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CaptureAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CaptureAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!activityType_.Equals(other.activityType_)) return false;
      if(!xp_.Equals(other.xp_)) return false;
      if(!candy_.Equals(other.candy_)) return false;
      if(!stardust_.Equals(other.stardust_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= activityType_.GetHashCode();
      hash ^= xp_.GetHashCode();
      hash ^= candy_.GetHashCode();
      hash ^= stardust_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      activityType_.WriteTo(output, _repeated_activityType_codec);
      xp_.WriteTo(output, _repeated_xp_codec);
      candy_.WriteTo(output, _repeated_candy_codec);
      stardust_.WriteTo(output, _repeated_stardust_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += activityType_.CalculateSize(_repeated_activityType_codec);
      size += xp_.CalculateSize(_repeated_xp_codec);
      size += candy_.CalculateSize(_repeated_candy_codec);
      size += stardust_.CalculateSize(_repeated_stardust_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CaptureAward other) {
      if (other == null) {
        return;
      }
      activityType_.Add(other.activityType_);
      xp_.Add(other.xp_);
      candy_.Add(other.candy_);
      stardust_.Add(other.stardust_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            activityType_.AddEntriesFrom(input, _repeated_activityType_codec);
            break;
          }
          case 18:
          case 16: {
            xp_.AddEntriesFrom(input, _repeated_xp_codec);
            break;
          }
          case 26:
          case 24: {
            candy_.AddEntriesFrom(input, _repeated_candy_codec);
            break;
          }
          case 34:
          case 32: {
            stardust_.AddEntriesFrom(input, _repeated_stardust_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
